

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 09 01:46:29 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31  0000                     
    32                           ; Version 2.05
    33                           ; Generated 20/12/2018 GMT
    34                           ; 
    35                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F45K22 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     _CCPTMRS0	set	3913
    67  0000                     _ANSELD	set	3899
    68  0000                     _ANSELB	set	3897
    69  0000                     _ANSELA	set	3896
    70  0000                     _ADRES	set	4035
    71  0000                     _PORTDbits	set	3971
    72  0000                     _T2CONbits	set	4026
    73  0000                     _CCPR2L	set	3943
    74  0000                     _CCP2CON	set	3942
    75  0000                     _PR2	set	4027
    76  0000                     _TRISBbits	set	3987
    77  0000                     _ADCON0bits	set	4034
    78  0000                     _ADCON2	set	4032
    79  0000                     _ADCON1	set	4033
    80  0000                     _ADCON0	set	4034
    81  0000                     _TXREG	set	4013
    82  0000                     _PIR1bits	set	3998
    83  0000                     _BAUDCON1	set	4024
    84  0000                     _TXSTA1	set	4012
    85  0000                     _RCSTA1	set	4011
    86  0000                     _SPBRG1	set	4015
    87  0000                     _TRISCbits	set	3988
    88  0000                     _TRISD	set	3989
    89  0000                     _LATD	set	3980
    90  0000                     _TRISB	set	3987
    91  0000                     _LATB	set	3978
    92  0000                     _TRISA	set	3986
    93  0000                     _LATA	set	3977
    94  0000                     _OSCCONbits	set	4051
    95  0000                     _OSCTUNE	set	3995
    96  0000                     _OSCCON2	set	4050
    97  0000                     _OSCCON	set	4051
    98                           
    99                           	psect	smallconst
   100  000600                     __psmallconst:
   101                           	opt callstack 0
   102  000600  00                 	db	0
   103  000601                     STR_3:
   104  000601  0A                 	db	10
   105  000602  0D                 	db	13
   106  000603  00                 	db	0
   107  000604                     STR_2:
   108  000604  25                 	db	37
   109  000605  64                 	db	100	;'d'
   110  000606  00                 	db	0
   111  000607                     STR_1:
   112  000607  2C                 	db	44
   113  000608  00                 	db	0
   114                           
   115                           ; #config settings
   116  000609  00                 	db	0	; dummy byte at the end
   117  0000                     
   118                           	psect	cinit
   119  000EF2                     __pcinit:
   120                           	opt callstack 0
   121  000EF2                     start_initialization:
   122                           	opt callstack 0
   123  000EF2                     __initialization:
   124                           	opt callstack 0
   125                           
   126                           ; Clear objects allocated to BANK0 (40 bytes)
   127  000EF2  EE00  F060         	lfsr	0,__pbssBANK0
   128  000EF6  0E28               	movlw	40
   129  000EF8                     clear_0:
   130  000EF8  6AEE               	clrf	postinc0,c
   131  000EFA  06E8               	decf	wreg,f,c
   132  000EFC  E1FD               	bnz	clear_0
   133  000EFE                     end_of_initialization:
   134                           	opt callstack 0
   135  000EFE                     __end_of__initialization:
   136                           	opt callstack 0
   137  000EFE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   138  000F00  6EF8               	movwf	tblptru,c
   139  000F02  0E06               	movlw	high __Lsmallconst
   140  000F04  6EF7               	movwf	tblptrh,c
   141  000F06  0100               	movlb	0
   142  000F08  EF6C  F006         	goto	_main	;jump to C main() function
   143                           
   144                           	psect	bssBANK0
   145  000060                     __pbssBANK0:
   146                           	opt callstack 0
   147  000060                     _nout:
   148                           	opt callstack 0
   149  000060                     	ds	2
   150  000062                     _width:
   151                           	opt callstack 0
   152  000062                     	ds	2
   153  000064                     _prec:
   154                           	opt callstack 0
   155  000064                     	ds	2
   156  000066                     _flags:
   157                           	opt callstack 0
   158  000066                     	ds	2
   159  000068                     _dbuf:
   160                           	opt callstack 0
   161  000068                     	ds	32
   162                           
   163                           	psect	cstackBANK0
   164  000088                     __pcstackBANK0:
   165                           	opt callstack 0
   166  000088                     	ds	2
   167  00008A                     printf@ap:
   168                           	opt callstack 0
   169                           
   170                           ; 2 bytes @ 0x2
   171  00008A                     	ds	2
   172                           
   173                           	psect	cstackCOMRAM
   174  000001                     __pcstackCOMRAM:
   175                           	opt callstack 0
   176  000001                     ?_strlen:
   177                           	opt callstack 0
   178  000001                     ?_getADRES:
   179                           	opt callstack 0
   180  000001                     ?___aodiv:
   181                           	opt callstack 0
   182  000001                     ?___aomod:
   183                           	opt callstack 0
   184  000001                     putch@data:
   185                           	opt callstack 0
   186  000001                     strlen@s:
   187                           	opt callstack 0
   188  000001                     ___aodiv@dividend:
   189                           	opt callstack 0
   190  000001                     ___aomod@dividend:
   191                           	opt callstack 0
   192                           
   193                           ; 8 bytes @ 0x0
   194  000001                     	ds	1
   195  000002                     fputc@c:
   196                           	opt callstack 0
   197                           
   198                           ; 2 bytes @ 0x1
   199  000002                     	ds	1
   200  000003                     strlen@a:
   201                           	opt callstack 0
   202                           
   203                           ; 2 bytes @ 0x2
   204  000003                     	ds	1
   205  000004                     fputc@fp:
   206                           	opt callstack 0
   207                           
   208                           ; 2 bytes @ 0x3
   209  000004                     	ds	2
   210  000006                     ??_fputc:
   211                           
   212                           ; 1 bytes @ 0x5
   213  000006                     	ds	3
   214  000009                     ___aodiv@divisor:
   215                           	opt callstack 0
   216  000009                     ___aomod@divisor:
   217                           	opt callstack 0
   218                           
   219                           ; 8 bytes @ 0x8
   220  000009                     	ds	2
   221  00000B                     fputs@s:
   222                           	opt callstack 0
   223                           
   224                           ; 2 bytes @ 0xA
   225  00000B                     	ds	2
   226  00000D                     fputs@fp:
   227                           	opt callstack 0
   228                           
   229                           ; 2 bytes @ 0xC
   230  00000D                     	ds	2
   231  00000F                     fputs@c:
   232                           	opt callstack 0
   233                           
   234                           ; 1 bytes @ 0xE
   235  00000F                     	ds	1
   236  000010                     fputs@i:
   237                           	opt callstack 0
   238                           
   239                           ; 2 bytes @ 0xF
   240  000010                     	ds	1
   241  000011                     ___aodiv@counter:
   242                           	opt callstack 0
   243  000011                     ___aomod@counter:
   244                           	opt callstack 0
   245                           
   246                           ; 1 bytes @ 0x10
   247  000011                     	ds	1
   248  000012                     ?_pad:
   249                           	opt callstack 0
   250  000012                     ___aodiv@sign:
   251                           	opt callstack 0
   252  000012                     ___aomod@sign:
   253                           	opt callstack 0
   254  000012                     pad@fp:
   255                           	opt callstack 0
   256                           
   257                           ; 2 bytes @ 0x11
   258  000012                     	ds	1
   259  000013                     ?_abs:
   260                           	opt callstack 0
   261  000013                     abs@a:
   262                           	opt callstack 0
   263  000013                     ___aodiv@quotient:
   264                           	opt callstack 0
   265                           
   266                           ; 8 bytes @ 0x12
   267  000013                     	ds	1
   268  000014                     pad@buf:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x13
   272  000014                     	ds	1
   273  000015                     ??_abs:
   274                           
   275                           ; 1 bytes @ 0x14
   276  000015                     	ds	1
   277  000016                     pad@p:
   278                           	opt callstack 0
   279                           
   280                           ; 2 bytes @ 0x15
   281  000016                     	ds	2
   282  000018                     ??_pad:
   283                           
   284                           ; 1 bytes @ 0x17
   285  000018                     	ds	1
   286  000019                     pad@i:
   287                           	opt callstack 0
   288                           
   289                           ; 2 bytes @ 0x18
   290  000019                     	ds	2
   291  00001B                     pad@w:
   292                           	opt callstack 0
   293                           
   294                           ; 2 bytes @ 0x1A
   295  00001B                     	ds	2
   296  00001D                     ?_dtoa:
   297                           	opt callstack 0
   298  00001D                     dtoa@fp:
   299                           	opt callstack 0
   300                           
   301                           ; 2 bytes @ 0x1C
   302  00001D                     	ds	2
   303  00001F                     dtoa@d:
   304                           	opt callstack 0
   305                           
   306                           ; 8 bytes @ 0x1E
   307  00001F                     	ds	8
   308  000027                     ??_dtoa:
   309                           
   310                           ; 1 bytes @ 0x26
   311  000027                     	ds	8
   312  00002F                     _dtoa$536:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x2E
   316  00002F                     	ds	2
   317  000031                     dtoa@p:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0x30
   321  000031                     	ds	2
   322  000033                     dtoa@w:
   323                           	opt callstack 0
   324                           
   325                           ; 2 bytes @ 0x32
   326  000033                     	ds	2
   327  000035                     dtoa@s:
   328                           	opt callstack 0
   329                           
   330                           ; 2 bytes @ 0x34
   331  000035                     	ds	2
   332  000037                     dtoa@n:
   333                           	opt callstack 0
   334                           
   335                           ; 8 bytes @ 0x36
   336  000037                     	ds	8
   337  00003F                     dtoa@i:
   338                           	opt callstack 0
   339                           
   340                           ; 2 bytes @ 0x3E
   341  00003F                     	ds	2
   342  000041                     ?_vfpfcnvrt:
   343                           	opt callstack 0
   344  000041                     vfpfcnvrt@fp:
   345                           	opt callstack 0
   346                           
   347                           ; 2 bytes @ 0x40
   348  000041                     	ds	2
   349  000043                     vfpfcnvrt@fmt:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0x42
   353  000043                     	ds	2
   354  000045                     vfpfcnvrt@ap:
   355                           	opt callstack 0
   356                           
   357                           ; 2 bytes @ 0x44
   358  000045                     	ds	2
   359  000047                     ??_vfpfcnvrt:
   360                           
   361                           ; 1 bytes @ 0x46
   362  000047                     	ds	2
   363  000049                     vfpfcnvrt@ll:
   364                           	opt callstack 0
   365                           
   366                           ; 8 bytes @ 0x48
   367  000049                     	ds	8
   368  000051                     ?_vfprintf:
   369                           	opt callstack 0
   370  000051                     vfprintf@fp:
   371                           	opt callstack 0
   372                           
   373                           ; 2 bytes @ 0x50
   374  000051                     	ds	2
   375  000053                     vfprintf@fmt:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0x52
   379  000053                     	ds	2
   380  000055                     vfprintf@ap:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x54
   384  000055                     	ds	2
   385  000057                     vfprintf@cfmt:
   386                           	opt callstack 0
   387                           
   388                           ; 2 bytes @ 0x56
   389  000057                     	ds	2
   390  000059                     ?_printf:
   391                           	opt callstack 0
   392  000059                     printf@fmt:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0x58
   396  000059                     	ds	4
   397  00005D                     ??_main:
   398                           
   399                           ; 1 bytes @ 0x5C
   400  00005D                     	ds	1
   401  00005E                     main@index:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0x5D
   405  00005E                     	ds	2
   406                           
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 52 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  index           2   93[COMRAM] int 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   426 ;;      Params:         0       0       0       0       0       0       0
   427 ;;      Locals:         2       0       0       0       0       0       0
   428 ;;      Temps:          1       0       0       0       0       0       0
   429 ;;      Totals:         3       0       0       0       0       0       0
   430 ;;Total ram usage:        3 bytes
   431 ;; Hardware stack levels required when called:    8
   432 ;; This function calls:
   433 ;;		_getADRES
   434 ;;		_printf
   435 ;;		_systemInitialize
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           	psect	text0
   442  000CD8                     __ptext0:
   443                           	opt callstack 0
   444  000CD8                     _main:
   445                           	opt callstack 23
   446                           
   447                           ;main.c: 54:     systemInitialize();
   448                           
   449                           ;incstack = 0
   450  000CD8  EC92  F007         	call	_systemInitialize	;wreg free
   451  000CDC                     l116:
   452  000CDC  B883               	btfsc	3971,4,c	;volatile
   453  000CDE  D7FE               	goto	l116
   454                           
   455                           ;main.c: 60:         LATB|=0x08;
   456  000CE0  868A               	bsf	3978,3,c	;volatile
   457  000CE2                     l119:
   458  000CE2  A883               	btfss	3971,4,c	;volatile
   459  000CE4  D7FE               	goto	l119
   460                           
   461                           ;main.c: 64:         for(int index=0; index<20; index++)
   462  000CE6  0E00               	movlw	0
   463  000CE8  6E5F               	movwf	main@index+1,c
   464  000CEA  0E00               	movlw	0
   465  000CEC  6E5E               	movwf	main@index,c
   466  000CEE                     l1509:
   467                           
   468                           ;main.c: 65:         {;main.c: 66:             if(index!=0)
   469  000CEE  505E               	movf	main@index,w,c
   470  000CF0  105F               	iorwf	main@index+1,w,c
   471  000CF2  B4D8               	btfsc	status,2,c
   472  000CF4  D006               	goto	l124
   473                           
   474                           ;main.c: 67:                 printf(",");
   475  000CF6  0E07               	movlw	low STR_1
   476  000CF8  6E59               	movwf	printf@fmt,c
   477  000CFA  0E06               	movlw	high STR_1
   478  000CFC  6E5A               	movwf	printf@fmt+1,c
   479  000CFE  EC65  F007         	call	_printf	;wreg free
   480  000D02                     l124:
   481                           
   482                           ;main.c: 69:             printf("%d",getADRES());
   483  000D02  0E04               	movlw	low STR_2
   484  000D04  6E59               	movwf	printf@fmt,c
   485  000D06  0E06               	movlw	high STR_2
   486  000D08  6E5A               	movwf	printf@fmt+1,c
   487  000D0A  EC86  F007         	call	_getADRES	;wreg free
   488  000D0E  C001  F05B         	movff	?_getADRES,?_printf+2
   489  000D12  C002  F05C         	movff	?_getADRES+1,?_printf+3
   490  000D16  EC65  F007         	call	_printf	;wreg free
   491                           
   492                           ;main.c: 70:             _delay((unsigned long)((10)*(16000000/4000.0)));
   493  000D1A  0E34               	movlw	52
   494  000D1C  6E5D               	movwf	??_main& (0+255),c
   495  000D1E  0EF2               	movlw	242
   496  000D20                     u1047:
   497  000D20  2EE8               	decfsz	wreg,f,c
   498  000D22  D7FE               	bra	u1047
   499  000D24  2E5D               	decfsz	??_main& (0+255),f,c
   500  000D26  D7FC               	bra	u1047
   501                           
   502                           ;main.c: 71:         }
   503  000D28  4A5E               	infsnz	main@index,f,c
   504  000D2A  2A5F               	incf	main@index+1,f,c
   505  000D2C  BE5F               	btfsc	main@index+1,7,c
   506  000D2E  D7DF               	goto	l1509
   507  000D30  505F               	movf	main@index+1,w,c
   508  000D32  E104               	bnz	u1030
   509  000D34  0E14               	movlw	20
   510  000D36  5C5E               	subwf	main@index,w,c
   511  000D38  A0D8               	btfss	status,0,c
   512  000D3A  D7D9               	goto	l1509
   513  000D3C                     u1030:
   514                           
   515                           ;main.c: 72:         printf("\n\r");
   516  000D3C  0E01               	movlw	low STR_3
   517  000D3E  6E59               	movwf	printf@fmt,c
   518  000D40  0E06               	movlw	high STR_3
   519  000D42  6E5A               	movwf	printf@fmt+1,c
   520  000D44  EC65  F007         	call	_printf	;wreg free
   521                           
   522                           ;main.c: 73:         LATB&=0xF7;
   523  000D48  968A               	bcf	3978,3,c	;volatile
   524  000D4A  D7C8               	goto	l116
   525  000D4C                     __end_of_main:
   526                           	opt callstack 0
   527                           
   528 ;; *************** function _systemInitialize *****************
   529 ;; Defined at:
   530 ;;		line 158 in file "./myConfig.h"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, status,2, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   544 ;;      Params:         0       0       0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:    1
   551 ;; This function calls:
   552 ;;		_adcConfig
   553 ;;		_portConfig
   554 ;;		_serialComm
   555 ;;		_set_osc_p18f45k22_16MHz
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text1
   562  000F24                     __ptext1:
   563                           	opt callstack 0
   564  000F24                     _systemInitialize:
   565                           	opt callstack 29
   566                           
   567                           ;./myConfig.h: 160:  set_osc_p18f45k22_16MHz();
   568                           
   569                           ;incstack = 0
   570  000F24  EC9B  F007         	call	_set_osc_p18f45k22_16MHz	;wreg free
   571                           
   572                           ;./myConfig.h: 161:  portConfig();
   573  000F28  EC51  F007         	call	_portConfig	;wreg free
   574                           
   575                           ;./myConfig.h: 162:  serialComm();
   576  000F2C  ECA4  F007         	call	_serialComm	;wreg free
   577                           
   578                           ;./myConfig.h: 163:     adcConfig();
   579  000F30  ECAD  F007         	call	_adcConfig	;wreg free
   580  000F34  0012               	return		;funcret
   581  000F36                     __end_of_systemInitialize:
   582                           	opt callstack 0
   583                           
   584 ;; *************** function _set_osc_p18f45k22_16MHz *****************
   585 ;; Defined at:
   586 ;;		line 45 in file "./myConfig.h"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   600 ;;      Params:         0       0       0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0
   603 ;;      Totals:         0       0       0       0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_systemInitialize
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text2
   614  000F36                     __ptext2:
   615                           	opt callstack 0
   616  000F36                     _set_osc_p18f45k22_16MHz:
   617                           	opt callstack 29
   618                           
   619                           ;./myConfig.h: 47:  OSCCON = 0x72;
   620                           
   621                           ;incstack = 0
   622  000F36  0E72               	movlw	114
   623  000F38  6ED3               	movwf	4051,c	;volatile
   624                           
   625                           ;./myConfig.h: 48:  OSCCON2 = 0x04;
   626  000F3A  0E04               	movlw	4
   627  000F3C  6ED2               	movwf	4050,c	;volatile
   628                           
   629                           ;./myConfig.h: 49:  OSCTUNE = 0x80;
   630  000F3E  0E80               	movlw	128
   631  000F40  6E9B               	movwf	3995,c	;volatile
   632  000F42                     l77:
   633  000F42  B4D3               	btfsc	4051,2,c	;volatile
   634  000F44  0012               	return	
   635  000F46  D7FD               	goto	l77
   636  000F48                     __end_of_set_osc_p18f45k22_16MHz:
   637                           	opt callstack 0
   638                           
   639 ;; *************** function _serialComm *****************
   640 ;; Defined at:
   641 ;;		line 94 in file "./myConfig.h"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, status,2
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   655 ;;      Params:         0       0       0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0       0       0
   658 ;;      Totals:         0       0       0       0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_systemInitialize
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text3
   669  000F48                     __ptext3:
   670                           	opt callstack 0
   671  000F48                     _serialComm:
   672                           	opt callstack 29
   673                           
   674                           ;./myConfig.h: 96:  SPBRG1 = 8;
   675                           
   676                           ;incstack = 0
   677  000F48  0E08               	movlw	8
   678  000F4A  6EAF               	movwf	4015,c	;volatile
   679                           
   680                           ;./myConfig.h: 97:  RCSTA1 = 0x90;
   681  000F4C  0E90               	movlw	144
   682  000F4E  6EAB               	movwf	4011,c	;volatile
   683                           
   684                           ;./myConfig.h: 98:  TXSTA1 = 0x26;
   685  000F50  0E26               	movlw	38
   686  000F52  6EAC               	movwf	4012,c	;volatile
   687                           
   688                           ;./myConfig.h: 99:  BAUDCON1 = 0x40;
   689  000F54  0E40               	movlw	64
   690  000F56  6EB8               	movwf	4024,c	;volatile
   691  000F58  0012               	return		;funcret
   692  000F5A                     __end_of_serialComm:
   693                           	opt callstack 0
   694                           
   695 ;; *************** function _portConfig *****************
   696 ;; Defined at:
   697 ;;		line 64 in file "./myConfig.h"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   711 ;;      Params:         0       0       0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0
   714 ;;      Totals:         0       0       0       0       0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_systemInitialize
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text4
   725  000EA2                     __ptext4:
   726                           	opt callstack 0
   727  000EA2                     _portConfig:
   728                           	opt callstack 29
   729                           
   730                           ;./myConfig.h: 67:  ANSELA = 0x01;
   731                           
   732                           ;incstack = 0
   733  000EA2  0E01               	movlw	1
   734  000EA4  010F               	movlb	15	; () banked
   735  000EA6  6F38               	movwf	56,b	;volatile
   736                           
   737                           ;./myConfig.h: 68:  LATA = 0x00;
   738  000EA8  0E00               	movlw	0
   739  000EAA  6E89               	movwf	3977,c	;volatile
   740                           
   741                           ; BSR set to: 15
   742                           ;./myConfig.h: 69:  TRISA = 0xFF;
   743  000EAC  6892               	setf	3986,c	;volatile
   744                           
   745                           ;./myConfig.h: 71:  ANSELB = 0x00;
   746  000EAE  0E00               	movlw	0
   747  000EB0  6F39               	movwf	57,b	;volatile
   748                           
   749                           ;./myConfig.h: 72:  LATB = 0x00;
   750  000EB2  0E00               	movlw	0
   751  000EB4  6E8A               	movwf	3978,c	;volatile
   752                           
   753                           ;./myConfig.h: 73:  TRISB = 0xF7;
   754  000EB6  0EF7               	movlw	247
   755  000EB8  6E93               	movwf	3987,c	;volatile
   756                           
   757                           ;./myConfig.h: 75:  ANSELD = 0x00;
   758  000EBA  0E00               	movlw	0
   759  000EBC  6F3B               	movwf	59,b	;volatile
   760                           
   761                           ;./myConfig.h: 76:  LATD = 0x00;
   762  000EBE  0E00               	movlw	0
   763  000EC0  6E8C               	movwf	3980,c	;volatile
   764                           
   765                           ; BSR set to: 15
   766                           ;./myConfig.h: 77:  TRISD = 0xFF;
   767  000EC2  6895               	setf	3989,c	;volatile
   768                           
   769                           ; BSR set to: 15
   770                           ;./myConfig.h: 80:  TRISCbits.TRISC6 = 1;
   771  000EC4  8C94               	bsf	3988,6,c	;volatile
   772                           
   773                           ; BSR set to: 15
   774                           ;./myConfig.h: 81:  TRISCbits.TRISC7 = 1;
   775  000EC6  8E94               	bsf	3988,7,c	;volatile
   776                           
   777                           ; BSR set to: 15
   778  000EC8  0012               	return		;funcret
   779  000ECA                     __end_of_portConfig:
   780                           	opt callstack 0
   781                           
   782 ;; *************** function _adcConfig *****************
   783 ;; Defined at:
   784 ;;		line 125 in file "./myConfig.h"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, status,2
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   798 ;;      Params:         0       0       0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_systemInitialize
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text5
   812  000F5A                     __ptext5:
   813                           	opt callstack 0
   814  000F5A                     _adcConfig:
   815                           	opt callstack 29
   816                           
   817                           ;./myConfig.h: 127:     ADCON0 = 0x01;
   818                           
   819                           ; BSR set to: 15
   820                           ;incstack = 0
   821  000F5A  0E01               	movlw	1
   822  000F5C  6EC2               	movwf	4034,c	;volatile
   823                           
   824                           ;./myConfig.h: 128:     ADCON1 = 0x00;
   825  000F5E  0E00               	movlw	0
   826  000F60  6EC1               	movwf	4033,c	;volatile
   827                           
   828                           ;./myConfig.h: 129:     ADCON2 = 0xC0;
   829  000F62  0EC0               	movlw	192
   830  000F64  6EC0               	movwf	4032,c	;volatile
   831  000F66  0012               	return		;funcret
   832  000F68                     __end_of_adcConfig:
   833                           	opt callstack 0
   834                           
   835 ;; *************** function _printf *****************
   836 ;; Defined at:
   837 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
   840 ;;		 -> STR_3(3), STR_2(3), STR_1(2), 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  ap              2    2[BANK0 ] PTR void [1]
   843 ;;		 -> ?_printf(2), 
   844 ;;  ret             2    0        int 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  2   88[COMRAM] int 
   847 ;; Registers used:
   848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   854 ;;      Params:         4       0       0       0       0       0       0
   855 ;;      Locals:         0       4       0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0
   857 ;;      Totals:         4       4       0       0       0       0       0
   858 ;;Total ram usage:        8 bytes
   859 ;; Hardware stack levels used:    1
   860 ;; Hardware stack levels required when called:    7
   861 ;; This function calls:
   862 ;;		_vfprintf
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text6
   869  000ECA                     __ptext6:
   870                           	opt callstack 0
   871  000ECA                     _printf:
   872                           	opt callstack 23
   873                           
   874                           ;incstack = 0
   875  000ECA  0E5B               	movlw	low (?_printf+2)
   876  000ECC  0100               	movlb	0	; () banked
   877  000ECE  6F8A               	movwf	printf@ap& (0+255),b
   878  000ED0  0E00               	movlw	high (?_printf+2)
   879  000ED2  6F8B               	movwf	(printf@ap+1)& (0+255),b
   880                           
   881                           ; BSR set to: 0
   882  000ED4  0E00               	movlw	0
   883  000ED6  6E51               	movwf	vfprintf@fp,c
   884  000ED8  0E00               	movlw	0
   885  000EDA  6E52               	movwf	vfprintf@fp+1,c
   886  000EDC  C059  F053         	movff	printf@fmt,vfprintf@fmt
   887  000EE0  C05A  F054         	movff	printf@fmt+1,vfprintf@fmt+1
   888  000EE4  0E8A               	movlw	low printf@ap
   889  000EE6  6E55               	movwf	vfprintf@ap,c
   890  000EE8  0E00               	movlw	high printf@ap
   891  000EEA  6E56               	movwf	vfprintf@ap+1,c
   892  000EEC  ECDC  F006         	call	_vfprintf	;wreg free
   893  000EF0  0012               	return		;funcret
   894  000EF2                     __end_of_printf:
   895                           	opt callstack 0
   896                           
   897 ;; *************** function _vfprintf *****************
   898 ;; Defined at:
   899 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
   902 ;;		 -> NULL(0), 
   903 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
   904 ;;		 -> STR_3(3), STR_2(3), STR_1(2), 
   905 ;;  ap              2   84[COMRAM] PTR PTR void 
   906 ;;		 -> printf@ap(2), 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
   909 ;;		 -> STR_3(3), STR_2(3), STR_1(2), 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  2   80[COMRAM] int 
   912 ;; Registers used:
   913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   919 ;;      Params:         6       0       0       0       0       0       0
   920 ;;      Locals:         2       0       0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0
   922 ;;      Totals:         8       0       0       0       0       0       0
   923 ;;Total ram usage:        8 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    6
   926 ;; This function calls:
   927 ;;		_vfpfcnvrt
   928 ;; This function is called by:
   929 ;;		_printf
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text7
   934  000DB8                     __ptext7:
   935                           	opt callstack 0
   936  000DB8                     _vfprintf:
   937                           	opt callstack 23
   938                           
   939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   940                           
   941                           ;incstack = 0
   942  000DB8  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
   943  000DBC  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   944                           
   945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   946  000DC0  0E00               	movlw	0
   947  000DC2  0100               	movlb	0	; () banked
   948  000DC4  6F61               	movwf	(_nout+1)& (0+255),b
   949  000DC6  0E00               	movlw	0
   950  000DC8  6F60               	movwf	_nout& (0+255),b
   951                           
   952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   953  000DCA  D013               	goto	l1487
   954  000DCC                     l1485:
   955                           
   956                           ; BSR set to: 0
   957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   958  000DCC  C051  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
   959  000DD0  C052  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   960  000DD4  0E57               	movlw	low vfprintf@cfmt
   961  000DD6  6E43               	movwf	vfpfcnvrt@fmt,c
   962  000DD8  0E00               	movlw	high vfprintf@cfmt
   963  000DDA  6E44               	movwf	vfpfcnvrt@fmt+1,c
   964  000DDC  C055  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
   965  000DE0  C056  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   966  000DE4  EC28  F004         	call	_vfpfcnvrt	;wreg free
   967  000DE8  5041               	movf	?_vfpfcnvrt,w,c
   968  000DEA  0100               	movlb	0	; () banked
   969  000DEC  2760               	addwf	_nout& (0+255),f,b
   970  000DEE  5042               	movf	?_vfpfcnvrt+1,w,c
   971  000DF0  2361               	addwfc	(_nout+1)& (0+255),f,b
   972  000DF2                     l1487:
   973                           
   974                           ; BSR set to: 0
   975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   976  000DF2  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
   977  000DF6  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   978  000DFA                     	if	0	;tblptru may be non-zero
   979  000DFA                     	endif
   980  000DFA                     	if	0	;tblptru may be non-zero
   981  000DFA                     	endif
   982  000DFA  0008               	tblrd		*
   983  000DFC  50F5               	movf	tablat,w,c
   984  000DFE  0900               	iorlw	0
   985  000E00  A4D8               	btfss	status,2,c
   986  000E02  D7E4               	goto	l1485
   987                           
   988                           ; BSR set to: 0
   989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   990  000E04  C060  F051         	movff	_nout,?_vfprintf
   991  000E08  C061  F052         	movff	_nout+1,?_vfprintf+1
   992                           
   993                           ; BSR set to: 0
   994  000E0C  0012               	return		;funcret
   995  000E0E                     __end_of_vfprintf:
   996                           	opt callstack 0
   997                           
   998 ;; *************** function _vfpfcnvrt *****************
   999 ;; Defined at:
  1000 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1003 ;;		 -> NULL(0), 
  1004 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1005 ;;		 -> vfprintf@cfmt(2), 
  1006 ;;  ap              2   68[COMRAM] PTR PTR void 
  1007 ;;		 -> printf@ap(2), 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  ll              8   72[COMRAM] long long 
  1010 ;;  llu             8    0        unsigned long long 
  1011 ;;  f               4    0        unsigned long long 
  1012 ;;  vp              3    0        PTR void 
  1013 ;;  ct              3    0        unsigned char [3]
  1014 ;;  cp              3    0        PTR unsigned char 
  1015 ;;  i               2    0        int 
  1016 ;;  done            2    0        int 
  1017 ;;  c               1    0        unsigned char 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  2   64[COMRAM] int 
  1020 ;; Registers used:
  1021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1027 ;;      Params:         6       0       0       0       0       0       0
  1028 ;;      Locals:         8       0       0       0       0       0       0
  1029 ;;      Temps:          2       0       0       0       0       0       0
  1030 ;;      Totals:        16       0       0       0       0       0       0
  1031 ;;Total ram usage:       16 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    5
  1034 ;; This function calls:
  1035 ;;		_dtoa
  1036 ;;		_fputc
  1037 ;; This function is called by:
  1038 ;;		_vfprintf
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text8
  1043  000850                     __ptext8:
  1044                           	opt callstack 0
  1045  000850                     _vfpfcnvrt:
  1046                           	opt callstack 23
  1047                           
  1048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;incstack = 0
  1052  000850  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1053  000854  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1054  000858  CFDE FFF6          	movff	postinc2,tblptrl
  1055  00085C  CFDD FFF7          	movff	postdec2,tblptrh
  1056  000860                     	if	0	;tblptru may be non-zero
  1057  000860                     	endif
  1058  000860                     	if	0	;tblptru may be non-zero
  1059  000860                     	endif
  1060  000860  0008               	tblrd		*
  1061  000862  50F5               	movf	tablat,w,c
  1062  000864  0A25               	xorlw	37
  1063  000866  A4D8               	btfss	status,2,c
  1064  000868  D09A               	goto	l1473
  1065                           
  1066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1067  00086A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1068  00086E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1069  000872  2ADE               	incf	postinc2,f,c
  1070  000874  0E00               	movlw	0
  1071  000876  22DD               	addwfc	postdec2,f,c
  1072                           
  1073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1074  000878  0E00               	movlw	0
  1075  00087A  0100               	movlb	0	; () banked
  1076  00087C  6F63               	movwf	(_width+1)& (0+255),b
  1077  00087E  0E00               	movlw	0
  1078  000880  6F62               	movwf	_width& (0+255),b
  1079  000882  C062  F066         	movff	_width,_flags
  1080  000886  C063  F067         	movff	_width+1,_flags+1
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1084  00088A  6964               	setf	_prec& (0+255),b
  1085  00088C  6965               	setf	(_prec+1)& (0+255),b
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1089  00088E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1090  000892  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1091  000896  CFDE FFF6          	movff	postinc2,tblptrl
  1092  00089A  CFDD FFF7          	movff	postdec2,tblptrh
  1093  00089E                     	if	0	;tblptru may be non-zero
  1094  00089E                     	endif
  1095  00089E                     	if	0	;tblptru may be non-zero
  1096  00089E                     	endif
  1097  00089E  0008               	tblrd		*
  1098  0008A0  50F5               	movf	tablat,w,c
  1099  0008A2  0A64               	xorlw	100
  1100  0008A4  B4D8               	btfsc	status,2,c
  1101  0008A6  D00D               	goto	u960
  1102                           
  1103                           ; BSR set to: 0
  1104  0008A8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1105  0008AC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1106  0008B0  CFDE FFF6          	movff	postinc2,tblptrl
  1107  0008B4  CFDD FFF7          	movff	postdec2,tblptrh
  1108  0008B8                     	if	0	;tblptru may be non-zero
  1109  0008B8                     	endif
  1110  0008B8                     	if	0	;tblptru may be non-zero
  1111  0008B8                     	endif
  1112  0008B8  0008               	tblrd		*
  1113  0008BA  50F5               	movf	tablat,w,c
  1114  0008BC  0A69               	xorlw	105
  1115  0008BE  A4D8               	btfss	status,2,c
  1116  0008C0  D03F               	goto	l1457
  1117  0008C2                     u960:
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1121  0008C2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1122  0008C6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1123  0008CA  2ADE               	incf	postinc2,f,c
  1124  0008CC  0E00               	movlw	0
  1125  0008CE  22DD               	addwfc	postdec2,f,c
  1126                           
  1127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1128  0008D0  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1129  0008D4  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1130  0008D8  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1131  0008DC  0E02               	movlw	2
  1132  0008DE  26DE               	addwf	postinc2,f,c
  1133  0008E0  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1134  0008E4  0E00               	movlw	0
  1135  0008E6  22DD               	addwfc	postdec2,f,c
  1136  0008E8  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1137  0008EC  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1138  0008F0  CFDE F049          	movff	postinc2,vfpfcnvrt@ll
  1139  0008F4  CFDD F04A          	movff	postdec2,vfpfcnvrt@ll+1
  1140  0008F8  0E00               	movlw	0
  1141  0008FA  BE4A               	btfsc	vfpfcnvrt@ll+1,7,c
  1142  0008FC  0EFF               	movlw	-1
  1143  0008FE  6E4B               	movwf	vfpfcnvrt@ll+2,c
  1144  000900  6E4C               	movwf	vfpfcnvrt@ll+3,c
  1145  000902  6E4D               	movwf	vfpfcnvrt@ll+4,c
  1146  000904  6E4E               	movwf	vfpfcnvrt@ll+5,c
  1147  000906  6E4F               	movwf	vfpfcnvrt@ll+6,c
  1148  000908  6E50               	movwf	vfpfcnvrt@ll+7,c
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1152  00090A  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  1153  00090E  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1154  000912  C049  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  1155  000916  C04A  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1156  00091A  C04B  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1157  00091E  C04C  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1158  000922  C04D  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1159  000926  C04E  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1160  00092A  C04F  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1161  00092E  C050  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1162  000932  EC05  F003         	call	_dtoa	;wreg free
  1163  000936  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  1164  00093A  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1165  00093E  0012               	return	
  1166  000940                     l1457:
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1170  000940  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1171  000944  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1172  000948  CFDE FFF6          	movff	postinc2,tblptrl
  1173  00094C  CFDD FFF7          	movff	postdec2,tblptrh
  1174  000950                     	if	0	;tblptru may be non-zero
  1175  000950                     	endif
  1176  000950                     	if	0	;tblptru may be non-zero
  1177  000950                     	endif
  1178  000950  0008               	tblrd		*
  1179  000952  50F5               	movf	tablat,w,c
  1180  000954  0A25               	xorlw	37
  1181  000956  A4D8               	btfss	status,2,c
  1182  000958  D016               	goto	l1467
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1186  00095A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1187  00095E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1188  000962  2ADE               	incf	postinc2,f,c
  1189  000964  0E00               	movlw	0
  1190  000966  22DD               	addwfc	postdec2,f,c
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1194  000968  0E00               	movlw	0
  1195  00096A  6E03               	movwf	fputc@c+1,c
  1196  00096C  0E25               	movlw	37
  1197  00096E  6E02               	movwf	fputc@c,c
  1198  000970  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1199  000974  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1200  000978  ECA6  F006         	call	_fputc	;wreg free
  1201  00097C                     l1463:
  1202                           
  1203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1204  00097C  0E00               	movlw	0
  1205  00097E  6E42               	movwf	?_vfpfcnvrt+1,c
  1206  000980  0E01               	movlw	1
  1207  000982  6E41               	movwf	?_vfpfcnvrt,c
  1208  000984  0012               	return	
  1209  000986                     l1467:
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1213  000986  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1214  00098A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1215  00098E  2ADE               	incf	postinc2,f,c
  1216  000990  0E00               	movlw	0
  1217  000992  22DD               	addwfc	postdec2,f,c
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1221  000994  0E00               	movlw	0
  1222  000996  6E42               	movwf	?_vfpfcnvrt+1,c
  1223  000998  0E00               	movlw	0
  1224  00099A  6E41               	movwf	?_vfpfcnvrt,c
  1225  00099C  0012               	return	
  1226  00099E                     l1473:
  1227                           
  1228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1229  00099E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1230  0009A2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1231  0009A6  CFDE FFF6          	movff	postinc2,tblptrl
  1232  0009AA  CFDD FFF7          	movff	postdec2,tblptrh
  1233  0009AE                     	if	0	;tblptru may be non-zero
  1234  0009AE                     	endif
  1235  0009AE                     	if	0	;tblptru may be non-zero
  1236  0009AE                     	endif
  1237  0009AE  0008               	tblrd		*
  1238  0009B0  50F5               	movf	tablat,w,c
  1239  0009B2  6E02               	movwf	fputc@c,c
  1240  0009B4  6A03               	clrf	fputc@c+1,c
  1241  0009B6  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1242  0009BA  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1243  0009BE  ECA6  F006         	call	_fputc	;wreg free
  1244                           
  1245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1246  0009C2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1247  0009C6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1248  0009CA  2ADE               	incf	postinc2,f,c
  1249  0009CC  0E00               	movlw	0
  1250  0009CE  22DD               	addwfc	postdec2,f,c
  1251  0009D0  D7D5               	goto	l1463
  1252  0009D2                     __end_of_vfpfcnvrt:
  1253                           	opt callstack 0
  1254                           
  1255 ;; *************** function _dtoa *****************
  1256 ;; Defined at:
  1257 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1260 ;;		 -> NULL(0), 
  1261 ;;  d               8   30[COMRAM] long long 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  n               8   54[COMRAM] long long 
  1264 ;;  i               2   62[COMRAM] int 
  1265 ;;  s               2   52[COMRAM] int 
  1266 ;;  w               2   50[COMRAM] int 
  1267 ;;  p               2   48[COMRAM] int 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  2   28[COMRAM] int 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1277 ;;      Params:        10       0       0       0       0       0       0
  1278 ;;      Locals:        18       0       0       0       0       0       0
  1279 ;;      Temps:          8       0       0       0       0       0       0
  1280 ;;      Totals:        36       0       0       0       0       0       0
  1281 ;;Total ram usage:       36 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    4
  1284 ;; This function calls:
  1285 ;;		___aodiv
  1286 ;;		___aomod
  1287 ;;		_abs
  1288 ;;		_pad
  1289 ;; This function is called by:
  1290 ;;		_vfpfcnvrt
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text9
  1295  00060A                     __ptext9:
  1296                           	opt callstack 0
  1297  00060A                     _dtoa:
  1298                           	opt callstack 23
  1299                           
  1300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1301                           
  1302                           ;incstack = 0
  1303  00060A  C01F  F037         	movff	dtoa@d,dtoa@n
  1304  00060E  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  1305  000612  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  1306  000616  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  1307  00061A  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  1308  00061E  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  1309  000622  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  1310  000626  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  1311                           
  1312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1313  00062A  AE3E               	btfss	dtoa@n+7,7,c
  1314  00062C  D002               	goto	u790
  1315  00062E  0E01               	movlw	1
  1316  000630  D001               	goto	u800
  1317  000632                     u790:
  1318  000632  0E00               	movlw	0
  1319  000634                     u800:
  1320  000634  6E35               	movwf	dtoa@s,c
  1321  000636  6A36               	clrf	dtoa@s+1,c
  1322                           
  1323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1324  000638  5035               	movf	dtoa@s,w,c
  1325  00063A  1036               	iorwf	dtoa@s+1,w,c
  1326  00063C  B4D8               	btfsc	status,2,c
  1327  00063E  D010               	goto	l1383
  1328                           
  1329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1330  000640  1E3E               	comf	dtoa@n+7,f,c
  1331  000642  1E3D               	comf	dtoa@n+6,f,c
  1332  000644  1E3C               	comf	dtoa@n+5,f,c
  1333  000646  1E3B               	comf	dtoa@n+4,f,c
  1334  000648  1E3A               	comf	dtoa@n+3,f,c
  1335  00064A  1E39               	comf	dtoa@n+2,f,c
  1336  00064C  1E38               	comf	dtoa@n+1,f,c
  1337  00064E  6C37               	negf	dtoa@n,c
  1338  000650  0E00               	movlw	0
  1339  000652  2238               	addwfc	dtoa@n+1,f,c
  1340  000654  2239               	addwfc	dtoa@n+2,f,c
  1341  000656  223A               	addwfc	dtoa@n+3,f,c
  1342  000658  223B               	addwfc	dtoa@n+4,f,c
  1343  00065A  223C               	addwfc	dtoa@n+5,f,c
  1344  00065C  223D               	addwfc	dtoa@n+6,f,c
  1345  00065E  223E               	addwfc	dtoa@n+7,f,c
  1346  000660                     l1383:
  1347                           
  1348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1349  000660  0100               	movlb	0	; () banked
  1350  000662  AF65               	btfss	(_prec+1)& (0+255),7,b
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1354  000664  9366               	bcf	_flags& (0+255),1,b
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1358  000666  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1359  000668  D005               	goto	u830
  1360  00066A  5165               	movf	(_prec+1)& (0+255),w,b
  1361  00066C  E108               	bnz	l165
  1362  00066E  0564               	decf	_prec& (0+255),w,b
  1363  000670  B0D8               	btfsc	status,0,c
  1364  000672  D005               	goto	l165
  1365  000674                     u830:
  1366                           
  1367                           ; BSR set to: 0
  1368  000674  0E00               	movlw	0
  1369  000676  6E32               	movwf	dtoa@p+1,c
  1370  000678  0E01               	movlw	1
  1371  00067A  6E31               	movwf	dtoa@p,c
  1372  00067C  D004               	goto	l167
  1373  00067E                     l165:
  1374                           
  1375                           ; BSR set to: 0
  1376  00067E  C064  F031         	movff	_prec,dtoa@p
  1377  000682  C065  F032         	movff	_prec+1,dtoa@p+1
  1378  000686                     l167:
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1382  000686  C062  F033         	movff	_width,dtoa@w
  1383  00068A  C063  F034         	movff	_width+1,dtoa@w+1
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1387  00068E  5035               	movf	dtoa@s,w,c
  1388  000690  1036               	iorwf	dtoa@s+1,w,c
  1389  000692  A4D8               	btfss	status,2,c
  1390  000694  D002               	goto	u850
  1391                           
  1392                           ; BSR set to: 0
  1393  000696  A566               	btfss	_flags& (0+255),2,b
  1394  000698  D003               	goto	l1397
  1395  00069A                     u850:
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1399  00069A  0633               	decf	dtoa@w,f,c
  1400  00069C  A0D8               	btfss	status,0,c
  1401  00069E  0634               	decf	dtoa@w+1,f,c
  1402  0006A0                     l1397:
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1406  0006A0  0E00               	movlw	0
  1407  0006A2  6E40               	movwf	dtoa@i+1,c
  1408  0006A4  0E1F               	movlw	31
  1409  0006A6  6E3F               	movwf	dtoa@i,c
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1413  0006A8  0E00               	movlw	0
  1414  0006AA  6F87               	movwf	(_dbuf+31)& (0+255),b
  1415                           
  1416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1417  0006AC  D07C               	goto	l1411
  1418  0006AE                     l1401:
  1419                           
  1420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1421  0006AE  063F               	decf	dtoa@i,f,c
  1422  0006B0  A0D8               	btfss	status,0,c
  1423  0006B2  0640               	decf	dtoa@i+1,f,c
  1424                           
  1425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1426  0006B4  0E68               	movlw	low _dbuf
  1427  0006B6  243F               	addwf	dtoa@i,w,c
  1428  0006B8  6ED9               	movwf	fsr2l,c
  1429  0006BA  0E00               	movlw	high _dbuf
  1430  0006BC  2040               	addwfc	dtoa@i+1,w,c
  1431  0006BE  6EDA               	movwf	fsr2h,c
  1432  0006C0  C037  F001         	movff	dtoa@n,___aomod@dividend
  1433  0006C4  C038  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1434  0006C8  C039  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1435  0006CC  C03A  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1436  0006D0  C03B  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1437  0006D4  C03C  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1438  0006D8  C03D  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1439  0006DC  C03E  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1440  0006E0  0E0A               	movlw	10
  1441  0006E2  6E09               	movwf	___aomod@divisor,c
  1442  0006E4  0E00               	movlw	0
  1443  0006E6  6E0A               	movwf	___aomod@divisor+1,c
  1444  0006E8  0E00               	movlw	0
  1445  0006EA  6E0B               	movwf	___aomod@divisor+2,c
  1446  0006EC  0E00               	movlw	0
  1447  0006EE  6E0C               	movwf	___aomod@divisor+3,c
  1448  0006F0  0E00               	movlw	0
  1449  0006F2  6E0D               	movwf	___aomod@divisor+4,c
  1450  0006F4  0E00               	movlw	0
  1451  0006F6  6E0E               	movwf	___aomod@divisor+5,c
  1452  0006F8  0E00               	movlw	0
  1453  0006FA  6E0F               	movwf	___aomod@divisor+6,c
  1454  0006FC  0E00               	movlw	0
  1455  0006FE  6E10               	movwf	___aomod@divisor+7,c
  1456  000700  EC8D  F005         	call	___aomod	;wreg free
  1457  000704  C001  F027         	movff	?___aomod,??_dtoa
  1458  000708  C002  F028         	movff	?___aomod+1,??_dtoa+1
  1459  00070C  C003  F029         	movff	?___aomod+2,??_dtoa+2
  1460  000710  C004  F02A         	movff	?___aomod+3,??_dtoa+3
  1461  000714  C005  F02B         	movff	?___aomod+4,??_dtoa+4
  1462  000718  C006  F02C         	movff	?___aomod+5,??_dtoa+5
  1463  00071C  C007  F02D         	movff	?___aomod+6,??_dtoa+6
  1464  000720  C008  F02E         	movff	?___aomod+7,??_dtoa+7
  1465  000724  C027  F013         	movff	??_dtoa,abs@a
  1466  000728  C029  F014         	movff	??_dtoa+2,abs@a+1
  1467  00072C  EC23  F007         	call	_abs	;wreg free
  1468  000730  5013               	movf	?_abs,w,c
  1469  000732  0F30               	addlw	48
  1470  000734  6EDF               	movwf	indf2,c
  1471                           
  1472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1473  000736  0631               	decf	dtoa@p,f,c
  1474  000738  A0D8               	btfss	status,0,c
  1475  00073A  0632               	decf	dtoa@p+1,f,c
  1476                           
  1477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1478  00073C  0633               	decf	dtoa@w,f,c
  1479  00073E  A0D8               	btfss	status,0,c
  1480  000740  0634               	decf	dtoa@w+1,f,c
  1481                           
  1482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1483  000742  C037  F001         	movff	dtoa@n,___aodiv@dividend
  1484  000746  C038  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1485  00074A  C039  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1486  00074E  C03A  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1487  000752  C03B  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1488  000756  C03C  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1489  00075A  C03D  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1490  00075E  C03E  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1491  000762  0E0A               	movlw	10
  1492  000764  6E09               	movwf	___aodiv@divisor,c
  1493  000766  0E00               	movlw	0
  1494  000768  6E0A               	movwf	___aodiv@divisor+1,c
  1495  00076A  0E00               	movlw	0
  1496  00076C  6E0B               	movwf	___aodiv@divisor+2,c
  1497  00076E  0E00               	movlw	0
  1498  000770  6E0C               	movwf	___aodiv@divisor+3,c
  1499  000772  0E00               	movlw	0
  1500  000774  6E0D               	movwf	___aodiv@divisor+4,c
  1501  000776  0E00               	movlw	0
  1502  000778  6E0E               	movwf	___aodiv@divisor+5,c
  1503  00077A  0E00               	movlw	0
  1504  00077C  6E0F               	movwf	___aodiv@divisor+6,c
  1505  00077E  0E00               	movlw	0
  1506  000780  6E10               	movwf	___aodiv@divisor+7,c
  1507  000782  ECE9  F004         	call	___aodiv	;wreg free
  1508  000786  C001  F037         	movff	?___aodiv,dtoa@n
  1509  00078A  C002  F038         	movff	?___aodiv+1,dtoa@n+1
  1510  00078E  C003  F039         	movff	?___aodiv+2,dtoa@n+2
  1511  000792  C004  F03A         	movff	?___aodiv+3,dtoa@n+3
  1512  000796  C005  F03B         	movff	?___aodiv+4,dtoa@n+4
  1513  00079A  C006  F03C         	movff	?___aodiv+5,dtoa@n+5
  1514  00079E  C007  F03D         	movff	?___aodiv+6,dtoa@n+6
  1515  0007A2  C008  F03E         	movff	?___aodiv+7,dtoa@n+7
  1516  0007A6                     l1411:
  1517                           
  1518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1519  0007A6  BE40               	btfsc	dtoa@i+1,7,c
  1520  0007A8  D020               	goto	u900
  1521  0007AA  5040               	movf	dtoa@i+1,w,c
  1522  0007AC  E103               	bnz	u860
  1523  0007AE  043F               	decf	dtoa@i,w,c
  1524  0007B0  A0D8               	btfss	status,0,c
  1525  0007B2  D01B               	goto	u900
  1526  0007B4                     u860:
  1527  0007B4  5037               	movf	dtoa@n,w,c
  1528  0007B6  1038               	iorwf	dtoa@n+1,w,c
  1529  0007B8  1039               	iorwf	dtoa@n+2,w,c
  1530  0007BA  103A               	iorwf	dtoa@n+3,w,c
  1531  0007BC  103B               	iorwf	dtoa@n+4,w,c
  1532  0007BE  103C               	iorwf	dtoa@n+5,w,c
  1533  0007C0  103D               	iorwf	dtoa@n+6,w,c
  1534  0007C2  103E               	iorwf	dtoa@n+7,w,c
  1535  0007C4  A4D8               	btfss	status,2,c
  1536  0007C6  D773               	goto	l1401
  1537  0007C8  BE32               	btfsc	dtoa@p+1,7,c
  1538  0007CA  D005               	goto	u880
  1539  0007CC  5032               	movf	dtoa@p+1,w,c
  1540  0007CE  E102               	bnz	u881
  1541  0007D0  0431               	decf	dtoa@p,w,c
  1542  0007D2  B0D8               	btfsc	status,0,c
  1543  0007D4                     u881:
  1544  0007D4  D76C               	goto	l1401
  1545  0007D6                     u880:
  1546  0007D6  BE34               	btfsc	dtoa@w+1,7,c
  1547  0007D8  D008               	goto	u900
  1548  0007DA  5034               	movf	dtoa@w+1,w,c
  1549  0007DC  E103               	bnz	u890
  1550  0007DE  0433               	decf	dtoa@w,w,c
  1551  0007E0  A0D8               	btfss	status,0,c
  1552  0007E2  D003               	goto	u900
  1553  0007E4                     u890:
  1554  0007E4  0100               	movlb	0	; () banked
  1555  0007E6  B366               	btfsc	_flags& (0+255),1,b
  1556  0007E8  D762               	goto	l1401
  1557  0007EA                     u900:
  1558                           
  1559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1560  0007EA  5035               	movf	dtoa@s,w,c
  1561  0007EC  1036               	iorwf	dtoa@s+1,w,c
  1562  0007EE  A4D8               	btfss	status,2,c
  1563  0007F0  D003               	goto	u920
  1564  0007F2  0100               	movlb	0	; () banked
  1565  0007F4  A566               	btfss	_flags& (0+255),2,b
  1566  0007F6  D017               	goto	l1435
  1567  0007F8                     u920:
  1568                           
  1569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1570  0007F8  063F               	decf	dtoa@i,f,c
  1571  0007FA  A0D8               	btfss	status,0,c
  1572  0007FC  0640               	decf	dtoa@i+1,f,c
  1573                           
  1574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1575  0007FE  5035               	movf	dtoa@s,w,c
  1576  000800  1036               	iorwf	dtoa@s+1,w,c
  1577  000802  A4D8               	btfss	status,2,c
  1578  000804  D004               	goto	l1431
  1579  000806  0E00               	movlw	0
  1580  000808  6E30               	movwf	_dtoa$536+1,c
  1581  00080A  0E2B               	movlw	43
  1582  00080C  D003               	goto	L1
  1583  00080E                     l1431:
  1584  00080E  0E00               	movlw	0
  1585  000810  6E30               	movwf	_dtoa$536+1,c
  1586  000812  0E2D               	movlw	45
  1587  000814                     L1:
  1588  000814  6E2F               	movwf	_dtoa$536,c
  1589  000816  0E68               	movlw	low _dbuf
  1590  000818  243F               	addwf	dtoa@i,w,c
  1591  00081A  6ED9               	movwf	fsr2l,c
  1592  00081C  0E00               	movlw	high _dbuf
  1593  00081E  2040               	addwfc	dtoa@i+1,w,c
  1594  000820  6EDA               	movwf	fsr2h,c
  1595  000822  C02F  FFDF         	movff	_dtoa$536,indf2
  1596  000826                     l1435:
  1597                           
  1598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1599  000826  C01D  F012         	movff	dtoa@fp,pad@fp
  1600  00082A  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  1601  00082E  0E68               	movlw	low _dbuf
  1602  000830  243F               	addwf	dtoa@i,w,c
  1603  000832  6E14               	movwf	pad@buf,c
  1604  000834  0E00               	movlw	high _dbuf
  1605  000836  2040               	addwfc	dtoa@i+1,w,c
  1606  000838  6E15               	movwf	pad@buf+1,c
  1607  00083A  C033  F016         	movff	dtoa@w,pad@p
  1608  00083E  C034  F017         	movff	dtoa@w+1,pad@p+1
  1609  000842  EC1F  F006         	call	_pad	;wreg free
  1610  000846  C012  F01D         	movff	?_pad,?_dtoa
  1611  00084A  C013  F01E         	movff	?_pad+1,?_dtoa+1
  1612  00084E  0012               	return		;funcret
  1613  000850                     __end_of_dtoa:
  1614                           	opt callstack 0
  1615                           
  1616 ;; *************** function _pad *****************
  1617 ;; Defined at:
  1618 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1621 ;;		 -> NULL(0), 
  1622 ;;  buf             2   19[COMRAM] PTR unsigned char 
  1623 ;;		 -> dbuf(32), 
  1624 ;;  p               2   21[COMRAM] int 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  w               2   26[COMRAM] int 
  1627 ;;  i               2   24[COMRAM] int 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  2   17[COMRAM] int 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1637 ;;      Params:         6       0       0       0       0       0       0
  1638 ;;      Locals:         4       0       0       0       0       0       0
  1639 ;;      Temps:          1       0       0       0       0       0       0
  1640 ;;      Totals:        11       0       0       0       0       0       0
  1641 ;;Total ram usage:       11 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    3
  1644 ;; This function calls:
  1645 ;;		_fputc
  1646 ;;		_fputs
  1647 ;;		_strlen
  1648 ;; This function is called by:
  1649 ;;		_dtoa
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text10
  1654  000C3E                     __ptext10:
  1655                           	opt callstack 0
  1656  000C3E                     _pad:
  1657                           	opt callstack 23
  1658                           
  1659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1660                           
  1661                           ;incstack = 0
  1662  000C3E  0100               	movlb	0	; () banked
  1663  000C40  A166               	btfss	_flags& (0+255),0,b
  1664  000C42  D00A               	goto	l1275
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1668  000C44  C014  F00B         	movff	pad@buf,fputs@s
  1669  000C48  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1670  000C4C  C012  F00D         	movff	pad@fp,fputs@fp
  1671  000C50  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1672  000C54  EC07  F007         	call	_fputs	;wreg free
  1673  000C58                     l1275:
  1674                           
  1675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1676  000C58  BE17               	btfsc	pad@p+1,7,c
  1677  000C5A  D005               	goto	l1279
  1678  000C5C  C016  F01B         	movff	pad@p,pad@w
  1679  000C60  C017  F01C         	movff	pad@p+1,pad@w+1
  1680  000C64  D004               	goto	l154
  1681  000C66                     l1279:
  1682  000C66  0E00               	movlw	0
  1683  000C68  6E1C               	movwf	pad@w+1,c
  1684  000C6A  0E00               	movlw	0
  1685  000C6C  6E1B               	movwf	pad@w,c
  1686  000C6E                     l154:
  1687                           
  1688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1689  000C6E  0E00               	movlw	0
  1690  000C70  6E1A               	movwf	pad@i+1,c
  1691  000C72  0E00               	movlw	0
  1692  000C74  6E19               	movwf	pad@i,c
  1693                           
  1694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1695  000C76  D00C               	goto	l1285
  1696  000C78                     l1281:
  1697                           
  1698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1699  000C78  0E00               	movlw	0
  1700  000C7A  6E03               	movwf	fputc@c+1,c
  1701  000C7C  0E20               	movlw	32
  1702  000C7E  6E02               	movwf	fputc@c,c
  1703  000C80  C012  F004         	movff	pad@fp,fputc@fp
  1704  000C84  C013  F005         	movff	pad@fp+1,fputc@fp+1
  1705  000C88  ECA6  F006         	call	_fputc	;wreg free
  1706                           
  1707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1708  000C8C  4A19               	infsnz	pad@i,f,c
  1709  000C8E  2A1A               	incf	pad@i+1,f,c
  1710  000C90                     l1285:
  1711                           
  1712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1713  000C90  501B               	movf	pad@w,w,c
  1714  000C92  5C19               	subwf	pad@i,w,c
  1715  000C94  501A               	movf	pad@i+1,w,c
  1716  000C96  0A80               	xorlw	128
  1717  000C98  6E18               	movwf	??_pad& (0+255),c
  1718  000C9A  501C               	movf	pad@w+1,w,c
  1719  000C9C  0A80               	xorlw	128
  1720  000C9E  5818               	subwfb	??_pad& (0+255),w,c
  1721  000CA0  A0D8               	btfss	status,0,c
  1722  000CA2  D7EA               	goto	l1281
  1723                           
  1724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1725  000CA4  0100               	movlb	0	; () banked
  1726  000CA6  B166               	btfsc	_flags& (0+255),0,b
  1727  000CA8  D00A               	goto	l1289
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1731  000CAA  C014  F00B         	movff	pad@buf,fputs@s
  1732  000CAE  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1733  000CB2  C012  F00D         	movff	pad@fp,fputs@fp
  1734  000CB6  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1735  000CBA  EC07  F007         	call	_fputs	;wreg free
  1736  000CBE                     l1289:
  1737                           
  1738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1739  000CBE  C014  F001         	movff	pad@buf,strlen@s
  1740  000CC2  C015  F002         	movff	pad@buf+1,strlen@s+1
  1741  000CC6  EC3C  F007         	call	_strlen	;wreg free
  1742  000CCA  501B               	movf	pad@w,w,c
  1743  000CCC  2401               	addwf	?_strlen,w,c
  1744  000CCE  6E12               	movwf	?_pad,c
  1745  000CD0  501C               	movf	pad@w+1,w,c
  1746  000CD2  2002               	addwfc	?_strlen+1,w,c
  1747  000CD4  6E13               	movwf	?_pad+1,c
  1748  000CD6  0012               	return		;funcret
  1749  000CD8                     __end_of_pad:
  1750                           	opt callstack 0
  1751                           
  1752 ;; *************** function _strlen *****************
  1753 ;; Defined at:
  1754 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1757 ;;		 -> dbuf(32), 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1760 ;;		 -> dbuf(32), 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  2    0[COMRAM] unsigned int 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1770 ;;      Params:         2       0       0       0       0       0       0
  1771 ;;      Locals:         2       0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0
  1773 ;;      Totals:         4       0       0       0       0       0       0
  1774 ;;Total ram usage:        4 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_pad
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text11
  1784  000E78                     __ptext11:
  1785                           	opt callstack 0
  1786  000E78                     _strlen:
  1787                           	opt callstack 25
  1788                           
  1789                           ;incstack = 0
  1790  000E78  C001  F003         	movff	strlen@s,strlen@a
  1791  000E7C  C002  F004         	movff	strlen@s+1,strlen@a+1
  1792  000E80  D002               	goto	l1265
  1793  000E82                     l1263:
  1794  000E82  4A01               	infsnz	strlen@s,f,c
  1795  000E84  2A02               	incf	strlen@s+1,f,c
  1796  000E86                     l1265:
  1797  000E86  C001  FFD9         	movff	strlen@s,fsr2l
  1798  000E8A  C002  FFDA         	movff	strlen@s+1,fsr2h
  1799  000E8E  50DF               	movf	indf2,w,c
  1800  000E90  A4D8               	btfss	status,2,c
  1801  000E92  D7F7               	goto	l1263
  1802  000E94  5003               	movf	strlen@a,w,c
  1803  000E96  5C01               	subwf	strlen@s,w,c
  1804  000E98  6E01               	movwf	?_strlen,c
  1805  000E9A  5004               	movf	strlen@a+1,w,c
  1806  000E9C  5802               	subwfb	strlen@s+1,w,c
  1807  000E9E  6E02               	movwf	?_strlen+1,c
  1808  000EA0  0012               	return		;funcret
  1809  000EA2                     __end_of_strlen:
  1810                           	opt callstack 0
  1811                           
  1812 ;; *************** function _fputs *****************
  1813 ;; Defined at:
  1814 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1817 ;;		 -> dbuf(32), 
  1818 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  1819 ;;		 -> NULL(0), 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  i               2   15[COMRAM] int 
  1822 ;;  c               1   14[COMRAM] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  2   10[COMRAM] int 
  1825 ;; Registers used:
  1826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1832 ;;      Params:         4       0       0       0       0       0       0
  1833 ;;      Locals:         3       0       0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0       0       0
  1835 ;;      Totals:         7       0       0       0       0       0       0
  1836 ;;Total ram usage:        7 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    2
  1839 ;; This function calls:
  1840 ;;		_fputc
  1841 ;; This function is called by:
  1842 ;;		_pad
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text12
  1847  000E0E                     __ptext12:
  1848                           	opt callstack 0
  1849  000E0E                     _fputs:
  1850                           	opt callstack 23
  1851                           
  1852                           ;incstack = 0
  1853  000E0E  0E00               	movlw	0
  1854  000E10  6E11               	movwf	fputs@i+1,c
  1855  000E12  0E00               	movlw	0
  1856  000E14  6E10               	movwf	fputs@i,c
  1857  000E16  D00B               	goto	l1259
  1858  000E18                     l1255:
  1859  000E18  C00F  F002         	movff	fputs@c,fputc@c
  1860  000E1C  6A03               	clrf	fputc@c+1,c
  1861  000E1E  C00D  F004         	movff	fputs@fp,fputc@fp
  1862  000E22  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  1863  000E26  ECA6  F006         	call	_fputc	;wreg free
  1864  000E2A  4A10               	infsnz	fputs@i,f,c
  1865  000E2C  2A11               	incf	fputs@i+1,f,c
  1866  000E2E                     l1259:
  1867  000E2E  5010               	movf	fputs@i,w,c
  1868  000E30  240B               	addwf	fputs@s,w,c
  1869  000E32  6ED9               	movwf	fsr2l,c
  1870  000E34  5011               	movf	fputs@i+1,w,c
  1871  000E36  200C               	addwfc	fputs@s+1,w,c
  1872  000E38  6EDA               	movwf	fsr2h,c
  1873  000E3A  50DF               	movf	indf2,w,c
  1874  000E3C  6E0F               	movwf	fputs@c,c
  1875  000E3E  500F               	movf	fputs@c,w,c
  1876  000E40  B4D8               	btfsc	status,2,c
  1877  000E42  0012               	return	
  1878  000E44  D7E9               	goto	l1255
  1879  000E46                     __end_of_fputs:
  1880                           	opt callstack 0
  1881                           
  1882 ;; *************** function _fputc *****************
  1883 ;; Defined at:
  1884 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  c               2    1[COMRAM] int 
  1887 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  1888 ;;		 -> NULL(0), 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  2    1[COMRAM] int 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1900 ;;      Params:         4       0       0       0       0       0       0
  1901 ;;      Locals:         0       0       0       0       0       0       0
  1902 ;;      Temps:          5       0       0       0       0       0       0
  1903 ;;      Totals:         9       0       0       0       0       0       0
  1904 ;;Total ram usage:        9 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    1
  1907 ;; This function calls:
  1908 ;;		_putch
  1909 ;; This function is called by:
  1910 ;;		_pad
  1911 ;;		_vfpfcnvrt
  1912 ;;		_fputs
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text13
  1917  000D4C                     __ptext13:
  1918                           	opt callstack 0
  1919  000D4C                     _fputc:
  1920                           	opt callstack 26
  1921                           
  1922                           ;incstack = 0
  1923  000D4C  5004               	movf	fputc@fp,w,c
  1924  000D4E  1005               	iorwf	fputc@fp+1,w,c
  1925  000D50  B4D8               	btfsc	status,2,c
  1926  000D52  D004               	goto	u560
  1927  000D54  5004               	movf	fputc@fp,w,c
  1928  000D56  1005               	iorwf	fputc@fp+1,w,c
  1929  000D58  A4D8               	btfss	status,2,c
  1930  000D5A  D004               	goto	l1245
  1931  000D5C                     u560:
  1932  000D5C  5002               	movf	fputc@c,w,c
  1933  000D5E  ECB4  F007         	call	_putch
  1934  000D62  0012               	return	
  1935  000D64                     l1245:
  1936  000D64  EE20 F004          	lfsr	2,4
  1937  000D68  5004               	movf	fputc@fp,w,c
  1938  000D6A  26D9               	addwf	fsr2l,f,c
  1939  000D6C  5005               	movf	fputc@fp+1,w,c
  1940  000D6E  22DA               	addwfc	fsr2h,f,c
  1941  000D70  50DE               	movf	postinc2,w,c
  1942  000D72  10DE               	iorwf	postinc2,w,c
  1943  000D74  B4D8               	btfsc	status,2,c
  1944  000D76  D016               	goto	u580
  1945  000D78  EE20 F004          	lfsr	2,4
  1946  000D7C  5004               	movf	fputc@fp,w,c
  1947  000D7E  26D9               	addwf	fsr2l,f,c
  1948  000D80  5005               	movf	fputc@fp+1,w,c
  1949  000D82  22DA               	addwfc	fsr2h,f,c
  1950  000D84  EE10 F002          	lfsr	1,2
  1951  000D88  5004               	movf	fputc@fp,w,c
  1952  000D8A  26E1               	addwf	fsr1l,f,c
  1953  000D8C  5005               	movf	fputc@fp+1,w,c
  1954  000D8E  22E2               	addwfc	fsr1h,f,c
  1955  000D90  50DE               	movf	postinc2,w,c
  1956  000D92  5CE6               	subwf	postinc1,w,c
  1957  000D94  50E6               	movf	postinc1,w,c
  1958  000D96  0A80               	xorlw	128
  1959  000D98  6E0A               	movwf	(??_fputc+4)& (0+255),c
  1960  000D9A  50DE               	movf	postinc2,w,c
  1961  000D9C  0A80               	xorlw	128
  1962  000D9E  580A               	subwfb	(??_fputc+4)& (0+255),w,c
  1963  000DA0  B0D8               	btfsc	status,0,c
  1964  000DA2  0012               	return	
  1965  000DA4                     u580:
  1966  000DA4  EE20 F002          	lfsr	2,2
  1967  000DA8  5004               	movf	fputc@fp,w,c
  1968  000DAA  26D9               	addwf	fsr2l,f,c
  1969  000DAC  5005               	movf	fputc@fp+1,w,c
  1970  000DAE  22DA               	addwfc	fsr2h,f,c
  1971  000DB0  2ADE               	incf	postinc2,f,c
  1972  000DB2  0E00               	movlw	0
  1973  000DB4  22DD               	addwfc	postdec2,f,c
  1974  000DB6  0012               	return		;funcret
  1975  000DB8                     __end_of_fputc:
  1976                           	opt callstack 0
  1977                           
  1978 ;; *************** function _putch *****************
  1979 ;; Defined at:
  1980 ;;		line 111 in file "./myConfig.h"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  data            1    wreg     unsigned char 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  data            1    0[COMRAM] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1994 ;;      Params:         0       0       0       0       0       0       0
  1995 ;;      Locals:         1       0       0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0
  1997 ;;      Totals:         1       0       0       0       0       0       0
  1998 ;;Total ram usage:        1 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		_fputc
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text14
  2008  000F68                     __ptext14:
  2009                           	opt callstack 0
  2010  000F68                     _putch:
  2011                           	opt callstack 26
  2012                           
  2013                           ;incstack = 0
  2014                           ;putch@data stored from wreg
  2015  000F68  6E01               	movwf	putch@data,c
  2016  000F6A                     
  2017                           ;./myConfig.h: 112:     while( ! PIR1bits.TXIF);
  2018  000F6A  A89E               	btfss	3998,4,c	;volatile
  2019  000F6C  D7FE               	goto	l1235
  2020                           
  2021                           ;./myConfig.h: 113:     TXREG = data;
  2022  000F6E  C001  FFAD         	movff	putch@data,4013	;volatile
  2023  000F72  0012               	return		;funcret
  2024  000F74                     __end_of_putch:
  2025                           	opt callstack 0
  2026                           
  2027 ;; *************** function _abs *****************
  2028 ;; Defined at:
  2029 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  a               2   18[COMRAM] int 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  2   18[COMRAM] int 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2043 ;;      Params:         2       0       0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0
  2045 ;;      Temps:          2       0       0       0       0       0       0
  2046 ;;      Totals:         4       0       0       0       0       0       0
  2047 ;;Total ram usage:        4 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_dtoa
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text15
  2057  000E46                     __ptext15:
  2058                           	opt callstack 0
  2059  000E46                     _abs:
  2060                           	opt callstack 26
  2061                           
  2062                           ;incstack = 0
  2063  000E46  BE14               	btfsc	abs@a+1,7,c
  2064  000E48  D005               	goto	u650
  2065  000E4A  5014               	movf	abs@a+1,w,c
  2066  000E4C  E110               	bnz	l877
  2067  000E4E  0413               	decf	abs@a,w,c
  2068  000E50  B0D8               	btfsc	status,0,c
  2069  000E52  D00D               	goto	l877
  2070  000E54                     u650:
  2071  000E54  C013  F015         	movff	abs@a,??_abs
  2072  000E58  C014  F016         	movff	abs@a+1,??_abs+1
  2073  000E5C  1E15               	comf	??_abs,f,c
  2074  000E5E  1E16               	comf	??_abs+1,f,c
  2075  000E60  4A15               	infsnz	??_abs,f,c
  2076  000E62  2A16               	incf	??_abs+1,f,c
  2077  000E64  C015  F013         	movff	??_abs,?_abs
  2078  000E68  C016  F014         	movff	??_abs+1,?_abs+1
  2079  000E6C  0012               	return	
  2080  000E6E                     l877:
  2081  000E6E  C013  F013         	movff	abs@a,?_abs
  2082  000E72  C014  F014         	movff	abs@a+1,?_abs+1
  2083  000E76  0012               	return		;funcret
  2084  000E78                     __end_of_abs:
  2085                           	opt callstack 0
  2086                           
  2087 ;; *************** function ___aomod *****************
  2088 ;; Defined at:
  2089 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  dividend        8    0[COMRAM] long long 
  2092 ;;  divisor         8    8[COMRAM] long long 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  sign            1   17[COMRAM] unsigned char 
  2095 ;;  counter         1   16[COMRAM] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  8    0[COMRAM] long long 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2105 ;;      Params:        16       0       0       0       0       0       0
  2106 ;;      Locals:         2       0       0       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0
  2108 ;;      Totals:        18       0       0       0       0       0       0
  2109 ;;Total ram usage:       18 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_dtoa
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text16
  2119  000B1A                     __ptext16:
  2120                           	opt callstack 0
  2121  000B1A                     ___aomod:
  2122                           	opt callstack 26
  2123                           
  2124                           ;incstack = 0
  2125  000B1A  0E00               	movlw	0
  2126  000B1C  6E12               	movwf	___aomod@sign,c
  2127  000B1E  AE08               	btfss	___aomod@dividend+7,7,c
  2128  000B20  D012               	goto	l1349
  2129  000B22  1E08               	comf	___aomod@dividend+7,f,c
  2130  000B24  1E07               	comf	___aomod@dividend+6,f,c
  2131  000B26  1E06               	comf	___aomod@dividend+5,f,c
  2132  000B28  1E05               	comf	___aomod@dividend+4,f,c
  2133  000B2A  1E04               	comf	___aomod@dividend+3,f,c
  2134  000B2C  1E03               	comf	___aomod@dividend+2,f,c
  2135  000B2E  1E02               	comf	___aomod@dividend+1,f,c
  2136  000B30  6C01               	negf	___aomod@dividend,c
  2137  000B32  0E00               	movlw	0
  2138  000B34  2202               	addwfc	___aomod@dividend+1,f,c
  2139  000B36  2203               	addwfc	___aomod@dividend+2,f,c
  2140  000B38  2204               	addwfc	___aomod@dividend+3,f,c
  2141  000B3A  2205               	addwfc	___aomod@dividend+4,f,c
  2142  000B3C  2206               	addwfc	___aomod@dividend+5,f,c
  2143  000B3E  2207               	addwfc	___aomod@dividend+6,f,c
  2144  000B40  2208               	addwfc	___aomod@dividend+7,f,c
  2145  000B42  0E01               	movlw	1
  2146  000B44  6E12               	movwf	___aomod@sign,c
  2147  000B46                     l1349:
  2148  000B46  AE10               	btfss	___aomod@divisor+7,7,c
  2149  000B48  D010               	goto	l1353
  2150  000B4A  1E10               	comf	___aomod@divisor+7,f,c
  2151  000B4C  1E0F               	comf	___aomod@divisor+6,f,c
  2152  000B4E  1E0E               	comf	___aomod@divisor+5,f,c
  2153  000B50  1E0D               	comf	___aomod@divisor+4,f,c
  2154  000B52  1E0C               	comf	___aomod@divisor+3,f,c
  2155  000B54  1E0B               	comf	___aomod@divisor+2,f,c
  2156  000B56  1E0A               	comf	___aomod@divisor+1,f,c
  2157  000B58  6C09               	negf	___aomod@divisor,c
  2158  000B5A  0E00               	movlw	0
  2159  000B5C  220A               	addwfc	___aomod@divisor+1,f,c
  2160  000B5E  220B               	addwfc	___aomod@divisor+2,f,c
  2161  000B60  220C               	addwfc	___aomod@divisor+3,f,c
  2162  000B62  220D               	addwfc	___aomod@divisor+4,f,c
  2163  000B64  220E               	addwfc	___aomod@divisor+5,f,c
  2164  000B66  220F               	addwfc	___aomod@divisor+6,f,c
  2165  000B68  2210               	addwfc	___aomod@divisor+7,f,c
  2166  000B6A                     l1353:
  2167  000B6A  5009               	movf	___aomod@divisor,w,c
  2168  000B6C  100A               	iorwf	___aomod@divisor+1,w,c
  2169  000B6E  100B               	iorwf	___aomod@divisor+2,w,c
  2170  000B70  100C               	iorwf	___aomod@divisor+3,w,c
  2171  000B72  100D               	iorwf	___aomod@divisor+4,w,c
  2172  000B74  100E               	iorwf	___aomod@divisor+5,w,c
  2173  000B76  100F               	iorwf	___aomod@divisor+6,w,c
  2174  000B78  1010               	iorwf	___aomod@divisor+7,w,c
  2175  000B7A  B4D8               	btfsc	status,2,c
  2176  000B7C  D03C               	goto	l1369
  2177  000B7E  0E01               	movlw	1
  2178  000B80  6E11               	movwf	___aomod@counter,c
  2179  000B82  D00A               	goto	l1359
  2180  000B84                     l1357:
  2181  000B84  90D8               	bcf	status,0,c
  2182  000B86  3609               	rlcf	___aomod@divisor,f,c
  2183  000B88  360A               	rlcf	___aomod@divisor+1,f,c
  2184  000B8A  360B               	rlcf	___aomod@divisor+2,f,c
  2185  000B8C  360C               	rlcf	___aomod@divisor+3,f,c
  2186  000B8E  360D               	rlcf	___aomod@divisor+4,f,c
  2187  000B90  360E               	rlcf	___aomod@divisor+5,f,c
  2188  000B92  360F               	rlcf	___aomod@divisor+6,f,c
  2189  000B94  3610               	rlcf	___aomod@divisor+7,f,c
  2190  000B96  2A11               	incf	___aomod@counter,f,c
  2191  000B98                     l1359:
  2192  000B98  AE10               	btfss	___aomod@divisor+7,7,c
  2193  000B9A  D7F4               	goto	l1357
  2194  000B9C                     u760:
  2195  000B9C  5009               	movf	___aomod@divisor,w,c
  2196  000B9E  5C01               	subwf	___aomod@dividend,w,c
  2197  000BA0  500A               	movf	___aomod@divisor+1,w,c
  2198  000BA2  5802               	subwfb	___aomod@dividend+1,w,c
  2199  000BA4  500B               	movf	___aomod@divisor+2,w,c
  2200  000BA6  5803               	subwfb	___aomod@dividend+2,w,c
  2201  000BA8  500C               	movf	___aomod@divisor+3,w,c
  2202  000BAA  5804               	subwfb	___aomod@dividend+3,w,c
  2203  000BAC  500D               	movf	___aomod@divisor+4,w,c
  2204  000BAE  5805               	subwfb	___aomod@dividend+4,w,c
  2205  000BB0  500E               	movf	___aomod@divisor+5,w,c
  2206  000BB2  5806               	subwfb	___aomod@dividend+5,w,c
  2207  000BB4  500F               	movf	___aomod@divisor+6,w,c
  2208  000BB6  5807               	subwfb	___aomod@dividend+6,w,c
  2209  000BB8  5010               	movf	___aomod@divisor+7,w,c
  2210  000BBA  5808               	subwfb	___aomod@dividend+7,w,c
  2211  000BBC  A0D8               	btfss	status,0,c
  2212  000BBE  D010               	goto	l1365
  2213  000BC0  5009               	movf	___aomod@divisor,w,c
  2214  000BC2  5E01               	subwf	___aomod@dividend,f,c
  2215  000BC4  500A               	movf	___aomod@divisor+1,w,c
  2216  000BC6  5A02               	subwfb	___aomod@dividend+1,f,c
  2217  000BC8  500B               	movf	___aomod@divisor+2,w,c
  2218  000BCA  5A03               	subwfb	___aomod@dividend+2,f,c
  2219  000BCC  500C               	movf	___aomod@divisor+3,w,c
  2220  000BCE  5A04               	subwfb	___aomod@dividend+3,f,c
  2221  000BD0  500D               	movf	___aomod@divisor+4,w,c
  2222  000BD2  5A05               	subwfb	___aomod@dividend+4,f,c
  2223  000BD4  500E               	movf	___aomod@divisor+5,w,c
  2224  000BD6  5A06               	subwfb	___aomod@dividend+5,f,c
  2225  000BD8  500F               	movf	___aomod@divisor+6,w,c
  2226  000BDA  5A07               	subwfb	___aomod@dividend+6,f,c
  2227  000BDC  5010               	movf	___aomod@divisor+7,w,c
  2228  000BDE  5A08               	subwfb	___aomod@dividend+7,f,c
  2229  000BE0                     l1365:
  2230  000BE0  90D8               	bcf	status,0,c
  2231  000BE2  3210               	rrcf	___aomod@divisor+7,f,c
  2232  000BE4  320F               	rrcf	___aomod@divisor+6,f,c
  2233  000BE6  320E               	rrcf	___aomod@divisor+5,f,c
  2234  000BE8  320D               	rrcf	___aomod@divisor+4,f,c
  2235  000BEA  320C               	rrcf	___aomod@divisor+3,f,c
  2236  000BEC  320B               	rrcf	___aomod@divisor+2,f,c
  2237  000BEE  320A               	rrcf	___aomod@divisor+1,f,c
  2238  000BF0  3209               	rrcf	___aomod@divisor,f,c
  2239  000BF2  2E11               	decfsz	___aomod@counter,f,c
  2240  000BF4  D7D3               	goto	u760
  2241  000BF6                     l1369:
  2242  000BF6  5012               	movf	___aomod@sign,w,c
  2243  000BF8  B4D8               	btfsc	status,2,c
  2244  000BFA  D010               	goto	l1373
  2245  000BFC  1E08               	comf	___aomod@dividend+7,f,c
  2246  000BFE  1E07               	comf	___aomod@dividend+6,f,c
  2247  000C00  1E06               	comf	___aomod@dividend+5,f,c
  2248  000C02  1E05               	comf	___aomod@dividend+4,f,c
  2249  000C04  1E04               	comf	___aomod@dividend+3,f,c
  2250  000C06  1E03               	comf	___aomod@dividend+2,f,c
  2251  000C08  1E02               	comf	___aomod@dividend+1,f,c
  2252  000C0A  6C01               	negf	___aomod@dividend,c
  2253  000C0C  0E00               	movlw	0
  2254  000C0E  2202               	addwfc	___aomod@dividend+1,f,c
  2255  000C10  2203               	addwfc	___aomod@dividend+2,f,c
  2256  000C12  2204               	addwfc	___aomod@dividend+3,f,c
  2257  000C14  2205               	addwfc	___aomod@dividend+4,f,c
  2258  000C16  2206               	addwfc	___aomod@dividend+5,f,c
  2259  000C18  2207               	addwfc	___aomod@dividend+6,f,c
  2260  000C1A  2208               	addwfc	___aomod@dividend+7,f,c
  2261  000C1C                     l1373:
  2262  000C1C  C001  F001         	movff	___aomod@dividend,?___aomod
  2263  000C20  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2264  000C24  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2265  000C28  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2266  000C2C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2267  000C30  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2268  000C34  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2269  000C38  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2270  000C3C  0012               	return		;funcret
  2271  000C3E                     __end_of___aomod:
  2272                           	opt callstack 0
  2273                           
  2274 ;; *************** function ___aodiv *****************
  2275 ;; Defined at:
  2276 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  dividend        8    0[COMRAM] long long 
  2279 ;;  divisor         8    8[COMRAM] long long 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  quotient        8   18[COMRAM] long long 
  2282 ;;  sign            1   17[COMRAM] unsigned char 
  2283 ;;  counter         1   16[COMRAM] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  8    0[COMRAM] long long 
  2286 ;; Registers used:
  2287 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2293 ;;      Params:        16       0       0       0       0       0       0
  2294 ;;      Locals:        10       0       0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0
  2296 ;;      Totals:        26       0       0       0       0       0       0
  2297 ;;Total ram usage:       26 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_dtoa
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text17
  2307  0009D2                     __ptext17:
  2308                           	opt callstack 0
  2309  0009D2                     ___aodiv:
  2310                           	opt callstack 26
  2311                           
  2312                           ;incstack = 0
  2313  0009D2  0E00               	movlw	0
  2314  0009D4  6E12               	movwf	___aodiv@sign,c
  2315  0009D6  AE10               	btfss	___aodiv@divisor+7,7,c
  2316  0009D8  D012               	goto	l1305
  2317  0009DA  1E10               	comf	___aodiv@divisor+7,f,c
  2318  0009DC  1E0F               	comf	___aodiv@divisor+6,f,c
  2319  0009DE  1E0E               	comf	___aodiv@divisor+5,f,c
  2320  0009E0  1E0D               	comf	___aodiv@divisor+4,f,c
  2321  0009E2  1E0C               	comf	___aodiv@divisor+3,f,c
  2322  0009E4  1E0B               	comf	___aodiv@divisor+2,f,c
  2323  0009E6  1E0A               	comf	___aodiv@divisor+1,f,c
  2324  0009E8  6C09               	negf	___aodiv@divisor,c
  2325  0009EA  0E00               	movlw	0
  2326  0009EC  220A               	addwfc	___aodiv@divisor+1,f,c
  2327  0009EE  220B               	addwfc	___aodiv@divisor+2,f,c
  2328  0009F0  220C               	addwfc	___aodiv@divisor+3,f,c
  2329  0009F2  220D               	addwfc	___aodiv@divisor+4,f,c
  2330  0009F4  220E               	addwfc	___aodiv@divisor+5,f,c
  2331  0009F6  220F               	addwfc	___aodiv@divisor+6,f,c
  2332  0009F8  2210               	addwfc	___aodiv@divisor+7,f,c
  2333  0009FA  0E01               	movlw	1
  2334  0009FC  6E12               	movwf	___aodiv@sign,c
  2335  0009FE                     l1305:
  2336  0009FE  AE08               	btfss	___aodiv@dividend+7,7,c
  2337  000A00  D012               	goto	l1311
  2338  000A02  1E08               	comf	___aodiv@dividend+7,f,c
  2339  000A04  1E07               	comf	___aodiv@dividend+6,f,c
  2340  000A06  1E06               	comf	___aodiv@dividend+5,f,c
  2341  000A08  1E05               	comf	___aodiv@dividend+4,f,c
  2342  000A0A  1E04               	comf	___aodiv@dividend+3,f,c
  2343  000A0C  1E03               	comf	___aodiv@dividend+2,f,c
  2344  000A0E  1E02               	comf	___aodiv@dividend+1,f,c
  2345  000A10  6C01               	negf	___aodiv@dividend,c
  2346  000A12  0E00               	movlw	0
  2347  000A14  2202               	addwfc	___aodiv@dividend+1,f,c
  2348  000A16  2203               	addwfc	___aodiv@dividend+2,f,c
  2349  000A18  2204               	addwfc	___aodiv@dividend+3,f,c
  2350  000A1A  2205               	addwfc	___aodiv@dividend+4,f,c
  2351  000A1C  2206               	addwfc	___aodiv@dividend+5,f,c
  2352  000A1E  2207               	addwfc	___aodiv@dividend+6,f,c
  2353  000A20  2208               	addwfc	___aodiv@dividend+7,f,c
  2354  000A22  0E01               	movlw	1
  2355  000A24  1A12               	xorwf	___aodiv@sign,f,c
  2356  000A26                     l1311:
  2357  000A26  EE20  F013         	lfsr	2,___aodiv@quotient
  2358  000A2A  0E07               	movlw	7
  2359  000A2C                     u681:
  2360  000A2C  6ADE               	clrf	postinc2,c
  2361  000A2E  06E8               	decf	wreg,f,c
  2362  000A30  E2FD               	bc	u681
  2363  000A32  5009               	movf	___aodiv@divisor,w,c
  2364  000A34  100A               	iorwf	___aodiv@divisor+1,w,c
  2365  000A36  100B               	iorwf	___aodiv@divisor+2,w,c
  2366  000A38  100C               	iorwf	___aodiv@divisor+3,w,c
  2367  000A3A  100D               	iorwf	___aodiv@divisor+4,w,c
  2368  000A3C  100E               	iorwf	___aodiv@divisor+5,w,c
  2369  000A3E  100F               	iorwf	___aodiv@divisor+6,w,c
  2370  000A40  1010               	iorwf	___aodiv@divisor+7,w,c
  2371  000A42  B4D8               	btfsc	status,2,c
  2372  000A44  D046               	goto	l1333
  2373  000A46  0E01               	movlw	1
  2374  000A48  6E11               	movwf	___aodiv@counter,c
  2375  000A4A  D00A               	goto	l1319
  2376  000A4C                     l1317:
  2377  000A4C  90D8               	bcf	status,0,c
  2378  000A4E  3609               	rlcf	___aodiv@divisor,f,c
  2379  000A50  360A               	rlcf	___aodiv@divisor+1,f,c
  2380  000A52  360B               	rlcf	___aodiv@divisor+2,f,c
  2381  000A54  360C               	rlcf	___aodiv@divisor+3,f,c
  2382  000A56  360D               	rlcf	___aodiv@divisor+4,f,c
  2383  000A58  360E               	rlcf	___aodiv@divisor+5,f,c
  2384  000A5A  360F               	rlcf	___aodiv@divisor+6,f,c
  2385  000A5C  3610               	rlcf	___aodiv@divisor+7,f,c
  2386  000A5E  2A11               	incf	___aodiv@counter,f,c
  2387  000A60                     l1319:
  2388  000A60  AE10               	btfss	___aodiv@divisor+7,7,c
  2389  000A62  D7F4               	goto	l1317
  2390  000A64                     u700:
  2391  000A64  90D8               	bcf	status,0,c
  2392  000A66  3613               	rlcf	___aodiv@quotient,f,c
  2393  000A68  3614               	rlcf	___aodiv@quotient+1,f,c
  2394  000A6A  3615               	rlcf	___aodiv@quotient+2,f,c
  2395  000A6C  3616               	rlcf	___aodiv@quotient+3,f,c
  2396  000A6E  3617               	rlcf	___aodiv@quotient+4,f,c
  2397  000A70  3618               	rlcf	___aodiv@quotient+5,f,c
  2398  000A72  3619               	rlcf	___aodiv@quotient+6,f,c
  2399  000A74  361A               	rlcf	___aodiv@quotient+7,f,c
  2400  000A76  5009               	movf	___aodiv@divisor,w,c
  2401  000A78  5C01               	subwf	___aodiv@dividend,w,c
  2402  000A7A  500A               	movf	___aodiv@divisor+1,w,c
  2403  000A7C  5802               	subwfb	___aodiv@dividend+1,w,c
  2404  000A7E  500B               	movf	___aodiv@divisor+2,w,c
  2405  000A80  5803               	subwfb	___aodiv@dividend+2,w,c
  2406  000A82  500C               	movf	___aodiv@divisor+3,w,c
  2407  000A84  5804               	subwfb	___aodiv@dividend+3,w,c
  2408  000A86  500D               	movf	___aodiv@divisor+4,w,c
  2409  000A88  5805               	subwfb	___aodiv@dividend+4,w,c
  2410  000A8A  500E               	movf	___aodiv@divisor+5,w,c
  2411  000A8C  5806               	subwfb	___aodiv@dividend+5,w,c
  2412  000A8E  500F               	movf	___aodiv@divisor+6,w,c
  2413  000A90  5807               	subwfb	___aodiv@dividend+6,w,c
  2414  000A92  5010               	movf	___aodiv@divisor+7,w,c
  2415  000A94  5808               	subwfb	___aodiv@dividend+7,w,c
  2416  000A96  A0D8               	btfss	status,0,c
  2417  000A98  D011               	goto	l1329
  2418  000A9A  5009               	movf	___aodiv@divisor,w,c
  2419  000A9C  5E01               	subwf	___aodiv@dividend,f,c
  2420  000A9E  500A               	movf	___aodiv@divisor+1,w,c
  2421  000AA0  5A02               	subwfb	___aodiv@dividend+1,f,c
  2422  000AA2  500B               	movf	___aodiv@divisor+2,w,c
  2423  000AA4  5A03               	subwfb	___aodiv@dividend+2,f,c
  2424  000AA6  500C               	movf	___aodiv@divisor+3,w,c
  2425  000AA8  5A04               	subwfb	___aodiv@dividend+3,f,c
  2426  000AAA  500D               	movf	___aodiv@divisor+4,w,c
  2427  000AAC  5A05               	subwfb	___aodiv@dividend+4,f,c
  2428  000AAE  500E               	movf	___aodiv@divisor+5,w,c
  2429  000AB0  5A06               	subwfb	___aodiv@dividend+5,f,c
  2430  000AB2  500F               	movf	___aodiv@divisor+6,w,c
  2431  000AB4  5A07               	subwfb	___aodiv@dividend+6,f,c
  2432  000AB6  5010               	movf	___aodiv@divisor+7,w,c
  2433  000AB8  5A08               	subwfb	___aodiv@dividend+7,f,c
  2434  000ABA  8013               	bsf	___aodiv@quotient,0,c
  2435  000ABC                     l1329:
  2436  000ABC  90D8               	bcf	status,0,c
  2437  000ABE  3210               	rrcf	___aodiv@divisor+7,f,c
  2438  000AC0  320F               	rrcf	___aodiv@divisor+6,f,c
  2439  000AC2  320E               	rrcf	___aodiv@divisor+5,f,c
  2440  000AC4  320D               	rrcf	___aodiv@divisor+4,f,c
  2441  000AC6  320C               	rrcf	___aodiv@divisor+3,f,c
  2442  000AC8  320B               	rrcf	___aodiv@divisor+2,f,c
  2443  000ACA  320A               	rrcf	___aodiv@divisor+1,f,c
  2444  000ACC  3209               	rrcf	___aodiv@divisor,f,c
  2445  000ACE  2E11               	decfsz	___aodiv@counter,f,c
  2446  000AD0  D7C9               	goto	u700
  2447  000AD2                     l1333:
  2448  000AD2  5012               	movf	___aodiv@sign,w,c
  2449  000AD4  B4D8               	btfsc	status,2,c
  2450  000AD6  D010               	goto	l1337
  2451  000AD8  1E1A               	comf	___aodiv@quotient+7,f,c
  2452  000ADA  1E19               	comf	___aodiv@quotient+6,f,c
  2453  000ADC  1E18               	comf	___aodiv@quotient+5,f,c
  2454  000ADE  1E17               	comf	___aodiv@quotient+4,f,c
  2455  000AE0  1E16               	comf	___aodiv@quotient+3,f,c
  2456  000AE2  1E15               	comf	___aodiv@quotient+2,f,c
  2457  000AE4  1E14               	comf	___aodiv@quotient+1,f,c
  2458  000AE6  6C13               	negf	___aodiv@quotient,c
  2459  000AE8  0E00               	movlw	0
  2460  000AEA  2214               	addwfc	___aodiv@quotient+1,f,c
  2461  000AEC  2215               	addwfc	___aodiv@quotient+2,f,c
  2462  000AEE  2216               	addwfc	___aodiv@quotient+3,f,c
  2463  000AF0  2217               	addwfc	___aodiv@quotient+4,f,c
  2464  000AF2  2218               	addwfc	___aodiv@quotient+5,f,c
  2465  000AF4  2219               	addwfc	___aodiv@quotient+6,f,c
  2466  000AF6  221A               	addwfc	___aodiv@quotient+7,f,c
  2467  000AF8                     l1337:
  2468  000AF8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2469  000AFC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2470  000B00  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2471  000B04  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2472  000B08  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2473  000B0C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2474  000B10  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2475  000B14  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2476  000B18  0012               	return		;funcret
  2477  000B1A                     __end_of___aodiv:
  2478                           	opt callstack 0
  2479                           
  2480 ;; *************** function _getADRES *****************
  2481 ;; Defined at:
  2482 ;;		line 141 in file "./myConfig.h"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  2    0[COMRAM] int 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2496 ;;      Params:         2       0       0       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0
  2499 ;;      Totals:         2       0       0       0       0       0       0
  2500 ;;Total ram usage:        2 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_main
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text18
  2510  000F0C                     __ptext18:
  2511                           	opt callstack 0
  2512  000F0C                     _getADRES:
  2513                           	opt callstack 30
  2514                           
  2515                           ;./myConfig.h: 143:     ADRES = 0;
  2516                           
  2517                           ;incstack = 0
  2518  000F0C  0E00               	movlw	0
  2519  000F0E  6EC4               	movwf	4036,c	;volatile
  2520  000F10  0E00               	movlw	0
  2521  000F12  6EC3               	movwf	4035,c	;volatile
  2522                           
  2523                           ;./myConfig.h: 144:     ADCON0bits.GO=1;
  2524  000F14  82C2               	bsf	4034,1,c	;volatile
  2525  000F16                     l98:
  2526  000F16  B2C2               	btfsc	4034,1,c	;volatile
  2527  000F18  D7FE               	goto	l98
  2528                           
  2529                           ;./myConfig.h: 146:     return ADRES;
  2530  000F1A  CFC3 F001          	movff	4035,?_getADRES	;volatile
  2531  000F1E  CFC4 F002          	movff	4036,?_getADRES+1	;volatile
  2532  000F22  0012               	return		;funcret
  2533  000F24                     __end_of_getADRES:
  2534                           	opt callstack 0
  2535                           
  2536                           	psect	rparam
  2537  0000                     tosu	equ	0xFFF
  2538                           tosh	equ	0xFFE
  2539                           tosl	equ	0xFFD
  2540                           stkptr	equ	0xFFC
  2541                           pclatu	equ	0xFFB
  2542                           pclath	equ	0xFFA
  2543                           pcl	equ	0xFF9
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           prodh	equ	0xFF4
  2549                           prodl	equ	0xFF3
  2550                           indf0	equ	0xFEF
  2551                           postinc0	equ	0xFEE
  2552                           postdec0	equ	0xFED
  2553                           preinc0	equ	0xFEC
  2554                           plusw0	equ	0xFEB
  2555                           fsr0h	equ	0xFEA
  2556                           fsr0l	equ	0xFE9
  2557                           wreg	equ	0xFE8
  2558                           indf1	equ	0xFE7
  2559                           postinc1	equ	0xFE6
  2560                           postdec1	equ	0xFE5
  2561                           preinc1	equ	0xFE4
  2562                           plusw1	equ	0xFE3
  2563                           fsr1h	equ	0xFE2
  2564                           fsr1l	equ	0xFE1
  2565                           bsr	equ	0xFE0
  2566                           indf2	equ	0xFDF
  2567                           postinc2	equ	0xFDE
  2568                           postdec2	equ	0xFDD
  2569                           preinc2	equ	0xFDC
  2570                           plusw2	equ	0xFDB
  2571                           fsr2h	equ	0xFDA
  2572                           fsr2l	equ	0xFD9
  2573                           status	equ	0xFD8


Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      4      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S997_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6323
                                             92 COMRAM     3     3      0
                           _getADRES
                             _printf
                   _systemInitialize
 ---------------------------------------------------------------------------------
 (1) _systemInitialize                                     0     0      0       0
                          _adcConfig
                         _portConfig
                         _serialComm
            _set_osc_p18f45k22_16MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_p18f45k22_16MHz                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialComm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _portConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcConfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6255
                                             88 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           _getADRES (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5973
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5619
                                             64 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4270
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2621
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1191
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     790
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _getADRES                                             2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getADRES
   _printf
     _getADRES (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _systemInitialize
     _adcConfig
     _portConfig
     _serialComm
     _set_osc_p18f45k22_16MHz

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      4      2C       4       27.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8B       9        0.0%
DATA                 0      0      8B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 09 01:46:29 2019

                              l77 0F42                                l98 0F16  
       __size_of_systemInitialize 0012                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                               l124 0D02  
                             l116 0CDC                               l119 0CE2  
                             l154 0C6E                               l165 067E  
                             l167 0686                               l877 0E6E  
                    __CFG_CPB$OFF 000000                               _PR2 000FBB  
                    __CFG_CPD$OFF 000000                               u700 0A64  
                             u560 0D5C                               u800 0634  
                             u650 0E54                               u580 0DA4  
                             u900 07EA                               u830 0674  
                             u760 0B9C                               u920 07F8  
                             u681 0A2C                               u850 069A  
                             u860 07B4                               u790 0632  
                             u880 07D6                               u960 08C2  
                             u881 07D4                               u890 07E4  
                             _abs 0E46                               _pad 0C3E  
                             wreg 000FE8                      __CFG_LVP$OFF 000000  
                            ?_abs 0013                              l1311 0A26  
                            l1305 09FE                              l1401 06AE  
                            l1235 0F6A                              l1411 07A6  
                            l1317 0A4C                              l1333 0AD2  
                            l1245 0D64                              l1319 0A60  
                            l1255 0E18                              l1263 0E82  
                            l1431 080E                              l1337 0AF8  
                            l1329 0ABC                              l1353 0B6A  
                            l1265 0E86                              l1281 0C78  
                            l1259 0E2E                              l1275 0C58  
                            l1435 0826                              l1373 0C1C  
                            l1365 0BE0                              l1357 0B84  
                            l1349 0B46                              l1285 0C90  
                            l1509 0CEE                              l1359 0B98  
                            l1279 0C66                              l1383 0660  
                            l1463 097C                              l1369 0BF6  
                            l1289 0CBE                              l1457 0940  
                            l1473 099E                              l1467 0986  
                            l1397 06A0                              l1485 0DCC  
                            l1487 0DF2                              ?_pad 0012  
                            STR_1 0607                              STR_2 0604  
                            STR_3 0601                              u1030 0D3C  
                            u1047 0D20                              _LATA 000F89  
                            _LATB 000F8A                              _LATD 000F8C  
                            abs@a 0013                              _dbuf 0068  
                            _main 0CD8                              _dtoa 060A  
                            _prec 0064                              _nout 0060  
                            pad@i 0019                              pad@p 0016  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf2 000FDF                              fsr1l 000FE1  
                            pad@w 001B                              fsr2l 000FD9  
                   __CFG_BORV$190 000000                              start 0000  
                   __CFG_IESO$OFF 000000         ??_set_osc_p18f45k22_16MHz 0001  
                    ___param_bank 000000                             ??_abs 0015  
                           ??_pad 0018                   __end_of___aodiv 0B1A  
                           ?_main 0001                             ?_dtoa 001D  
                 __end_of___aomod 0C3E                             _ADRES 000FC3  
                    vfpfcnvrt@fmt 0043                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISD 000F95  
                           _TXREG 000FAD                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _flags 0066                             _fputc 0D4C  
                           _fputs 0E0E                __CFG_MCLRE$EXTMCLR 000000  
                           pad@fp 0012                             _width 0062  
                           _putch 0F68                             dtoa@d 001F  
                           dtoa@i 003F                             dtoa@n 0037  
                           dtoa@p 0031                             dtoa@s 0035  
                           dtoa@w 0033                             tablat 000FF5  
                           status 000FD8                    __CFG_HFOFST$ON 000000  
                  __CFG_PBADEN$ON 000000                   __initialization 0EF2  
                    __end_of_main 0D4C                      __end_of_dtoa 0850  
                          ??_main 005D                            ??_dtoa 0027  
                   __activetblptr 000001   __end_of_set_osc_p18f45k22_16MHz 0F48  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            ?_fputc 0002  
                          ?_fputs 000B                            _CCPR2L 000F67  
                          _ANSELA 000F38                            ?_putch 0001  
                          _ANSELB 000F39                            _ANSELD 000F3B  
                  __CFG_WDTEN$OFF 000000                            _RCSTA1 000FAB  
                          _OSCCON 000FD3                            _SPBRG1 000FAF  
                __end_of_getADRES 0F24                            _TXSTA1 000FAC  
                  __CFG_XINST$OFF 000000                      vfprintf@cfmt 0057  
                       ??___aodiv 0011                         ??___aomod 0011  
                  __CFG_STVREN$ON 000000                            clear_0 0EF8  
                _systemInitialize 0F24                            _printf 0ECA  
                          pad@buf 0014                            dtoa@fp 001D  
                          _strlen 0E78                            fputc@c 0002  
                          fputs@c 000F                            fputs@i 0010  
                          fputs@s 000B                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  __end_of_vfprintf 0E0E  
              __size_of_adcConfig 000E                        __accesstop 0060  
         __end_of__initialization 0EFE                     ___rparam_used 000001  
                  __pcstackCOMRAM 0001                     __end_of_fputc 0DB8  
                   __end_of_fputs 0E46                     __end_of_putch 0F74  
                         ??_fputc 0006                           ??_fputs 000F  
                         ??_putch 0001                        __pbssBANK0 0060  
                 __CFG_PLLCFG$OFF 000000                __CFG_CCP2MX$PORTB3 000000  
              __CFG_CCP3MX$PORTB5 000000                 __end_of_adcConfig 0F68  
                         _CCP2CON 000F66                           ?_printf 0059  
                         ?_strlen 0001                         ?_getADRES 0001  
                         _OSCCON2 000FD2                __size_of_vfpfcnvrt 0182  
                         _OSCTUNE 000F9B                   __CFG_PWRTEN$OFF 000000  
                         __Hparam 0000                           __Lparam 0000  
                         ___aodiv 09D2                           ___aomod 0B1A  
                       ?_vfprintf 0051                      __psmallconst 0600  
                         __pcinit 0EF2                           __ramtop 0600  
                         __ptext0 0CD8                           __ptext1 0F24  
                         __ptext2 0F36                           __ptext3 0F48  
                         __ptext4 0EA2                           __ptext5 0F5A  
                         __ptext6 0ECA                           __ptext7 0DB8  
                         __ptext8 0850                           __ptext9 060A  
                 __size_of_printf 0028                   __size_of_strlen 002A  
                      ??_getADRES 0003                         _T2CONbits 000FBA  
                    __size_of_abs 0032                      __size_of_pad 009A  
            end_of_initialization 0EFE          __end_of_systemInitialize 0F36  
                         fputc@fp 0004          ?_set_osc_p18f45k22_16MHz 0001  
                         fputs@fp 000D                        _serialComm 0F48  
               __end_of_vfpfcnvrt 09D2                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                        ??_vfprintf 0057  
                         strlen@a 0003                           strlen@s 0001  
                      _portConfig 0EA2                         _PORTDbits 000F83  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                     vfpfcnvrt@ap 0045                       vfpfcnvrt@fp 0041  
                     vfpfcnvrt@ll 0049                    __end_of_printf 0EF2  
                  __end_of_strlen 0EA2               start_initialization 0EF2  
                     __end_of_abs 0E78                       __end_of_pad 0CD8  
                     ?_serialComm 0001                       vfprintf@fmt 0053  
                     ?_portConfig 0001                          ??_printf 005D  
                        ??_strlen 0003                         _adcConfig 0F5A  
                   __pcstackBANK0 0088                  ___aodiv@dividend 0001  
               __size_of_getADRES 0018                          ?___aodiv 0001  
                        ?___aomod 0001                  ___aodiv@quotient 0013  
                __CFG_PRICLKEN$ON 000000                 __size_of_vfprintf 0056  
                      ?_adcConfig 0001                       __smallconst 0600  
                        _BAUDCON1 000FB8                          _CCPTMRS0 000F49  
             __size_of_serialComm 0012                    __size_of_fputc 006C  
                  __size_of_fputs 0038                    __size_of_putch 000C  
               ?_systemInitialize 0001               __size_of_portConfig 0028  
              ??_systemInitialize 0001                          _PIR1bits 000F9E  
                __CFG_WDTPS$32768 000000  __size_of_set_osc_p18f45k22_16MHz 0012  
                       _vfpfcnvrt 0850                        _ADCON0bits 000FC2  
                       main@index 005E                          __Hrparam 0000  
                      vfprintf@ap 0055                          __Lrparam 0000  
                      vfprintf@fp 0051                      __Lsmallconst 0600  
              __CFG_BOREN$SBORDIS 000000                 __CFG_P2BMX$PORTD2 000000  
                __size_of___aodiv 0148                  __size_of___aomod 0124  
                      ?_vfpfcnvrt 0041                   ___aodiv@divisor 0009  
                 ___aodiv@counter 0011                       ??_adcConfig 0001  
                        _getADRES 0F0C                          _dtoa$536 002F  
                        __ptext10 0C3E                          __ptext11 0E78  
                        __ptext12 0E0E                          __ptext13 0D4C  
                        __ptext14 0F68                          __ptext15 0E46  
                        __ptext16 0B1A                          __ptext17 09D2  
                        __ptext18 0F0C                     __size_of_main 0074  
                   __size_of_dtoa 0246                      ??_serialComm 0001  
                        _vfprintf 0DB8                         printf@fmt 0059  
                    ??_portConfig 0001                  ___aomod@dividend 0001  
                       putch@data 0001                __end_of_serialComm 0F5A  
              __end_of_portConfig 0ECA                        _OSCCONbits 000FD3  
                        printf@ap 008A           _set_osc_p18f45k22_16MHz 0F36  
                 ___aomod@divisor 0009                       ??_vfpfcnvrt 0047  
                 ___aomod@counter 0011                 __CFG_T3CMX$PORTC0 000000  
                    ___aodiv@sign 0012                 __CFG_FOSC$INTIO67 000000  
                    ___aomod@sign 0012  
