

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 17 13:42:43 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35  0000                     
    36                           ; Version 2.05
    37                           ; Generated 20/12/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F45K22 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataBANK0
    72  00102A                     __pidataBANK0:
    73                           	opt callstack 0
    74                           
    75                           ;initializer for _sensorOutpur
    76  00102A  6C                 	db	108
    77  00102B  00                 	db	0
    78  00102C  00                 	db	0
    79  00102D  00                 	db	0
    80  0000                     _ANSELD	set	3899
    81  0000                     _ANSELB	set	3897
    82  0000                     _ANSELA	set	3896
    83  0000                     _ADRES	set	4035
    84  0000                     _PORTAbits	set	3968
    85  0000                     _LATAbits	set	3977
    86  0000                     _TRISAbits	set	3986
    87  0000                     _ADCON0bits	set	4034
    88  0000                     _ADCON2	set	4032
    89  0000                     _ADCON1	set	4033
    90  0000                     _ADCON0	set	4034
    91  0000                     _TXREG	set	4013
    92  0000                     _PIR1bits	set	3998
    93  0000                     _SPBRG1	set	4015
    94  0000                     _BAUDCON1	set	4024
    95  0000                     _TXSTA1	set	4012
    96  0000                     _RCSTA1	set	4011
    97  0000                     _TRISCbits	set	3988
    98  0000                     _TRISD	set	3989
    99  0000                     _LATD	set	3980
   100  0000                     _TRISB	set	3987
   101  0000                     _LATB	set	3978
   102  0000                     _TRISA	set	3986
   103  0000                     _LATA	set	3977
   104  0000                     _OSCCONbits	set	4051
   105  0000                     _OSCTUNE	set	3995
   106  0000                     _OSCCON2	set	4050
   107  0000                     _OSCCON	set	4051
   108                           
   109                           	psect	smallconst
   110  000600                     __psmallconst:
   111                           	opt callstack 0
   112  000600  00                 	db	0
   113  000601                     STR_2:
   114  000601  09                 	db	9
   115  000602  48                 	db	72	;'H'
   116  000603  75                 	db	117	;'u'
   117  000604  6D                 	db	109	;'m'
   118  000605  3A                 	db	58	;':'
   119  000606  20                 	db	32
   120  000607  25                 	db	37
   121  000608  64                 	db	100	;'d'
   122  000609  2E                 	db	46
   123  00060A  25                 	db	37
   124  00060B  64                 	db	100	;'d'
   125  00060C  0A                 	db	10
   126  00060D  0D                 	db	13
   127  00060E  00                 	db	0
   128  00060F                     STR_1:
   129  00060F  54                 	db	84	;'T'
   130  000610  65                 	db	101	;'e'
   131  000611  6D                 	db	109	;'m'
   132  000612  70                 	db	112	;'p'
   133  000613  3A                 	db	58	;':'
   134  000614  20                 	db	32
   135  000615  25                 	db	37
   136  000616  64                 	db	100	;'d'
   137  000617  2E                 	db	46
   138  000618  25                 	db	37
   139  000619  64                 	db	100	;'d'
   140  00061A  00                 	db	0
   141                           
   142                           ; #config settings
   143  00061B  00                 	db	0	; dummy byte at the end
   144  0000                     
   145                           	psect	cinit
   146  000E46                     __pcinit:
   147                           	opt callstack 0
   148  000E46                     start_initialization:
   149                           	opt callstack 0
   150  000E46                     __initialization:
   151                           	opt callstack 0
   152                           
   153                           ; Initialize objects allocated to BANK0 (4 bytes)
   154                           ; load TBLPTR registers with __pidataBANK0
   155  000E46  0E2A               	movlw	low __pidataBANK0
   156  000E48  6EF6               	movwf	tblptrl,c
   157  000E4A  0E10               	movlw	high __pidataBANK0
   158  000E4C  6EF7               	movwf	tblptrh,c
   159  000E4E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   160  000E50  6EF8               	movwf	tblptru,c
   161  000E52  EE00  F094         	lfsr	0,__pdataBANK0
   162  000E56  EE10 F004          	lfsr	1,4
   163  000E5A                     copy_data0:
   164  000E5A  0009               	tblrd		*+
   165  000E5C  CFF5 FFEE          	movff	tablat,postinc0
   166  000E60  50E5               	movf	postdec1,w,c
   167  000E62  50E1               	movf	fsr1l,w,c
   168  000E64  E1FA               	bnz	copy_data0
   169                           
   170                           ; Clear objects allocated to BANK0 (40 bytes)
   171  000E66  EE00  F060         	lfsr	0,__pbssBANK0
   172  000E6A  0E28               	movlw	40
   173  000E6C                     clear_0:
   174  000E6C  6AEE               	clrf	postinc0,c
   175  000E6E  06E8               	decf	wreg,f,c
   176  000E70  E1FD               	bnz	clear_0
   177  000E72                     end_of_initialization:
   178                           	opt callstack 0
   179  000E72                     __end_of__initialization:
   180                           	opt callstack 0
   181  000E72  0E00               	movlw	low (__Lsmallconst shr (0+16))
   182  000E74  6EF8               	movwf	tblptru,c
   183  000E76  0E06               	movlw	high __Lsmallconst
   184  000E78  6EF7               	movwf	tblptrh,c
   185  000E7A  0100               	movlb	0
   186  000E7C  EF28  F006         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssBANK0
   189  000060                     __pbssBANK0:
   190                           	opt callstack 0
   191  000060                     _nout:
   192                           	opt callstack 0
   193  000060                     	ds	2
   194  000062                     _width:
   195                           	opt callstack 0
   196  000062                     	ds	2
   197  000064                     _prec:
   198                           	opt callstack 0
   199  000064                     	ds	2
   200  000066                     _flags:
   201                           	opt callstack 0
   202  000066                     	ds	2
   203  000068                     _dbuf:
   204                           	opt callstack 0
   205  000068                     	ds	32
   206                           
   207                           	psect	dataBANK0
   208  000094                     __pdataBANK0:
   209                           	opt callstack 0
   210  000094                     _sensorOutpur:
   211                           	opt callstack 0
   212  000094                     	ds	4
   213                           
   214                           	psect	cstackBANK0
   215  000088                     __pcstackBANK0:
   216                           	opt callstack 0
   217  000088                     printf@ret:
   218                           	opt callstack 0
   219                           
   220                           ; 2 bytes @ 0x0
   221  000088                     	ds	2
   222  00008A                     printf@ap:
   223                           	opt callstack 0
   224                           
   225                           ; 2 bytes @ 0x2
   226  00008A                     	ds	2
   227  00008C                     ??_main:
   228                           
   229                           ; 1 bytes @ 0x4
   230  00008C                     	ds	4
   231  000090                     main@RHI:
   232                           	opt callstack 0
   233                           
   234                           ; 1 bytes @ 0x8
   235  000090                     	ds	1
   236  000091                     main@RHD:
   237                           	opt callstack 0
   238                           
   239                           ; 1 bytes @ 0x9
   240  000091                     	ds	1
   241  000092                     main@TI:
   242                           	opt callstack 0
   243                           
   244                           ; 1 bytes @ 0xA
   245  000092                     	ds	1
   246  000093                     main@TD:
   247                           	opt callstack 0
   248                           
   249                           ; 1 bytes @ 0xB
   250  000093                     	ds	1
   251                           
   252                           	psect	cstackCOMRAM
   253  000001                     __pcstackCOMRAM:
   254                           	opt callstack 0
   255  000001                     ??_DHT11start:
   256  000001                     ?_strlen:
   257                           	opt callstack 0
   258  000001                     ?___aodiv:
   259                           	opt callstack 0
   260  000001                     ?___aomod:
   261                           	opt callstack 0
   262  000001                     putch@data:
   263                           	opt callstack 0
   264  000001                     readByte@index:
   265                           	opt callstack 0
   266  000001                     strlen@s:
   267                           	opt callstack 0
   268  000001                     ___aodiv@dividend:
   269                           	opt callstack 0
   270  000001                     ___aomod@dividend:
   271                           	opt callstack 0
   272                           
   273                           ; 8 bytes @ 0x0
   274  000001                     	ds	1
   275  000002                     readByte@data:
   276                           	opt callstack 0
   277  000002                     fputc@c:
   278                           	opt callstack 0
   279                           
   280                           ; 2 bytes @ 0x1
   281  000002                     	ds	1
   282  000003                     strlen@a:
   283                           	opt callstack 0
   284                           
   285                           ; 2 bytes @ 0x2
   286  000003                     	ds	1
   287  000004                     fputc@fp:
   288                           	opt callstack 0
   289                           
   290                           ; 2 bytes @ 0x3
   291  000004                     	ds	2
   292  000006                     ??_fputc:
   293                           
   294                           ; 1 bytes @ 0x5
   295  000006                     	ds	3
   296  000009                     ___aodiv@divisor:
   297                           	opt callstack 0
   298  000009                     ___aomod@divisor:
   299                           	opt callstack 0
   300                           
   301                           ; 8 bytes @ 0x8
   302  000009                     	ds	2
   303  00000B                     fputs@s:
   304                           	opt callstack 0
   305                           
   306                           ; 2 bytes @ 0xA
   307  00000B                     	ds	2
   308  00000D                     fputs@fp:
   309                           	opt callstack 0
   310                           
   311                           ; 2 bytes @ 0xC
   312  00000D                     	ds	2
   313  00000F                     fputs@c:
   314                           	opt callstack 0
   315                           
   316                           ; 1 bytes @ 0xE
   317  00000F                     	ds	1
   318  000010                     fputs@i:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0xF
   322  000010                     	ds	1
   323  000011                     ___aodiv@counter:
   324                           	opt callstack 0
   325  000011                     ___aomod@counter:
   326                           	opt callstack 0
   327                           
   328                           ; 1 bytes @ 0x10
   329  000011                     	ds	1
   330  000012                     ?_pad:
   331                           	opt callstack 0
   332  000012                     ___aodiv@sign:
   333                           	opt callstack 0
   334  000012                     ___aomod@sign:
   335                           	opt callstack 0
   336  000012                     pad@fp:
   337                           	opt callstack 0
   338                           
   339                           ; 2 bytes @ 0x11
   340  000012                     	ds	1
   341  000013                     ?_abs:
   342                           	opt callstack 0
   343  000013                     abs@a:
   344                           	opt callstack 0
   345  000013                     ___aodiv@quotient:
   346                           	opt callstack 0
   347                           
   348                           ; 8 bytes @ 0x12
   349  000013                     	ds	1
   350  000014                     pad@buf:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0x13
   354  000014                     	ds	1
   355  000015                     ??_abs:
   356                           
   357                           ; 1 bytes @ 0x14
   358  000015                     	ds	1
   359  000016                     pad@p:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x15
   363  000016                     	ds	2
   364  000018                     ??_pad:
   365                           
   366                           ; 1 bytes @ 0x17
   367  000018                     	ds	1
   368  000019                     pad@i:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x18
   372  000019                     	ds	2
   373  00001B                     pad@w:
   374                           	opt callstack 0
   375                           
   376                           ; 2 bytes @ 0x1A
   377  00001B                     	ds	2
   378  00001D                     ?_dtoa:
   379                           	opt callstack 0
   380  00001D                     dtoa@fp:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x1C
   384  00001D                     	ds	2
   385  00001F                     dtoa@d:
   386                           	opt callstack 0
   387                           
   388                           ; 8 bytes @ 0x1E
   389  00001F                     	ds	8
   390  000027                     ??_dtoa:
   391                           
   392                           ; 1 bytes @ 0x26
   393  000027                     	ds	8
   394  00002F                     _dtoa$584:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x2E
   398  00002F                     	ds	2
   399  000031                     dtoa@p:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x30
   403  000031                     	ds	2
   404  000033                     dtoa@w:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x32
   408  000033                     	ds	2
   409  000035                     dtoa@s:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x34
   413  000035                     	ds	2
   414  000037                     dtoa@n:
   415                           	opt callstack 0
   416                           
   417                           ; 8 bytes @ 0x36
   418  000037                     	ds	8
   419  00003F                     dtoa@i:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x3E
   423  00003F                     	ds	2
   424  000041                     ?_vfpfcnvrt:
   425                           	opt callstack 0
   426  000041                     vfpfcnvrt@fp:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0x40
   430  000041                     	ds	2
   431  000043                     vfpfcnvrt@fmt:
   432                           	opt callstack 0
   433                           
   434                           ; 2 bytes @ 0x42
   435  000043                     	ds	2
   436  000045                     vfpfcnvrt@ap:
   437                           	opt callstack 0
   438                           
   439                           ; 2 bytes @ 0x44
   440  000045                     	ds	2
   441  000047                     ??_vfpfcnvrt:
   442                           
   443                           ; 1 bytes @ 0x46
   444  000047                     	ds	2
   445  000049                     vfpfcnvrt@ll:
   446                           	opt callstack 0
   447                           
   448                           ; 8 bytes @ 0x48
   449  000049                     	ds	8
   450  000051                     ?_vfprintf:
   451                           	opt callstack 0
   452  000051                     vfprintf@fp:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0x50
   456  000051                     	ds	2
   457  000053                     vfprintf@fmt:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x52
   461  000053                     	ds	2
   462  000055                     vfprintf@ap:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x54
   466  000055                     	ds	2
   467  000057                     vfprintf@cfmt:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x56
   471  000057                     	ds	2
   472  000059                     ?_printf:
   473                           	opt callstack 0
   474  000059                     printf@fmt:
   475                           	opt callstack 0
   476                           
   477                           ; 2 bytes @ 0x58
   478  000059                     	ds	6
   479  00005F                     
   480                           ; 1 bytes @ 0x5E
   481 ;;
   482 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   483 ;;
   484 ;; *************** function _main *****************
   485 ;; Defined at:
   486 ;;		line 89 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  TD              1   11[BANK0 ] unsigned char 
   491 ;;  TI              1   10[BANK0 ] unsigned char 
   492 ;;  RHD             1    9[BANK0 ] unsigned char 
   493 ;;  RHI             1    8[BANK0 ] unsigned char 
   494 ;;  verify          1    0        unsigned char 
   495 ;;  cheksum         1    0        unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   505 ;;      Params:         0       0       0       0       0       0       0
   506 ;;      Locals:         0       6       0       0       0       0       0
   507 ;;      Temps:          0       2       0       0       0       0       0
   508 ;;      Totals:         0       8       0       0       0       0       0
   509 ;;Total ram usage:        8 bytes
   510 ;; Hardware stack levels required when called:    8
   511 ;; This function calls:
   512 ;;		_DHT11start
   513 ;;		_printf
   514 ;;		_readByte
   515 ;;		_responseWait
   516 ;;		_systemInitialize
   517 ;; This function is called by:
   518 ;;		Startup code after reset
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text0
   523  000C50                     __ptext0:
   524                           	opt callstack 0
   525  000C50                     _main:
   526                           	opt callstack 23
   527                           
   528                           ;main.c: 91:     systemInitialize();
   529                           
   530                           ;incstack = 0
   531  000C50  ECE6  F007         	call	_systemInitialize	;wreg free
   532  000C54                     l1582:
   533                           
   534                           ;main.c: 94:     {;main.c: 95:         TRISAbits.TRISA1 = 0;
   535  000C54  9292               	bcf	3986,1,c	;volatile
   536                           
   537                           ;main.c: 96:         LATAbits.LATA1 = 1;
   538  000C56  8289               	bsf	3977,1,c	;volatile
   539                           
   540                           ;main.c: 97:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   541  000C58  0E06               	movlw	6
   542  000C5A  0100               	movlb	0	; () banked
   543  000C5C  6F8D               	movwf	(??_main+1)& (0+255),b
   544  000C5E  0E13               	movlw	19
   545  000C60  6F8C               	movwf	??_main& (0+255),b
   546  000C62  0EAD               	movlw	173
   547  000C64                     u1097:
   548  000C64  2EE8               	decfsz	wreg,f,c
   549  000C66  D7FE               	bra	u1097
   550  000C68  2F8C               	decfsz	??_main& (0+255),f,b
   551  000C6A  D7FC               	bra	u1097
   552  000C6C  2F8D               	decfsz	(??_main+1)& (0+255),f,b
   553  000C6E  D7FA               	bra	u1097
   554  000C70  D000               	nop2	
   555                           
   556                           ;main.c: 99:         DHT11start();
   557  000C72  ECD5  F007         	call	_DHT11start	;wreg free
   558                           
   559                           ;main.c: 100:         responseWait();
   560  000C76  EC08  F008         	call	_responseWait	;wreg free
   561                           
   562                           ;main.c: 101:         char RHI = readByte();
   563  000C7A  EC78  F007         	call	_readByte	;wreg free
   564  000C7E  0100               	movlb	0	; () banked
   565  000C80  6F90               	movwf	main@RHI& (0+255),b
   566                           
   567                           ; BSR set to: 0
   568                           ;main.c: 102:         char RHD = readByte();
   569  000C82  EC78  F007         	call	_readByte	;wreg free
   570  000C86  0100               	movlb	0	; () banked
   571  000C88  6F91               	movwf	main@RHD& (0+255),b
   572                           
   573                           ; BSR set to: 0
   574                           ;main.c: 103:         char TI = readByte();
   575  000C8A  EC78  F007         	call	_readByte	;wreg free
   576  000C8E  0100               	movlb	0	; () banked
   577  000C90  6F92               	movwf	main@TI& (0+255),b
   578                           
   579                           ; BSR set to: 0
   580                           ;main.c: 104:         char TD = readByte();
   581  000C92  EC78  F007         	call	_readByte	;wreg free
   582  000C96  0100               	movlb	0	; () banked
   583  000C98  6F93               	movwf	main@TD& (0+255),b
   584                           
   585                           ; BSR set to: 0
   586  000C9A  EC78  F007         	call	_readByte	;wreg free
   587  000C9E  0E0F               	movlw	low STR_1
   588  000CA0  6E59               	movwf	printf@fmt,c
   589  000CA2  0E06               	movlw	high STR_1
   590  000CA4  6E5A               	movwf	printf@fmt+1,c
   591  000CA6  C092  F05B         	movff	main@TI,?_printf+2
   592  000CAA  6A5C               	clrf	?_printf+3,c
   593  000CAC  C093  F05D         	movff	main@TD,?_printf+4
   594  000CB0  6A5E               	clrf	?_printf+5,c
   595  000CB2  EC40  F007         	call	_printf	;wreg free
   596                           
   597                           ;main.c: 109:         printf("\tHum: %d.%d\n\r",RHI,RHD);
   598  000CB6  0E01               	movlw	low STR_2
   599  000CB8  6E59               	movwf	printf@fmt,c
   600  000CBA  0E06               	movlw	high STR_2
   601  000CBC  6E5A               	movwf	printf@fmt+1,c
   602  000CBE  C090  F05B         	movff	main@RHI,?_printf+2
   603  000CC2  6A5C               	clrf	?_printf+3,c
   604  000CC4  C091  F05D         	movff	main@RHD,?_printf+4
   605  000CC8  6A5E               	clrf	?_printf+5,c
   606  000CCA  EC40  F007         	call	_printf	;wreg free
   607                           
   608                           ;main.c: 110:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   609  000CCE  0E06               	movlw	6
   610  000CD0  0100               	movlb	0	; () banked
   611  000CD2  6F8D               	movwf	(??_main+1)& (0+255),b
   612  000CD4  0E13               	movlw	19
   613  000CD6  6F8C               	movwf	??_main& (0+255),b
   614  000CD8  0EAD               	movlw	173
   615  000CDA                     u1107:
   616  000CDA  2EE8               	decfsz	wreg,f,c
   617  000CDC  D7FE               	bra	u1107
   618  000CDE  2F8C               	decfsz	??_main& (0+255),f,b
   619  000CE0  D7FC               	bra	u1107
   620  000CE2  2F8D               	decfsz	(??_main+1)& (0+255),f,b
   621  000CE4  D7FA               	bra	u1107
   622  000CE6  D000               	nop2	
   623  000CE8  D7B5               	goto	l1582
   624  000CEA                     __end_of_main:
   625                           	opt callstack 0
   626                           
   627 ;; *************** function _systemInitialize *****************
   628 ;; Defined at:
   629 ;;		line 38 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   643 ;;      Params:         0       0       0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    1
   650 ;; This function calls:
   651 ;;		_adcConfig
   652 ;;		_portConfig
   653 ;;		_serialComm
   654 ;;		_set_osc_p18f45k22_4MHz
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text1
   661  000FCC                     __ptext1:
   662                           	opt callstack 0
   663  000FCC                     _systemInitialize:
   664                           	opt callstack 29
   665                           
   666                           ;main.c: 40:  set_osc_p18f45k22_4MHz();
   667                           
   668                           ;incstack = 0
   669  000FCC  ECEF  F007         	call	_set_osc_p18f45k22_4MHz	;wreg free
   670                           
   671                           ;main.c: 41:  portConfig();
   672  000FD0  ECAB  F007         	call	_portConfig	;wreg free
   673                           
   674                           ;main.c: 42:  serialComm();
   675  000FD4  ECF8  F007         	call	_serialComm	;wreg free
   676                           
   677                           ;main.c: 43:     adcConfig();
   678  000FD8  EC01  F008         	call	_adcConfig	;wreg free
   679  000FDC  0012               	return		;funcret
   680  000FDE                     __end_of_systemInitialize:
   681                           	opt callstack 0
   682                           
   683 ;; *************** function _set_osc_p18f45k22_4MHz *****************
   684 ;; Defined at:
   685 ;;		line 27 in file "./myConfig.h"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   699 ;;      Params:         0       0       0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0       0       0
   701 ;;      Temps:          0       0       0       0       0       0       0
   702 ;;      Totals:         0       0       0       0       0       0       0
   703 ;;Total ram usage:        0 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_systemInitialize
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text2
   713  000FDE                     __ptext2:
   714                           	opt callstack 0
   715  000FDE                     _set_osc_p18f45k22_4MHz:
   716                           	opt callstack 29
   717                           
   718                           ;./myConfig.h: 29:  OSCCON = 0x52;
   719                           
   720                           ;incstack = 0
   721  000FDE  0E52               	movlw	82
   722  000FE0  6ED3               	movwf	4051,c	;volatile
   723                           
   724                           ;./myConfig.h: 30:  OSCCON2 = 0x04;
   725  000FE2  0E04               	movlw	4
   726  000FE4  6ED2               	movwf	4050,c	;volatile
   727                           
   728                           ;./myConfig.h: 31:  OSCTUNE = 0x80;
   729  000FE6  0E80               	movlw	128
   730  000FE8  6E9B               	movwf	3995,c	;volatile
   731  000FEA                     l63:
   732  000FEA  B4D3               	btfsc	4051,2,c	;volatile
   733  000FEC  0012               	return	
   734  000FEE  D7FD               	goto	l63
   735  000FF0                     __end_of_set_osc_p18f45k22_4MHz:
   736                           	opt callstack 0
   737                           
   738 ;; *************** function _serialComm *****************
   739 ;; Defined at:
   740 ;;		line 94 in file "./myConfig.h"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, status,2
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   754 ;;      Params:         0       0       0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0       0       0
   757 ;;      Totals:         0       0       0       0       0       0       0
   758 ;;Total ram usage:        0 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; This function calls:
   761 ;;		Nothing
   762 ;; This function is called by:
   763 ;;		_systemInitialize
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           	psect	text3
   768  000FF0                     __ptext3:
   769                           	opt callstack 0
   770  000FF0                     _serialComm:
   771                           	opt callstack 29
   772                           
   773                           ;./myConfig.h: 96:  RCSTA1 = 0x90;
   774                           
   775                           ;incstack = 0
   776  000FF0  0E90               	movlw	144
   777  000FF2  6EAB               	movwf	4011,c	;volatile
   778                           
   779                           ;./myConfig.h: 97:  TXSTA1 = 0x26;
   780  000FF4  0E26               	movlw	38
   781  000FF6  6EAC               	movwf	4012,c	;volatile
   782                           
   783                           ;./myConfig.h: 98:  BAUDCON1 = 0x40;
   784  000FF8  0E40               	movlw	64
   785  000FFA  6EB8               	movwf	4024,c	;volatile
   786                           
   787                           ;./myConfig.h: 100:     SPBRG1 = 25;
   788  000FFC  0E19               	movlw	25
   789  000FFE  6EAF               	movwf	4015,c	;volatile
   790  001000  0012               	return		;funcret
   791  001002                     __end_of_serialComm:
   792                           	opt callstack 0
   793                           
   794 ;; *************** function _portConfig *****************
   795 ;; Defined at:
   796 ;;		line 64 in file "./myConfig.h"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg, status,2
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   810 ;;      Params:         0       0       0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0       0       0
   813 ;;      Totals:         0       0       0       0       0       0       0
   814 ;;Total ram usage:        0 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_systemInitialize
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text4
   824  000F56                     __ptext4:
   825                           	opt callstack 0
   826  000F56                     _portConfig:
   827                           	opt callstack 29
   828                           
   829                           ;./myConfig.h: 67:  ANSELA = 0x01;
   830                           
   831                           ;incstack = 0
   832  000F56  0E01               	movlw	1
   833  000F58  010F               	movlb	15	; () banked
   834  000F5A  6F38               	movwf	56,b	;volatile
   835                           
   836                           ;./myConfig.h: 68:  LATA = 0x00;
   837  000F5C  0E00               	movlw	0
   838  000F5E  6E89               	movwf	3977,c	;volatile
   839                           
   840                           ;./myConfig.h: 69:  TRISA = 0x01;
   841  000F60  0E01               	movlw	1
   842  000F62  6E92               	movwf	3986,c	;volatile
   843                           
   844                           ;./myConfig.h: 71:  ANSELB = 0x00;
   845  000F64  0E00               	movlw	0
   846  000F66  6F39               	movwf	57,b	;volatile
   847                           
   848                           ;./myConfig.h: 72:  LATB = 0x00;
   849  000F68  0E00               	movlw	0
   850  000F6A  6E8A               	movwf	3978,c	;volatile
   851                           
   852                           ;./myConfig.h: 73:  TRISB = 0x00;
   853  000F6C  0E00               	movlw	0
   854  000F6E  6E93               	movwf	3987,c	;volatile
   855                           
   856                           ;./myConfig.h: 75:  ANSELD = 0x00;
   857  000F70  0E00               	movlw	0
   858  000F72  6F3B               	movwf	59,b	;volatile
   859                           
   860                           ;./myConfig.h: 76:  LATD = 0x00;
   861  000F74  0E00               	movlw	0
   862  000F76  6E8C               	movwf	3980,c	;volatile
   863                           
   864                           ; BSR set to: 15
   865                           ;./myConfig.h: 77:  TRISD = 0xFF;
   866  000F78  6895               	setf	3989,c	;volatile
   867                           
   868                           ; BSR set to: 15
   869                           ;./myConfig.h: 80:  TRISCbits.TRISC6 = 1;
   870  000F7A  8C94               	bsf	3988,6,c	;volatile
   871                           
   872                           ; BSR set to: 15
   873                           ;./myConfig.h: 81:  TRISCbits.TRISC7 = 1;
   874  000F7C  8E94               	bsf	3988,7,c	;volatile
   875                           
   876                           ; BSR set to: 15
   877  000F7E  0012               	return		;funcret
   878  000F80                     __end_of_portConfig:
   879                           	opt callstack 0
   880                           
   881 ;; *************** function _adcConfig *****************
   882 ;; Defined at:
   883 ;;		line 126 in file "./myConfig.h"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   897 ;;      Params:         0       0       0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0
   900 ;;      Totals:         0       0       0       0       0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_systemInitialize
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text5
   911  001002                     __ptext5:
   912                           	opt callstack 0
   913  001002                     _adcConfig:
   914                           	opt callstack 29
   915                           
   916                           ;./myConfig.h: 128:     ADCON0 = 0x01;
   917                           
   918                           ; BSR set to: 15
   919                           ;incstack = 0
   920  001002  0E01               	movlw	1
   921  001004  6EC2               	movwf	4034,c	;volatile
   922                           
   923                           ;./myConfig.h: 129:     ADCON1 = 0x00;
   924  001006  0E00               	movlw	0
   925  001008  6EC1               	movwf	4033,c	;volatile
   926                           
   927                           ;./myConfig.h: 130:     ADCON2 = 0xC0;
   928  00100A  0EC0               	movlw	192
   929  00100C  6EC0               	movwf	4032,c	;volatile
   930  00100E  0012               	return		;funcret
   931  001010                     __end_of_adcConfig:
   932                           	opt callstack 0
   933                           
   934 ;; *************** function _responseWait *****************
   935 ;; Defined at:
   936 ;;		line 59 in file "main.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		None
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   950 ;;      Params:         0       0       0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_main
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text6
   964  001010                     __ptext6:
   965                           	opt callstack 0
   966  001010                     _responseWait:
   967                           	opt callstack 30
   968                           
   969                           ;main.c: 61:     while(PORTAbits.RA1);
   970                           
   971                           ;incstack = 0
   972  001010  B280               	btfsc	3968,1,c	;volatile
   973  001012  D7FE               	goto	_responseWait
   974  001014                     u1020:
   975  001014  A280               	btfss	3968,1,c	;volatile
   976  001016  D7FE               	goto	u1020
   977  001018                     u1030:
   978  001018  A280               	btfss	3968,1,c	;volatile
   979  00101A  0012               	return	
   980  00101C  D7FD               	goto	u1030
   981  00101E                     __end_of_responseWait:
   982                           	opt callstack 0
   983                           
   984 ;; *************** function _readByte *****************
   985 ;; Defined at:
   986 ;;		line 66 in file "main.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  data            1    1[COMRAM] unsigned char 
   991 ;;  index           1    0[COMRAM] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      unsigned char 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1001 ;;      Params:         0       0       0       0       0       0       0
  1002 ;;      Locals:         2       0       0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0
  1004 ;;      Totals:         2       0       0       0       0       0       0
  1005 ;;Total ram usage:        2 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text7
  1015  000EF0                     __ptext7:
  1016                           	opt callstack 0
  1017  000EF0                     _readByte:
  1018                           	opt callstack 30
  1019                           
  1020                           ;main.c: 68:     char data=0, index=0;
  1021                           
  1022                           ;incstack = 0
  1023  000EF0  0E00               	movlw	0
  1024  000EF2  6E02               	movwf	readByte@data,c
  1025                           
  1026                           ;main.c: 69:     TRISAbits.TRISA1 = 1;
  1027  000EF4  8292               	bsf	3986,1,c	;volatile
  1028                           
  1029                           ;main.c: 71:     for(index=0;index<8;index++)
  1030  000EF6  0E00               	movlw	0
  1031  000EF8  6E01               	movwf	readByte@index,c
  1032  000EFA                     l118:
  1033  000EFA  A280               	btfss	3968,1,c	;volatile
  1034  000EFC  D7FE               	goto	l118
  1035                           
  1036                           ;main.c: 74:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  1037  000EFE  0E0A               	movlw	10
  1038  000F00                     u1117:
  1039  000F00  2EE8               	decfsz	wreg,f,c
  1040  000F02  D7FE               	bra	u1117
  1041                           
  1042                           ;main.c: 75:         if(PORTAbits.RA1==1)
  1043  000F04  A280               	btfss	3968,1,c	;volatile
  1044  000F06  D003               	goto	l1562
  1045                           
  1046                           ;main.c: 76:         {;main.c: 77:             data = ((data<<1)|1);
  1047  000F08  80D8               	bsf	status,0,c
  1048  000F0A  3602               	rlcf	readByte@data,f,c
  1049                           
  1050                           ;main.c: 78:         }
  1051  000F0C  D003               	goto	l123
  1052  000F0E                     l1562:
  1053                           
  1054                           ;main.c: 80:         {;main.c: 81:             data = (data<<1);
  1055  000F0E  5002               	movf	readByte@data,w,c
  1056  000F10  2402               	addwf	readByte@data,w,c
  1057  000F12  6E02               	movwf	readByte@data,c
  1058  000F14                     l123:
  1059  000F14  B280               	btfsc	3968,1,c	;volatile
  1060  000F16  D7FE               	goto	l123
  1061                           
  1062                           ;main.c: 84:     }
  1063  000F18  2A01               	incf	readByte@index,f,c
  1064  000F1A  0E07               	movlw	7
  1065  000F1C  6401               	cpfsgt	readByte@index,c
  1066  000F1E  D7ED               	goto	l118
  1067                           
  1068                           ;main.c: 86:     return data;
  1069  000F20  5002               	movf	readByte@data,w,c
  1070  000F22  0012               	return		;funcret
  1071  000F24                     __end_of_readByte:
  1072                           	opt callstack 0
  1073                           
  1074 ;; *************** function _printf *****************
  1075 ;; Defined at:
  1076 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
  1079 ;;		 -> STR_2(14), STR_1(12), 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  ap              2    2[BANK0 ] PTR void [1]
  1082 ;;		 -> ?_printf(2), 
  1083 ;;  ret             2    0[BANK0 ] int 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  2   88[COMRAM] int 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1093 ;;      Params:         6       0       0       0       0       0       0
  1094 ;;      Locals:         0       4       0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0
  1096 ;;      Totals:         6       4       0       0       0       0       0
  1097 ;;Total ram usage:       10 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    7
  1100 ;; This function calls:
  1101 ;;		_vfprintf
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text8
  1108  000E80                     __ptext8:
  1109                           	opt callstack 0
  1110  000E80                     _printf:
  1111                           	opt callstack 23
  1112                           
  1113                           ;incstack = 0
  1114  000E80  0E5B               	movlw	low (?_printf+2)
  1115  000E82  0100               	movlb	0	; () banked
  1116  000E84  6F8A               	movwf	printf@ap& (0+255),b
  1117  000E86  0E00               	movlw	high (?_printf+2)
  1118  000E88  6F8B               	movwf	(printf@ap+1)& (0+255),b
  1119                           
  1120                           ; BSR set to: 0
  1121  000E8A  0E00               	movlw	0
  1122  000E8C  6E51               	movwf	vfprintf@fp,c
  1123  000E8E  0E00               	movlw	0
  1124  000E90  6E52               	movwf	vfprintf@fp+1,c
  1125  000E92  C059  F053         	movff	printf@fmt,vfprintf@fmt
  1126  000E96  C05A  F054         	movff	printf@fmt+1,vfprintf@fmt+1
  1127  000E9A  0E8A               	movlw	low printf@ap
  1128  000E9C  6E55               	movwf	vfprintf@ap,c
  1129  000E9E  0E00               	movlw	high printf@ap
  1130  000EA0  6E56               	movwf	vfprintf@ap+1,c
  1131  000EA2  ECF8  F006         	call	_vfprintf	;wreg free
  1132  000EA6  C051  F088         	movff	?_vfprintf,printf@ret
  1133  000EAA  C052  F089         	movff	?_vfprintf+1,printf@ret+1
  1134  000EAE  C088  F059         	movff	printf@ret,?_printf
  1135  000EB2  C089  F05A         	movff	printf@ret+1,?_printf+1
  1136  000EB6  0012               	return		;funcret
  1137  000EB8                     __end_of_printf:
  1138                           	opt callstack 0
  1139                           
  1140 ;; *************** function _vfprintf *****************
  1141 ;; Defined at:
  1142 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1145 ;;		 -> NULL(0), 
  1146 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1147 ;;		 -> STR_2(14), STR_1(12), 
  1148 ;;  ap              2   84[COMRAM] PTR PTR void 
  1149 ;;		 -> printf@ap(2), 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1152 ;;		 -> STR_2(14), STR_1(12), 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  2   80[COMRAM] int 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1162 ;;      Params:         6       0       0       0       0       0       0
  1163 ;;      Locals:         2       0       0       0       0       0       0
  1164 ;;      Temps:          0       0       0       0       0       0       0
  1165 ;;      Totals:         8       0       0       0       0       0       0
  1166 ;;Total ram usage:        8 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:    6
  1169 ;; This function calls:
  1170 ;;		_vfpfcnvrt
  1171 ;; This function is called by:
  1172 ;;		_printf
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text9
  1177  000DF0                     __ptext9:
  1178                           	opt callstack 0
  1179  000DF0                     _vfprintf:
  1180                           	opt callstack 23
  1181                           
  1182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1183                           
  1184                           ;incstack = 0
  1185  000DF0  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1186  000DF4  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1187                           
  1188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1189  000DF8  0E00               	movlw	0
  1190  000DFA  0100               	movlb	0	; () banked
  1191  000DFC  6F61               	movwf	(_nout+1)& (0+255),b
  1192  000DFE  0E00               	movlw	0
  1193  000E00  6F60               	movwf	_nout& (0+255),b
  1194                           
  1195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1196  000E02  D013               	goto	l1534
  1197  000E04                     l1532:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1201  000E04  C051  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1202  000E08  C052  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1203  000E0C  0E57               	movlw	low vfprintf@cfmt
  1204  000E0E  6E43               	movwf	vfpfcnvrt@fmt,c
  1205  000E10  0E00               	movlw	high vfprintf@cfmt
  1206  000E12  6E44               	movwf	vfpfcnvrt@fmt+1,c
  1207  000E14  C055  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1208  000E18  C056  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1209  000E1C  EC31  F004         	call	_vfpfcnvrt	;wreg free
  1210  000E20  5041               	movf	?_vfpfcnvrt,w,c
  1211  000E22  0100               	movlb	0	; () banked
  1212  000E24  2760               	addwf	_nout& (0+255),f,b
  1213  000E26  5042               	movf	?_vfpfcnvrt+1,w,c
  1214  000E28  2361               	addwfc	(_nout+1)& (0+255),f,b
  1215  000E2A                     l1534:
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1219  000E2A  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1220  000E2E  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1221  000E32                     	if	0	;tblptru may be non-zero
  1222  000E32                     	endif
  1223  000E32                     	if	0	;tblptru may be non-zero
  1224  000E32                     	endif
  1225  000E32  0008               	tblrd		*
  1226  000E34  50F5               	movf	tablat,w,c
  1227  000E36  0900               	iorlw	0
  1228  000E38  A4D8               	btfss	status,2,c
  1229  000E3A  D7E4               	goto	l1532
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1233  000E3C  C060  F051         	movff	_nout,?_vfprintf
  1234  000E40  C061  F052         	movff	_nout+1,?_vfprintf+1
  1235                           
  1236                           ; BSR set to: 0
  1237  000E44  0012               	return		;funcret
  1238  000E46                     __end_of_vfprintf:
  1239                           	opt callstack 0
  1240                           
  1241 ;; *************** function _vfpfcnvrt *****************
  1242 ;; Defined at:
  1243 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1246 ;;		 -> NULL(0), 
  1247 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1248 ;;		 -> vfprintf@cfmt(2), 
  1249 ;;  ap              2   68[COMRAM] PTR PTR void 
  1250 ;;		 -> printf@ap(2), 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  ll              8   72[COMRAM] long long 
  1253 ;;  llu             8    0        unsigned long long 
  1254 ;;  f               4    0        unsigned long long 
  1255 ;;  vp              3    0        PTR void 
  1256 ;;  ct              3    0        unsigned char [3]
  1257 ;;  cp              3    0        PTR unsigned char 
  1258 ;;  i               2    0        int 
  1259 ;;  done            2    0        int 
  1260 ;;  c               1    0        unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2   64[COMRAM] int 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1270 ;;      Params:         6       0       0       0       0       0       0
  1271 ;;      Locals:         8       0       0       0       0       0       0
  1272 ;;      Temps:          2       0       0       0       0       0       0
  1273 ;;      Totals:        16       0       0       0       0       0       0
  1274 ;;Total ram usage:       16 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    5
  1277 ;; This function calls:
  1278 ;;		_dtoa
  1279 ;;		_fputc
  1280 ;; This function is called by:
  1281 ;;		_vfprintf
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text10
  1286  000862                     __ptext10:
  1287                           	opt callstack 0
  1288  000862                     _vfpfcnvrt:
  1289                           	opt callstack 23
  1290                           
  1291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;incstack = 0
  1295  000862  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1296  000866  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1297  00086A  CFDE FFF6          	movff	postinc2,tblptrl
  1298  00086E  CFDD FFF7          	movff	postdec2,tblptrh
  1299  000872                     	if	0	;tblptru may be non-zero
  1300  000872                     	endif
  1301  000872                     	if	0	;tblptru may be non-zero
  1302  000872                     	endif
  1303  000872  0008               	tblrd		*
  1304  000874  50F5               	movf	tablat,w,c
  1305  000876  0A25               	xorlw	37
  1306  000878  A4D8               	btfss	status,2,c
  1307  00087A  D09A               	goto	l1506
  1308                           
  1309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1310  00087C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1311  000880  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1312  000884  2ADE               	incf	postinc2,f,c
  1313  000886  0E00               	movlw	0
  1314  000888  22DD               	addwfc	postdec2,f,c
  1315                           
  1316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1317  00088A  0E00               	movlw	0
  1318  00088C  0100               	movlb	0	; () banked
  1319  00088E  6F63               	movwf	(_width+1)& (0+255),b
  1320  000890  0E00               	movlw	0
  1321  000892  6F62               	movwf	_width& (0+255),b
  1322  000894  C062  F066         	movff	_width,_flags
  1323  000898  C063  F067         	movff	_width+1,_flags+1
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1327  00089C  6964               	setf	_prec& (0+255),b
  1328  00089E  6965               	setf	(_prec+1)& (0+255),b
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1332  0008A0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1333  0008A4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1334  0008A8  CFDE FFF6          	movff	postinc2,tblptrl
  1335  0008AC  CFDD FFF7          	movff	postdec2,tblptrh
  1336  0008B0                     	if	0	;tblptru may be non-zero
  1337  0008B0                     	endif
  1338  0008B0                     	if	0	;tblptru may be non-zero
  1339  0008B0                     	endif
  1340  0008B0  0008               	tblrd		*
  1341  0008B2  50F5               	movf	tablat,w,c
  1342  0008B4  0A64               	xorlw	100
  1343  0008B6  B4D8               	btfsc	status,2,c
  1344  0008B8  D00D               	goto	u980
  1345                           
  1346                           ; BSR set to: 0
  1347  0008BA  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1348  0008BE  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1349  0008C2  CFDE FFF6          	movff	postinc2,tblptrl
  1350  0008C6  CFDD FFF7          	movff	postdec2,tblptrh
  1351  0008CA                     	if	0	;tblptru may be non-zero
  1352  0008CA                     	endif
  1353  0008CA                     	if	0	;tblptru may be non-zero
  1354  0008CA                     	endif
  1355  0008CA  0008               	tblrd		*
  1356  0008CC  50F5               	movf	tablat,w,c
  1357  0008CE  0A69               	xorlw	105
  1358  0008D0  A4D8               	btfss	status,2,c
  1359  0008D2  D03F               	goto	l1490
  1360  0008D4                     u980:
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1364  0008D4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1365  0008D8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1366  0008DC  2ADE               	incf	postinc2,f,c
  1367  0008DE  0E00               	movlw	0
  1368  0008E0  22DD               	addwfc	postdec2,f,c
  1369                           
  1370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1371  0008E2  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1372  0008E6  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1373  0008EA  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1374  0008EE  0E02               	movlw	2
  1375  0008F0  26DE               	addwf	postinc2,f,c
  1376  0008F2  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1377  0008F6  0E00               	movlw	0
  1378  0008F8  22DD               	addwfc	postdec2,f,c
  1379  0008FA  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1380  0008FE  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1381  000902  CFDE F049          	movff	postinc2,vfpfcnvrt@ll
  1382  000906  CFDD F04A          	movff	postdec2,vfpfcnvrt@ll+1
  1383  00090A  0E00               	movlw	0
  1384  00090C  BE4A               	btfsc	vfpfcnvrt@ll+1,7,c
  1385  00090E  0EFF               	movlw	-1
  1386  000910  6E4B               	movwf	vfpfcnvrt@ll+2,c
  1387  000912  6E4C               	movwf	vfpfcnvrt@ll+3,c
  1388  000914  6E4D               	movwf	vfpfcnvrt@ll+4,c
  1389  000916  6E4E               	movwf	vfpfcnvrt@ll+5,c
  1390  000918  6E4F               	movwf	vfpfcnvrt@ll+6,c
  1391  00091A  6E50               	movwf	vfpfcnvrt@ll+7,c
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1395  00091C  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  1396  000920  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1397  000924  C049  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  1398  000928  C04A  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1399  00092C  C04B  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1400  000930  C04C  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1401  000934  C04D  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1402  000938  C04E  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1403  00093C  C04F  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1404  000940  C050  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1405  000944  EC0E  F003         	call	_dtoa	;wreg free
  1406  000948  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  1407  00094C  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1408  000950  0012               	return	
  1409  000952                     l1490:
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1413  000952  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1414  000956  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1415  00095A  CFDE FFF6          	movff	postinc2,tblptrl
  1416  00095E  CFDD FFF7          	movff	postdec2,tblptrh
  1417  000962                     	if	0	;tblptru may be non-zero
  1418  000962                     	endif
  1419  000962                     	if	0	;tblptru may be non-zero
  1420  000962                     	endif
  1421  000962  0008               	tblrd		*
  1422  000964  50F5               	movf	tablat,w,c
  1423  000966  0A25               	xorlw	37
  1424  000968  A4D8               	btfss	status,2,c
  1425  00096A  D016               	goto	l1500
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1429  00096C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1430  000970  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1431  000974  2ADE               	incf	postinc2,f,c
  1432  000976  0E00               	movlw	0
  1433  000978  22DD               	addwfc	postdec2,f,c
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1437  00097A  0E00               	movlw	0
  1438  00097C  6E03               	movwf	fputc@c+1,c
  1439  00097E  0E25               	movlw	37
  1440  000980  6E02               	movwf	fputc@c,c
  1441  000982  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1442  000986  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1443  00098A  ECC2  F006         	call	_fputc	;wreg free
  1444  00098E                     l1496:
  1445                           
  1446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1447  00098E  0E00               	movlw	0
  1448  000990  6E42               	movwf	?_vfpfcnvrt+1,c
  1449  000992  0E01               	movlw	1
  1450  000994  6E41               	movwf	?_vfpfcnvrt,c
  1451  000996  0012               	return	
  1452  000998                     l1500:
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1456  000998  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1457  00099C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1458  0009A0  2ADE               	incf	postinc2,f,c
  1459  0009A2  0E00               	movlw	0
  1460  0009A4  22DD               	addwfc	postdec2,f,c
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1464  0009A6  0E00               	movlw	0
  1465  0009A8  6E42               	movwf	?_vfpfcnvrt+1,c
  1466  0009AA  0E00               	movlw	0
  1467  0009AC  6E41               	movwf	?_vfpfcnvrt,c
  1468  0009AE  0012               	return	
  1469  0009B0                     l1506:
  1470                           
  1471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1472  0009B0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1473  0009B4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1474  0009B8  CFDE FFF6          	movff	postinc2,tblptrl
  1475  0009BC  CFDD FFF7          	movff	postdec2,tblptrh
  1476  0009C0                     	if	0	;tblptru may be non-zero
  1477  0009C0                     	endif
  1478  0009C0                     	if	0	;tblptru may be non-zero
  1479  0009C0                     	endif
  1480  0009C0  0008               	tblrd		*
  1481  0009C2  50F5               	movf	tablat,w,c
  1482  0009C4  6E02               	movwf	fputc@c,c
  1483  0009C6  6A03               	clrf	fputc@c+1,c
  1484  0009C8  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1485  0009CC  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1486  0009D0  ECC2  F006         	call	_fputc	;wreg free
  1487                           
  1488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1489  0009D4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1490  0009D8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1491  0009DC  2ADE               	incf	postinc2,f,c
  1492  0009DE  0E00               	movlw	0
  1493  0009E0  22DD               	addwfc	postdec2,f,c
  1494  0009E2  D7D5               	goto	l1496
  1495  0009E4                     __end_of_vfpfcnvrt:
  1496                           	opt callstack 0
  1497                           
  1498 ;; *************** function _dtoa *****************
  1499 ;; Defined at:
  1500 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1503 ;;		 -> NULL(0), 
  1504 ;;  d               8   30[COMRAM] long long 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  n               8   54[COMRAM] long long 
  1507 ;;  i               2   62[COMRAM] int 
  1508 ;;  s               2   52[COMRAM] int 
  1509 ;;  w               2   50[COMRAM] int 
  1510 ;;  p               2   48[COMRAM] int 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  2   28[COMRAM] int 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1520 ;;      Params:        10       0       0       0       0       0       0
  1521 ;;      Locals:        18       0       0       0       0       0       0
  1522 ;;      Temps:          8       0       0       0       0       0       0
  1523 ;;      Totals:        36       0       0       0       0       0       0
  1524 ;;Total ram usage:       36 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    4
  1527 ;; This function calls:
  1528 ;;		___aodiv
  1529 ;;		___aomod
  1530 ;;		_abs
  1531 ;;		_pad
  1532 ;; This function is called by:
  1533 ;;		_vfpfcnvrt
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text11
  1538  00061C                     __ptext11:
  1539                           	opt callstack 0
  1540  00061C                     _dtoa:
  1541                           	opt callstack 23
  1542                           
  1543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1544                           
  1545                           ;incstack = 0
  1546  00061C  C01F  F037         	movff	dtoa@d,dtoa@n
  1547  000620  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  1548  000624  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  1549  000628  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  1550  00062C  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  1551  000630  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  1552  000634  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  1553  000638  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  1554                           
  1555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1556  00063C  AE3E               	btfss	dtoa@n+7,7,c
  1557  00063E  D002               	goto	u810
  1558  000640  0E01               	movlw	1
  1559  000642  D001               	goto	u820
  1560  000644                     u810:
  1561  000644  0E00               	movlw	0
  1562  000646                     u820:
  1563  000646  6E35               	movwf	dtoa@s,c
  1564  000648  6A36               	clrf	dtoa@s+1,c
  1565                           
  1566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1567  00064A  5035               	movf	dtoa@s,w,c
  1568  00064C  1036               	iorwf	dtoa@s+1,w,c
  1569  00064E  B4D8               	btfsc	status,2,c
  1570  000650  D010               	goto	l1416
  1571                           
  1572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1573  000652  1E3E               	comf	dtoa@n+7,f,c
  1574  000654  1E3D               	comf	dtoa@n+6,f,c
  1575  000656  1E3C               	comf	dtoa@n+5,f,c
  1576  000658  1E3B               	comf	dtoa@n+4,f,c
  1577  00065A  1E3A               	comf	dtoa@n+3,f,c
  1578  00065C  1E39               	comf	dtoa@n+2,f,c
  1579  00065E  1E38               	comf	dtoa@n+1,f,c
  1580  000660  6C37               	negf	dtoa@n,c
  1581  000662  0E00               	movlw	0
  1582  000664  2238               	addwfc	dtoa@n+1,f,c
  1583  000666  2239               	addwfc	dtoa@n+2,f,c
  1584  000668  223A               	addwfc	dtoa@n+3,f,c
  1585  00066A  223B               	addwfc	dtoa@n+4,f,c
  1586  00066C  223C               	addwfc	dtoa@n+5,f,c
  1587  00066E  223D               	addwfc	dtoa@n+6,f,c
  1588  000670  223E               	addwfc	dtoa@n+7,f,c
  1589  000672                     l1416:
  1590                           
  1591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1592  000672  0100               	movlb	0	; () banked
  1593  000674  AF65               	btfss	(_prec+1)& (0+255),7,b
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1597  000676  9366               	bcf	_flags& (0+255),1,b
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1601  000678  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1602  00067A  D005               	goto	u850
  1603  00067C  5165               	movf	(_prec+1)& (0+255),w,b
  1604  00067E  E108               	bnz	l172
  1605  000680  0564               	decf	_prec& (0+255),w,b
  1606  000682  B0D8               	btfsc	status,0,c
  1607  000684  D005               	goto	l172
  1608  000686                     u850:
  1609                           
  1610                           ; BSR set to: 0
  1611  000686  0E00               	movlw	0
  1612  000688  6E32               	movwf	dtoa@p+1,c
  1613  00068A  0E01               	movlw	1
  1614  00068C  6E31               	movwf	dtoa@p,c
  1615  00068E  D004               	goto	l174
  1616  000690                     l172:
  1617                           
  1618                           ; BSR set to: 0
  1619  000690  C064  F031         	movff	_prec,dtoa@p
  1620  000694  C065  F032         	movff	_prec+1,dtoa@p+1
  1621  000698                     l174:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1625  000698  C062  F033         	movff	_width,dtoa@w
  1626  00069C  C063  F034         	movff	_width+1,dtoa@w+1
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1630  0006A0  5035               	movf	dtoa@s,w,c
  1631  0006A2  1036               	iorwf	dtoa@s+1,w,c
  1632  0006A4  A4D8               	btfss	status,2,c
  1633  0006A6  D002               	goto	u870
  1634                           
  1635                           ; BSR set to: 0
  1636  0006A8  A566               	btfss	_flags& (0+255),2,b
  1637  0006AA  D003               	goto	l1430
  1638  0006AC                     u870:
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1642  0006AC  0633               	decf	dtoa@w,f,c
  1643  0006AE  A0D8               	btfss	status,0,c
  1644  0006B0  0634               	decf	dtoa@w+1,f,c
  1645  0006B2                     l1430:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1649  0006B2  0E00               	movlw	0
  1650  0006B4  6E40               	movwf	dtoa@i+1,c
  1651  0006B6  0E1F               	movlw	31
  1652  0006B8  6E3F               	movwf	dtoa@i,c
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1656  0006BA  0E00               	movlw	0
  1657  0006BC  6F87               	movwf	(_dbuf+31)& (0+255),b
  1658                           
  1659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1660  0006BE  D07C               	goto	l1444
  1661  0006C0                     l1434:
  1662                           
  1663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1664  0006C0  063F               	decf	dtoa@i,f,c
  1665  0006C2  A0D8               	btfss	status,0,c
  1666  0006C4  0640               	decf	dtoa@i+1,f,c
  1667                           
  1668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1669  0006C6  0E68               	movlw	low _dbuf
  1670  0006C8  243F               	addwf	dtoa@i,w,c
  1671  0006CA  6ED9               	movwf	fsr2l,c
  1672  0006CC  0E00               	movlw	high _dbuf
  1673  0006CE  2040               	addwfc	dtoa@i+1,w,c
  1674  0006D0  6EDA               	movwf	fsr2h,c
  1675  0006D2  C037  F001         	movff	dtoa@n,___aomod@dividend
  1676  0006D6  C038  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1677  0006DA  C039  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1678  0006DE  C03A  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1679  0006E2  C03B  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1680  0006E6  C03C  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1681  0006EA  C03D  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1682  0006EE  C03E  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1683  0006F2  0E0A               	movlw	10
  1684  0006F4  6E09               	movwf	___aomod@divisor,c
  1685  0006F6  0E00               	movlw	0
  1686  0006F8  6E0A               	movwf	___aomod@divisor+1,c
  1687  0006FA  0E00               	movlw	0
  1688  0006FC  6E0B               	movwf	___aomod@divisor+2,c
  1689  0006FE  0E00               	movlw	0
  1690  000700  6E0C               	movwf	___aomod@divisor+3,c
  1691  000702  0E00               	movlw	0
  1692  000704  6E0D               	movwf	___aomod@divisor+4,c
  1693  000706  0E00               	movlw	0
  1694  000708  6E0E               	movwf	___aomod@divisor+5,c
  1695  00070A  0E00               	movlw	0
  1696  00070C  6E0F               	movwf	___aomod@divisor+6,c
  1697  00070E  0E00               	movlw	0
  1698  000710  6E10               	movwf	___aomod@divisor+7,c
  1699  000712  EC96  F005         	call	___aomod	;wreg free
  1700  000716  C001  F027         	movff	?___aomod,??_dtoa
  1701  00071A  C002  F028         	movff	?___aomod+1,??_dtoa+1
  1702  00071E  C003  F029         	movff	?___aomod+2,??_dtoa+2
  1703  000722  C004  F02A         	movff	?___aomod+3,??_dtoa+3
  1704  000726  C005  F02B         	movff	?___aomod+4,??_dtoa+4
  1705  00072A  C006  F02C         	movff	?___aomod+5,??_dtoa+5
  1706  00072E  C007  F02D         	movff	?___aomod+6,??_dtoa+6
  1707  000732  C008  F02E         	movff	?___aomod+7,??_dtoa+7
  1708  000736  C027  F013         	movff	??_dtoa,abs@a
  1709  00073A  C029  F014         	movff	??_dtoa+2,abs@a+1
  1710  00073E  EC92  F007         	call	_abs	;wreg free
  1711  000742  5013               	movf	?_abs,w,c
  1712  000744  0F30               	addlw	48
  1713  000746  6EDF               	movwf	indf2,c
  1714                           
  1715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1716  000748  0631               	decf	dtoa@p,f,c
  1717  00074A  A0D8               	btfss	status,0,c
  1718  00074C  0632               	decf	dtoa@p+1,f,c
  1719                           
  1720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1721  00074E  0633               	decf	dtoa@w,f,c
  1722  000750  A0D8               	btfss	status,0,c
  1723  000752  0634               	decf	dtoa@w+1,f,c
  1724                           
  1725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1726  000754  C037  F001         	movff	dtoa@n,___aodiv@dividend
  1727  000758  C038  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1728  00075C  C039  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1729  000760  C03A  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1730  000764  C03B  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1731  000768  C03C  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1732  00076C  C03D  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1733  000770  C03E  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1734  000774  0E0A               	movlw	10
  1735  000776  6E09               	movwf	___aodiv@divisor,c
  1736  000778  0E00               	movlw	0
  1737  00077A  6E0A               	movwf	___aodiv@divisor+1,c
  1738  00077C  0E00               	movlw	0
  1739  00077E  6E0B               	movwf	___aodiv@divisor+2,c
  1740  000780  0E00               	movlw	0
  1741  000782  6E0C               	movwf	___aodiv@divisor+3,c
  1742  000784  0E00               	movlw	0
  1743  000786  6E0D               	movwf	___aodiv@divisor+4,c
  1744  000788  0E00               	movlw	0
  1745  00078A  6E0E               	movwf	___aodiv@divisor+5,c
  1746  00078C  0E00               	movlw	0
  1747  00078E  6E0F               	movwf	___aodiv@divisor+6,c
  1748  000790  0E00               	movlw	0
  1749  000792  6E10               	movwf	___aodiv@divisor+7,c
  1750  000794  ECF2  F004         	call	___aodiv	;wreg free
  1751  000798  C001  F037         	movff	?___aodiv,dtoa@n
  1752  00079C  C002  F038         	movff	?___aodiv+1,dtoa@n+1
  1753  0007A0  C003  F039         	movff	?___aodiv+2,dtoa@n+2
  1754  0007A4  C004  F03A         	movff	?___aodiv+3,dtoa@n+3
  1755  0007A8  C005  F03B         	movff	?___aodiv+4,dtoa@n+4
  1756  0007AC  C006  F03C         	movff	?___aodiv+5,dtoa@n+5
  1757  0007B0  C007  F03D         	movff	?___aodiv+6,dtoa@n+6
  1758  0007B4  C008  F03E         	movff	?___aodiv+7,dtoa@n+7
  1759  0007B8                     l1444:
  1760                           
  1761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1762  0007B8  BE40               	btfsc	dtoa@i+1,7,c
  1763  0007BA  D020               	goto	u920
  1764  0007BC  5040               	movf	dtoa@i+1,w,c
  1765  0007BE  E103               	bnz	u880
  1766  0007C0  043F               	decf	dtoa@i,w,c
  1767  0007C2  A0D8               	btfss	status,0,c
  1768  0007C4  D01B               	goto	u920
  1769  0007C6                     u880:
  1770  0007C6  5037               	movf	dtoa@n,w,c
  1771  0007C8  1038               	iorwf	dtoa@n+1,w,c
  1772  0007CA  1039               	iorwf	dtoa@n+2,w,c
  1773  0007CC  103A               	iorwf	dtoa@n+3,w,c
  1774  0007CE  103B               	iorwf	dtoa@n+4,w,c
  1775  0007D0  103C               	iorwf	dtoa@n+5,w,c
  1776  0007D2  103D               	iorwf	dtoa@n+6,w,c
  1777  0007D4  103E               	iorwf	dtoa@n+7,w,c
  1778  0007D6  A4D8               	btfss	status,2,c
  1779  0007D8  D773               	goto	l1434
  1780  0007DA  BE32               	btfsc	dtoa@p+1,7,c
  1781  0007DC  D005               	goto	u900
  1782  0007DE  5032               	movf	dtoa@p+1,w,c
  1783  0007E0  E102               	bnz	u901
  1784  0007E2  0431               	decf	dtoa@p,w,c
  1785  0007E4  B0D8               	btfsc	status,0,c
  1786  0007E6                     u901:
  1787  0007E6  D76C               	goto	l1434
  1788  0007E8                     u900:
  1789  0007E8  BE34               	btfsc	dtoa@w+1,7,c
  1790  0007EA  D008               	goto	u920
  1791  0007EC  5034               	movf	dtoa@w+1,w,c
  1792  0007EE  E103               	bnz	u910
  1793  0007F0  0433               	decf	dtoa@w,w,c
  1794  0007F2  A0D8               	btfss	status,0,c
  1795  0007F4  D003               	goto	u920
  1796  0007F6                     u910:
  1797  0007F6  0100               	movlb	0	; () banked
  1798  0007F8  B366               	btfsc	_flags& (0+255),1,b
  1799  0007FA  D762               	goto	l1434
  1800  0007FC                     u920:
  1801                           
  1802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1803  0007FC  5035               	movf	dtoa@s,w,c
  1804  0007FE  1036               	iorwf	dtoa@s+1,w,c
  1805  000800  A4D8               	btfss	status,2,c
  1806  000802  D003               	goto	u940
  1807  000804  0100               	movlb	0	; () banked
  1808  000806  A566               	btfss	_flags& (0+255),2,b
  1809  000808  D017               	goto	l1468
  1810  00080A                     u940:
  1811                           
  1812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1813  00080A  063F               	decf	dtoa@i,f,c
  1814  00080C  A0D8               	btfss	status,0,c
  1815  00080E  0640               	decf	dtoa@i+1,f,c
  1816                           
  1817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1818  000810  5035               	movf	dtoa@s,w,c
  1819  000812  1036               	iorwf	dtoa@s+1,w,c
  1820  000814  A4D8               	btfss	status,2,c
  1821  000816  D004               	goto	l1464
  1822  000818  0E00               	movlw	0
  1823  00081A  6E30               	movwf	_dtoa$584+1,c
  1824  00081C  0E2B               	movlw	43
  1825  00081E  D003               	goto	L1
  1826  000820                     l1464:
  1827  000820  0E00               	movlw	0
  1828  000822  6E30               	movwf	_dtoa$584+1,c
  1829  000824  0E2D               	movlw	45
  1830  000826                     L1:
  1831  000826  6E2F               	movwf	_dtoa$584,c
  1832  000828  0E68               	movlw	low _dbuf
  1833  00082A  243F               	addwf	dtoa@i,w,c
  1834  00082C  6ED9               	movwf	fsr2l,c
  1835  00082E  0E00               	movlw	high _dbuf
  1836  000830  2040               	addwfc	dtoa@i+1,w,c
  1837  000832  6EDA               	movwf	fsr2h,c
  1838  000834  C02F  FFDF         	movff	_dtoa$584,indf2
  1839  000838                     l1468:
  1840                           
  1841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1842  000838  C01D  F012         	movff	dtoa@fp,pad@fp
  1843  00083C  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  1844  000840  0E68               	movlw	low _dbuf
  1845  000842  243F               	addwf	dtoa@i,w,c
  1846  000844  6E14               	movwf	pad@buf,c
  1847  000846  0E00               	movlw	high _dbuf
  1848  000848  2040               	addwfc	dtoa@i+1,w,c
  1849  00084A  6E15               	movwf	pad@buf+1,c
  1850  00084C  C033  F016         	movff	dtoa@w,pad@p
  1851  000850  C034  F017         	movff	dtoa@w+1,pad@p+1
  1852  000854  EC75  F006         	call	_pad	;wreg free
  1853  000858  C012  F01D         	movff	?_pad,?_dtoa
  1854  00085C  C013  F01E         	movff	?_pad+1,?_dtoa+1
  1855  000860  0012               	return		;funcret
  1856  000862                     __end_of_dtoa:
  1857                           	opt callstack 0
  1858                           
  1859 ;; *************** function _pad *****************
  1860 ;; Defined at:
  1861 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1864 ;;		 -> NULL(0), 
  1865 ;;  buf             2   19[COMRAM] PTR unsigned char 
  1866 ;;		 -> dbuf(32), 
  1867 ;;  p               2   21[COMRAM] int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  w               2   26[COMRAM] int 
  1870 ;;  i               2   24[COMRAM] int 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  2   17[COMRAM] int 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1880 ;;      Params:         6       0       0       0       0       0       0
  1881 ;;      Locals:         4       0       0       0       0       0       0
  1882 ;;      Temps:          1       0       0       0       0       0       0
  1883 ;;      Totals:        11       0       0       0       0       0       0
  1884 ;;Total ram usage:       11 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    3
  1887 ;; This function calls:
  1888 ;;		_fputc
  1889 ;;		_fputs
  1890 ;;		_strlen
  1891 ;; This function is called by:
  1892 ;;		_dtoa
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text12
  1897  000CEA                     __ptext12:
  1898                           	opt callstack 0
  1899  000CEA                     _pad:
  1900                           	opt callstack 23
  1901                           
  1902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1903                           
  1904                           ;incstack = 0
  1905  000CEA  0100               	movlb	0	; () banked
  1906  000CEC  A166               	btfss	_flags& (0+255),0,b
  1907  000CEE  D00A               	goto	l1308
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1911  000CF0  C014  F00B         	movff	pad@buf,fputs@s
  1912  000CF4  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1913  000CF8  C012  F00D         	movff	pad@fp,fputs@fp
  1914  000CFC  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1915  000D00  EC5C  F007         	call	_fputs	;wreg free
  1916  000D04                     l1308:
  1917                           
  1918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1919  000D04  BE17               	btfsc	pad@p+1,7,c
  1920  000D06  D005               	goto	l1312
  1921  000D08  C016  F01B         	movff	pad@p,pad@w
  1922  000D0C  C017  F01C         	movff	pad@p+1,pad@w+1
  1923  000D10  D004               	goto	l161
  1924  000D12                     l1312:
  1925  000D12  0E00               	movlw	0
  1926  000D14  6E1C               	movwf	pad@w+1,c
  1927  000D16  0E00               	movlw	0
  1928  000D18  6E1B               	movwf	pad@w,c
  1929  000D1A                     l161:
  1930                           
  1931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1932  000D1A  0E00               	movlw	0
  1933  000D1C  6E1A               	movwf	pad@i+1,c
  1934  000D1E  0E00               	movlw	0
  1935  000D20  6E19               	movwf	pad@i,c
  1936                           
  1937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1938  000D22  D00C               	goto	l1318
  1939  000D24                     l1314:
  1940                           
  1941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1942  000D24  0E00               	movlw	0
  1943  000D26  6E03               	movwf	fputc@c+1,c
  1944  000D28  0E20               	movlw	32
  1945  000D2A  6E02               	movwf	fputc@c,c
  1946  000D2C  C012  F004         	movff	pad@fp,fputc@fp
  1947  000D30  C013  F005         	movff	pad@fp+1,fputc@fp+1
  1948  000D34  ECC2  F006         	call	_fputc	;wreg free
  1949                           
  1950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1951  000D38  4A19               	infsnz	pad@i,f,c
  1952  000D3A  2A1A               	incf	pad@i+1,f,c
  1953  000D3C                     l1318:
  1954                           
  1955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1956  000D3C  501B               	movf	pad@w,w,c
  1957  000D3E  5C19               	subwf	pad@i,w,c
  1958  000D40  501A               	movf	pad@i+1,w,c
  1959  000D42  0A80               	xorlw	128
  1960  000D44  6E18               	movwf	??_pad& (0+255),c
  1961  000D46  501C               	movf	pad@w+1,w,c
  1962  000D48  0A80               	xorlw	128
  1963  000D4A  5818               	subwfb	??_pad& (0+255),w,c
  1964  000D4C  A0D8               	btfss	status,0,c
  1965  000D4E  D7EA               	goto	l1314
  1966                           
  1967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1968  000D50  0100               	movlb	0	; () banked
  1969  000D52  B166               	btfsc	_flags& (0+255),0,b
  1970  000D54  D00A               	goto	l1322
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1974  000D56  C014  F00B         	movff	pad@buf,fputs@s
  1975  000D5A  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1976  000D5E  C012  F00D         	movff	pad@fp,fputs@fp
  1977  000D62  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1978  000D66  EC5C  F007         	call	_fputs	;wreg free
  1979  000D6A                     l1322:
  1980                           
  1981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1982  000D6A  C014  F001         	movff	pad@buf,strlen@s
  1983  000D6E  C015  F002         	movff	pad@buf+1,strlen@s+1
  1984  000D72  ECC0  F007         	call	_strlen	;wreg free
  1985  000D76  501B               	movf	pad@w,w,c
  1986  000D78  2401               	addwf	?_strlen,w,c
  1987  000D7A  6E12               	movwf	?_pad,c
  1988  000D7C  501C               	movf	pad@w+1,w,c
  1989  000D7E  2002               	addwfc	?_strlen+1,w,c
  1990  000D80  6E13               	movwf	?_pad+1,c
  1991  000D82  0012               	return		;funcret
  1992  000D84                     __end_of_pad:
  1993                           	opt callstack 0
  1994                           
  1995 ;; *************** function _strlen *****************
  1996 ;; Defined at:
  1997 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2000 ;;		 -> dbuf(32), 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2003 ;;		 -> dbuf(32), 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  2    0[COMRAM] unsigned int 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2013 ;;      Params:         2       0       0       0       0       0       0
  2014 ;;      Locals:         2       0       0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0
  2016 ;;      Totals:         4       0       0       0       0       0       0
  2017 ;;Total ram usage:        4 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_pad
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text13
  2027  000F80                     __ptext13:
  2028                           	opt callstack 0
  2029  000F80                     _strlen:
  2030                           	opt callstack 25
  2031                           
  2032                           ;incstack = 0
  2033  000F80  C001  F003         	movff	strlen@s,strlen@a
  2034  000F84  C002  F004         	movff	strlen@s+1,strlen@a+1
  2035  000F88  D002               	goto	l1298
  2036  000F8A                     l1296:
  2037  000F8A  4A01               	infsnz	strlen@s,f,c
  2038  000F8C  2A02               	incf	strlen@s+1,f,c
  2039  000F8E                     l1298:
  2040  000F8E  C001  FFD9         	movff	strlen@s,fsr2l
  2041  000F92  C002  FFDA         	movff	strlen@s+1,fsr2h
  2042  000F96  50DF               	movf	indf2,w,c
  2043  000F98  A4D8               	btfss	status,2,c
  2044  000F9A  D7F7               	goto	l1296
  2045  000F9C  5003               	movf	strlen@a,w,c
  2046  000F9E  5C01               	subwf	strlen@s,w,c
  2047  000FA0  6E01               	movwf	?_strlen,c
  2048  000FA2  5004               	movf	strlen@a+1,w,c
  2049  000FA4  5802               	subwfb	strlen@s+1,w,c
  2050  000FA6  6E02               	movwf	?_strlen+1,c
  2051  000FA8  0012               	return		;funcret
  2052  000FAA                     __end_of_strlen:
  2053                           	opt callstack 0
  2054                           
  2055 ;; *************** function _fputs *****************
  2056 ;; Defined at:
  2057 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2060 ;;		 -> dbuf(32), 
  2061 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  2062 ;;		 -> NULL(0), 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  i               2   15[COMRAM] int 
  2065 ;;  c               1   14[COMRAM] unsigned char 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  2   10[COMRAM] int 
  2068 ;; Registers used:
  2069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2075 ;;      Params:         4       0       0       0       0       0       0
  2076 ;;      Locals:         3       0       0       0       0       0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0
  2078 ;;      Totals:         7       0       0       0       0       0       0
  2079 ;;Total ram usage:        7 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; Hardware stack levels required when called:    2
  2082 ;; This function calls:
  2083 ;;		_fputc
  2084 ;; This function is called by:
  2085 ;;		_pad
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text14
  2090  000EB8                     __ptext14:
  2091                           	opt callstack 0
  2092  000EB8                     _fputs:
  2093                           	opt callstack 23
  2094                           
  2095                           ;incstack = 0
  2096  000EB8  0E00               	movlw	0
  2097  000EBA  6E11               	movwf	fputs@i+1,c
  2098  000EBC  0E00               	movlw	0
  2099  000EBE  6E10               	movwf	fputs@i,c
  2100  000EC0  D00B               	goto	l1292
  2101  000EC2                     l1288:
  2102  000EC2  C00F  F002         	movff	fputs@c,fputc@c
  2103  000EC6  6A03               	clrf	fputc@c+1,c
  2104  000EC8  C00D  F004         	movff	fputs@fp,fputc@fp
  2105  000ECC  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  2106  000ED0  ECC2  F006         	call	_fputc	;wreg free
  2107  000ED4  4A10               	infsnz	fputs@i,f,c
  2108  000ED6  2A11               	incf	fputs@i+1,f,c
  2109  000ED8                     l1292:
  2110  000ED8  5010               	movf	fputs@i,w,c
  2111  000EDA  240B               	addwf	fputs@s,w,c
  2112  000EDC  6ED9               	movwf	fsr2l,c
  2113  000EDE  5011               	movf	fputs@i+1,w,c
  2114  000EE0  200C               	addwfc	fputs@s+1,w,c
  2115  000EE2  6EDA               	movwf	fsr2h,c
  2116  000EE4  50DF               	movf	indf2,w,c
  2117  000EE6  6E0F               	movwf	fputs@c,c
  2118  000EE8  500F               	movf	fputs@c,w,c
  2119  000EEA  B4D8               	btfsc	status,2,c
  2120  000EEC  0012               	return	
  2121  000EEE  D7E9               	goto	l1288
  2122  000EF0                     __end_of_fputs:
  2123                           	opt callstack 0
  2124                           
  2125 ;; *************** function _fputc *****************
  2126 ;; Defined at:
  2127 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  c               2    1[COMRAM] int 
  2130 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2131 ;;		 -> NULL(0), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  2    1[COMRAM] int 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2143 ;;      Params:         4       0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0
  2145 ;;      Temps:          5       0       0       0       0       0       0
  2146 ;;      Totals:         9       0       0       0       0       0       0
  2147 ;;Total ram usage:        9 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    1
  2150 ;; This function calls:
  2151 ;;		_putch
  2152 ;; This function is called by:
  2153 ;;		_pad
  2154 ;;		_vfpfcnvrt
  2155 ;;		_fputs
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text15
  2160  000D84                     __ptext15:
  2161                           	opt callstack 0
  2162  000D84                     _fputc:
  2163                           	opt callstack 26
  2164                           
  2165                           ;incstack = 0
  2166  000D84  5004               	movf	fputc@fp,w,c
  2167  000D86  1005               	iorwf	fputc@fp+1,w,c
  2168  000D88  B4D8               	btfsc	status,2,c
  2169  000D8A  D004               	goto	u580
  2170  000D8C  5004               	movf	fputc@fp,w,c
  2171  000D8E  1005               	iorwf	fputc@fp+1,w,c
  2172  000D90  A4D8               	btfss	status,2,c
  2173  000D92  D004               	goto	l1278
  2174  000D94                     u580:
  2175  000D94  5002               	movf	fputc@c,w,c
  2176  000D96  EC0F  F008         	call	_putch
  2177  000D9A  0012               	return	
  2178  000D9C                     l1278:
  2179  000D9C  EE20 F004          	lfsr	2,4
  2180  000DA0  5004               	movf	fputc@fp,w,c
  2181  000DA2  26D9               	addwf	fsr2l,f,c
  2182  000DA4  5005               	movf	fputc@fp+1,w,c
  2183  000DA6  22DA               	addwfc	fsr2h,f,c
  2184  000DA8  50DE               	movf	postinc2,w,c
  2185  000DAA  10DE               	iorwf	postinc2,w,c
  2186  000DAC  B4D8               	btfsc	status,2,c
  2187  000DAE  D016               	goto	u600
  2188  000DB0  EE20 F004          	lfsr	2,4
  2189  000DB4  5004               	movf	fputc@fp,w,c
  2190  000DB6  26D9               	addwf	fsr2l,f,c
  2191  000DB8  5005               	movf	fputc@fp+1,w,c
  2192  000DBA  22DA               	addwfc	fsr2h,f,c
  2193  000DBC  EE10 F002          	lfsr	1,2
  2194  000DC0  5004               	movf	fputc@fp,w,c
  2195  000DC2  26E1               	addwf	fsr1l,f,c
  2196  000DC4  5005               	movf	fputc@fp+1,w,c
  2197  000DC6  22E2               	addwfc	fsr1h,f,c
  2198  000DC8  50DE               	movf	postinc2,w,c
  2199  000DCA  5CE6               	subwf	postinc1,w,c
  2200  000DCC  50E6               	movf	postinc1,w,c
  2201  000DCE  0A80               	xorlw	128
  2202  000DD0  6E0A               	movwf	(??_fputc+4)& (0+255),c
  2203  000DD2  50DE               	movf	postinc2,w,c
  2204  000DD4  0A80               	xorlw	128
  2205  000DD6  580A               	subwfb	(??_fputc+4)& (0+255),w,c
  2206  000DD8  B0D8               	btfsc	status,0,c
  2207  000DDA  0012               	return	
  2208  000DDC                     u600:
  2209  000DDC  EE20 F002          	lfsr	2,2
  2210  000DE0  5004               	movf	fputc@fp,w,c
  2211  000DE2  26D9               	addwf	fsr2l,f,c
  2212  000DE4  5005               	movf	fputc@fp+1,w,c
  2213  000DE6  22DA               	addwfc	fsr2h,f,c
  2214  000DE8  2ADE               	incf	postinc2,f,c
  2215  000DEA  0E00               	movlw	0
  2216  000DEC  22DD               	addwfc	postdec2,f,c
  2217  000DEE  0012               	return		;funcret
  2218  000DF0                     __end_of_fputc:
  2219                           	opt callstack 0
  2220                           
  2221 ;; *************** function _putch *****************
  2222 ;; Defined at:
  2223 ;;		line 112 in file "./myConfig.h"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  data            1    wreg     unsigned char 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  data            1    0[COMRAM] unsigned char 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2237 ;;      Params:         0       0       0       0       0       0       0
  2238 ;;      Locals:         1       0       0       0       0       0       0
  2239 ;;      Temps:          0       0       0       0       0       0       0
  2240 ;;      Totals:         1       0       0       0       0       0       0
  2241 ;;Total ram usage:        1 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_fputc
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text16
  2251  00101E                     __ptext16:
  2252                           	opt callstack 0
  2253  00101E                     _putch:
  2254                           	opt callstack 26
  2255                           
  2256                           ;incstack = 0
  2257                           ;putch@data stored from wreg
  2258  00101E  6E01               	movwf	putch@data,c
  2259  001020                     
  2260                           ;./myConfig.h: 113:     while( ! PIR1bits.TXIF);
  2261  001020  A89E               	btfss	3998,4,c	;volatile
  2262  001022  D7FE               	goto	l1268
  2263                           
  2264                           ;./myConfig.h: 114:     TXREG = data;
  2265  001024  C001  FFAD         	movff	putch@data,4013	;volatile
  2266  001028  0012               	return		;funcret
  2267  00102A                     __end_of_putch:
  2268                           	opt callstack 0
  2269                           
  2270 ;; *************** function _abs *****************
  2271 ;; Defined at:
  2272 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  a               2   18[COMRAM] int 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  2   18[COMRAM] int 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2286 ;;      Params:         2       0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0
  2288 ;;      Temps:          2       0       0       0       0       0       0
  2289 ;;      Totals:         4       0       0       0       0       0       0
  2290 ;;Total ram usage:        4 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_dtoa
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text17
  2300  000F24                     __ptext17:
  2301                           	opt callstack 0
  2302  000F24                     _abs:
  2303                           	opt callstack 26
  2304                           
  2305                           ;incstack = 0
  2306  000F24  BE14               	btfsc	abs@a+1,7,c
  2307  000F26  D005               	goto	u670
  2308  000F28  5014               	movf	abs@a+1,w,c
  2309  000F2A  E110               	bnz	l884
  2310  000F2C  0413               	decf	abs@a,w,c
  2311  000F2E  B0D8               	btfsc	status,0,c
  2312  000F30  D00D               	goto	l884
  2313  000F32                     u670:
  2314  000F32  C013  F015         	movff	abs@a,??_abs
  2315  000F36  C014  F016         	movff	abs@a+1,??_abs+1
  2316  000F3A  1E15               	comf	??_abs,f,c
  2317  000F3C  1E16               	comf	??_abs+1,f,c
  2318  000F3E  4A15               	infsnz	??_abs,f,c
  2319  000F40  2A16               	incf	??_abs+1,f,c
  2320  000F42  C015  F013         	movff	??_abs,?_abs
  2321  000F46  C016  F014         	movff	??_abs+1,?_abs+1
  2322  000F4A  0012               	return	
  2323  000F4C                     l884:
  2324  000F4C  C013  F013         	movff	abs@a,?_abs
  2325  000F50  C014  F014         	movff	abs@a+1,?_abs+1
  2326  000F54  0012               	return		;funcret
  2327  000F56                     __end_of_abs:
  2328                           	opt callstack 0
  2329                           
  2330 ;; *************** function ___aomod *****************
  2331 ;; Defined at:
  2332 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  dividend        8    0[COMRAM] long long 
  2335 ;;  divisor         8    8[COMRAM] long long 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  sign            1   17[COMRAM] unsigned char 
  2338 ;;  counter         1   16[COMRAM] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  8    0[COMRAM] long long 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2348 ;;      Params:        16       0       0       0       0       0       0
  2349 ;;      Locals:         2       0       0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0
  2351 ;;      Totals:        18       0       0       0       0       0       0
  2352 ;;Total ram usage:       18 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_dtoa
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text18
  2362  000B2C                     __ptext18:
  2363                           	opt callstack 0
  2364  000B2C                     ___aomod:
  2365                           	opt callstack 26
  2366                           
  2367                           ;incstack = 0
  2368  000B2C  0E00               	movlw	0
  2369  000B2E  6E12               	movwf	___aomod@sign,c
  2370  000B30  AE08               	btfss	___aomod@dividend+7,7,c
  2371  000B32  D012               	goto	l1382
  2372  000B34  1E08               	comf	___aomod@dividend+7,f,c
  2373  000B36  1E07               	comf	___aomod@dividend+6,f,c
  2374  000B38  1E06               	comf	___aomod@dividend+5,f,c
  2375  000B3A  1E05               	comf	___aomod@dividend+4,f,c
  2376  000B3C  1E04               	comf	___aomod@dividend+3,f,c
  2377  000B3E  1E03               	comf	___aomod@dividend+2,f,c
  2378  000B40  1E02               	comf	___aomod@dividend+1,f,c
  2379  000B42  6C01               	negf	___aomod@dividend,c
  2380  000B44  0E00               	movlw	0
  2381  000B46  2202               	addwfc	___aomod@dividend+1,f,c
  2382  000B48  2203               	addwfc	___aomod@dividend+2,f,c
  2383  000B4A  2204               	addwfc	___aomod@dividend+3,f,c
  2384  000B4C  2205               	addwfc	___aomod@dividend+4,f,c
  2385  000B4E  2206               	addwfc	___aomod@dividend+5,f,c
  2386  000B50  2207               	addwfc	___aomod@dividend+6,f,c
  2387  000B52  2208               	addwfc	___aomod@dividend+7,f,c
  2388  000B54  0E01               	movlw	1
  2389  000B56  6E12               	movwf	___aomod@sign,c
  2390  000B58                     l1382:
  2391  000B58  AE10               	btfss	___aomod@divisor+7,7,c
  2392  000B5A  D010               	goto	l1386
  2393  000B5C  1E10               	comf	___aomod@divisor+7,f,c
  2394  000B5E  1E0F               	comf	___aomod@divisor+6,f,c
  2395  000B60  1E0E               	comf	___aomod@divisor+5,f,c
  2396  000B62  1E0D               	comf	___aomod@divisor+4,f,c
  2397  000B64  1E0C               	comf	___aomod@divisor+3,f,c
  2398  000B66  1E0B               	comf	___aomod@divisor+2,f,c
  2399  000B68  1E0A               	comf	___aomod@divisor+1,f,c
  2400  000B6A  6C09               	negf	___aomod@divisor,c
  2401  000B6C  0E00               	movlw	0
  2402  000B6E  220A               	addwfc	___aomod@divisor+1,f,c
  2403  000B70  220B               	addwfc	___aomod@divisor+2,f,c
  2404  000B72  220C               	addwfc	___aomod@divisor+3,f,c
  2405  000B74  220D               	addwfc	___aomod@divisor+4,f,c
  2406  000B76  220E               	addwfc	___aomod@divisor+5,f,c
  2407  000B78  220F               	addwfc	___aomod@divisor+6,f,c
  2408  000B7A  2210               	addwfc	___aomod@divisor+7,f,c
  2409  000B7C                     l1386:
  2410  000B7C  5009               	movf	___aomod@divisor,w,c
  2411  000B7E  100A               	iorwf	___aomod@divisor+1,w,c
  2412  000B80  100B               	iorwf	___aomod@divisor+2,w,c
  2413  000B82  100C               	iorwf	___aomod@divisor+3,w,c
  2414  000B84  100D               	iorwf	___aomod@divisor+4,w,c
  2415  000B86  100E               	iorwf	___aomod@divisor+5,w,c
  2416  000B88  100F               	iorwf	___aomod@divisor+6,w,c
  2417  000B8A  1010               	iorwf	___aomod@divisor+7,w,c
  2418  000B8C  B4D8               	btfsc	status,2,c
  2419  000B8E  D03C               	goto	l1402
  2420  000B90  0E01               	movlw	1
  2421  000B92  6E11               	movwf	___aomod@counter,c
  2422  000B94  D00A               	goto	l1392
  2423  000B96                     l1390:
  2424  000B96  90D8               	bcf	status,0,c
  2425  000B98  3609               	rlcf	___aomod@divisor,f,c
  2426  000B9A  360A               	rlcf	___aomod@divisor+1,f,c
  2427  000B9C  360B               	rlcf	___aomod@divisor+2,f,c
  2428  000B9E  360C               	rlcf	___aomod@divisor+3,f,c
  2429  000BA0  360D               	rlcf	___aomod@divisor+4,f,c
  2430  000BA2  360E               	rlcf	___aomod@divisor+5,f,c
  2431  000BA4  360F               	rlcf	___aomod@divisor+6,f,c
  2432  000BA6  3610               	rlcf	___aomod@divisor+7,f,c
  2433  000BA8  2A11               	incf	___aomod@counter,f,c
  2434  000BAA                     l1392:
  2435  000BAA  AE10               	btfss	___aomod@divisor+7,7,c
  2436  000BAC  D7F4               	goto	l1390
  2437  000BAE                     u780:
  2438  000BAE  5009               	movf	___aomod@divisor,w,c
  2439  000BB0  5C01               	subwf	___aomod@dividend,w,c
  2440  000BB2  500A               	movf	___aomod@divisor+1,w,c
  2441  000BB4  5802               	subwfb	___aomod@dividend+1,w,c
  2442  000BB6  500B               	movf	___aomod@divisor+2,w,c
  2443  000BB8  5803               	subwfb	___aomod@dividend+2,w,c
  2444  000BBA  500C               	movf	___aomod@divisor+3,w,c
  2445  000BBC  5804               	subwfb	___aomod@dividend+3,w,c
  2446  000BBE  500D               	movf	___aomod@divisor+4,w,c
  2447  000BC0  5805               	subwfb	___aomod@dividend+4,w,c
  2448  000BC2  500E               	movf	___aomod@divisor+5,w,c
  2449  000BC4  5806               	subwfb	___aomod@dividend+5,w,c
  2450  000BC6  500F               	movf	___aomod@divisor+6,w,c
  2451  000BC8  5807               	subwfb	___aomod@dividend+6,w,c
  2452  000BCA  5010               	movf	___aomod@divisor+7,w,c
  2453  000BCC  5808               	subwfb	___aomod@dividend+7,w,c
  2454  000BCE  A0D8               	btfss	status,0,c
  2455  000BD0  D010               	goto	l1398
  2456  000BD2  5009               	movf	___aomod@divisor,w,c
  2457  000BD4  5E01               	subwf	___aomod@dividend,f,c
  2458  000BD6  500A               	movf	___aomod@divisor+1,w,c
  2459  000BD8  5A02               	subwfb	___aomod@dividend+1,f,c
  2460  000BDA  500B               	movf	___aomod@divisor+2,w,c
  2461  000BDC  5A03               	subwfb	___aomod@dividend+2,f,c
  2462  000BDE  500C               	movf	___aomod@divisor+3,w,c
  2463  000BE0  5A04               	subwfb	___aomod@dividend+3,f,c
  2464  000BE2  500D               	movf	___aomod@divisor+4,w,c
  2465  000BE4  5A05               	subwfb	___aomod@dividend+4,f,c
  2466  000BE6  500E               	movf	___aomod@divisor+5,w,c
  2467  000BE8  5A06               	subwfb	___aomod@dividend+5,f,c
  2468  000BEA  500F               	movf	___aomod@divisor+6,w,c
  2469  000BEC  5A07               	subwfb	___aomod@dividend+6,f,c
  2470  000BEE  5010               	movf	___aomod@divisor+7,w,c
  2471  000BF0  5A08               	subwfb	___aomod@dividend+7,f,c
  2472  000BF2                     l1398:
  2473  000BF2  90D8               	bcf	status,0,c
  2474  000BF4  3210               	rrcf	___aomod@divisor+7,f,c
  2475  000BF6  320F               	rrcf	___aomod@divisor+6,f,c
  2476  000BF8  320E               	rrcf	___aomod@divisor+5,f,c
  2477  000BFA  320D               	rrcf	___aomod@divisor+4,f,c
  2478  000BFC  320C               	rrcf	___aomod@divisor+3,f,c
  2479  000BFE  320B               	rrcf	___aomod@divisor+2,f,c
  2480  000C00  320A               	rrcf	___aomod@divisor+1,f,c
  2481  000C02  3209               	rrcf	___aomod@divisor,f,c
  2482  000C04  2E11               	decfsz	___aomod@counter,f,c
  2483  000C06  D7D3               	goto	u780
  2484  000C08                     l1402:
  2485  000C08  5012               	movf	___aomod@sign,w,c
  2486  000C0A  B4D8               	btfsc	status,2,c
  2487  000C0C  D010               	goto	l1406
  2488  000C0E  1E08               	comf	___aomod@dividend+7,f,c
  2489  000C10  1E07               	comf	___aomod@dividend+6,f,c
  2490  000C12  1E06               	comf	___aomod@dividend+5,f,c
  2491  000C14  1E05               	comf	___aomod@dividend+4,f,c
  2492  000C16  1E04               	comf	___aomod@dividend+3,f,c
  2493  000C18  1E03               	comf	___aomod@dividend+2,f,c
  2494  000C1A  1E02               	comf	___aomod@dividend+1,f,c
  2495  000C1C  6C01               	negf	___aomod@dividend,c
  2496  000C1E  0E00               	movlw	0
  2497  000C20  2202               	addwfc	___aomod@dividend+1,f,c
  2498  000C22  2203               	addwfc	___aomod@dividend+2,f,c
  2499  000C24  2204               	addwfc	___aomod@dividend+3,f,c
  2500  000C26  2205               	addwfc	___aomod@dividend+4,f,c
  2501  000C28  2206               	addwfc	___aomod@dividend+5,f,c
  2502  000C2A  2207               	addwfc	___aomod@dividend+6,f,c
  2503  000C2C  2208               	addwfc	___aomod@dividend+7,f,c
  2504  000C2E                     l1406:
  2505  000C2E  C001  F001         	movff	___aomod@dividend,?___aomod
  2506  000C32  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2507  000C36  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2508  000C3A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2509  000C3E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2510  000C42  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2511  000C46  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2512  000C4A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2513  000C4E  0012               	return		;funcret
  2514  000C50                     __end_of___aomod:
  2515                           	opt callstack 0
  2516                           
  2517 ;; *************** function ___aodiv *****************
  2518 ;; Defined at:
  2519 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  dividend        8    0[COMRAM] long long 
  2522 ;;  divisor         8    8[COMRAM] long long 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  quotient        8   18[COMRAM] long long 
  2525 ;;  sign            1   17[COMRAM] unsigned char 
  2526 ;;  counter         1   16[COMRAM] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  8    0[COMRAM] long long 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2536 ;;      Params:        16       0       0       0       0       0       0
  2537 ;;      Locals:        10       0       0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0
  2539 ;;      Totals:        26       0       0       0       0       0       0
  2540 ;;Total ram usage:       26 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_dtoa
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text19
  2550  0009E4                     __ptext19:
  2551                           	opt callstack 0
  2552  0009E4                     ___aodiv:
  2553                           	opt callstack 26
  2554                           
  2555                           ;incstack = 0
  2556  0009E4  0E00               	movlw	0
  2557  0009E6  6E12               	movwf	___aodiv@sign,c
  2558  0009E8  AE10               	btfss	___aodiv@divisor+7,7,c
  2559  0009EA  D012               	goto	l1338
  2560  0009EC  1E10               	comf	___aodiv@divisor+7,f,c
  2561  0009EE  1E0F               	comf	___aodiv@divisor+6,f,c
  2562  0009F0  1E0E               	comf	___aodiv@divisor+5,f,c
  2563  0009F2  1E0D               	comf	___aodiv@divisor+4,f,c
  2564  0009F4  1E0C               	comf	___aodiv@divisor+3,f,c
  2565  0009F6  1E0B               	comf	___aodiv@divisor+2,f,c
  2566  0009F8  1E0A               	comf	___aodiv@divisor+1,f,c
  2567  0009FA  6C09               	negf	___aodiv@divisor,c
  2568  0009FC  0E00               	movlw	0
  2569  0009FE  220A               	addwfc	___aodiv@divisor+1,f,c
  2570  000A00  220B               	addwfc	___aodiv@divisor+2,f,c
  2571  000A02  220C               	addwfc	___aodiv@divisor+3,f,c
  2572  000A04  220D               	addwfc	___aodiv@divisor+4,f,c
  2573  000A06  220E               	addwfc	___aodiv@divisor+5,f,c
  2574  000A08  220F               	addwfc	___aodiv@divisor+6,f,c
  2575  000A0A  2210               	addwfc	___aodiv@divisor+7,f,c
  2576  000A0C  0E01               	movlw	1
  2577  000A0E  6E12               	movwf	___aodiv@sign,c
  2578  000A10                     l1338:
  2579  000A10  AE08               	btfss	___aodiv@dividend+7,7,c
  2580  000A12  D012               	goto	l1344
  2581  000A14  1E08               	comf	___aodiv@dividend+7,f,c
  2582  000A16  1E07               	comf	___aodiv@dividend+6,f,c
  2583  000A18  1E06               	comf	___aodiv@dividend+5,f,c
  2584  000A1A  1E05               	comf	___aodiv@dividend+4,f,c
  2585  000A1C  1E04               	comf	___aodiv@dividend+3,f,c
  2586  000A1E  1E03               	comf	___aodiv@dividend+2,f,c
  2587  000A20  1E02               	comf	___aodiv@dividend+1,f,c
  2588  000A22  6C01               	negf	___aodiv@dividend,c
  2589  000A24  0E00               	movlw	0
  2590  000A26  2202               	addwfc	___aodiv@dividend+1,f,c
  2591  000A28  2203               	addwfc	___aodiv@dividend+2,f,c
  2592  000A2A  2204               	addwfc	___aodiv@dividend+3,f,c
  2593  000A2C  2205               	addwfc	___aodiv@dividend+4,f,c
  2594  000A2E  2206               	addwfc	___aodiv@dividend+5,f,c
  2595  000A30  2207               	addwfc	___aodiv@dividend+6,f,c
  2596  000A32  2208               	addwfc	___aodiv@dividend+7,f,c
  2597  000A34  0E01               	movlw	1
  2598  000A36  1A12               	xorwf	___aodiv@sign,f,c
  2599  000A38                     l1344:
  2600  000A38  EE20  F013         	lfsr	2,___aodiv@quotient
  2601  000A3C  0E07               	movlw	7
  2602  000A3E                     u701:
  2603  000A3E  6ADE               	clrf	postinc2,c
  2604  000A40  06E8               	decf	wreg,f,c
  2605  000A42  E2FD               	bc	u701
  2606  000A44  5009               	movf	___aodiv@divisor,w,c
  2607  000A46  100A               	iorwf	___aodiv@divisor+1,w,c
  2608  000A48  100B               	iorwf	___aodiv@divisor+2,w,c
  2609  000A4A  100C               	iorwf	___aodiv@divisor+3,w,c
  2610  000A4C  100D               	iorwf	___aodiv@divisor+4,w,c
  2611  000A4E  100E               	iorwf	___aodiv@divisor+5,w,c
  2612  000A50  100F               	iorwf	___aodiv@divisor+6,w,c
  2613  000A52  1010               	iorwf	___aodiv@divisor+7,w,c
  2614  000A54  B4D8               	btfsc	status,2,c
  2615  000A56  D046               	goto	l1366
  2616  000A58  0E01               	movlw	1
  2617  000A5A  6E11               	movwf	___aodiv@counter,c
  2618  000A5C  D00A               	goto	l1352
  2619  000A5E                     l1350:
  2620  000A5E  90D8               	bcf	status,0,c
  2621  000A60  3609               	rlcf	___aodiv@divisor,f,c
  2622  000A62  360A               	rlcf	___aodiv@divisor+1,f,c
  2623  000A64  360B               	rlcf	___aodiv@divisor+2,f,c
  2624  000A66  360C               	rlcf	___aodiv@divisor+3,f,c
  2625  000A68  360D               	rlcf	___aodiv@divisor+4,f,c
  2626  000A6A  360E               	rlcf	___aodiv@divisor+5,f,c
  2627  000A6C  360F               	rlcf	___aodiv@divisor+6,f,c
  2628  000A6E  3610               	rlcf	___aodiv@divisor+7,f,c
  2629  000A70  2A11               	incf	___aodiv@counter,f,c
  2630  000A72                     l1352:
  2631  000A72  AE10               	btfss	___aodiv@divisor+7,7,c
  2632  000A74  D7F4               	goto	l1350
  2633  000A76                     u720:
  2634  000A76  90D8               	bcf	status,0,c
  2635  000A78  3613               	rlcf	___aodiv@quotient,f,c
  2636  000A7A  3614               	rlcf	___aodiv@quotient+1,f,c
  2637  000A7C  3615               	rlcf	___aodiv@quotient+2,f,c
  2638  000A7E  3616               	rlcf	___aodiv@quotient+3,f,c
  2639  000A80  3617               	rlcf	___aodiv@quotient+4,f,c
  2640  000A82  3618               	rlcf	___aodiv@quotient+5,f,c
  2641  000A84  3619               	rlcf	___aodiv@quotient+6,f,c
  2642  000A86  361A               	rlcf	___aodiv@quotient+7,f,c
  2643  000A88  5009               	movf	___aodiv@divisor,w,c
  2644  000A8A  5C01               	subwf	___aodiv@dividend,w,c
  2645  000A8C  500A               	movf	___aodiv@divisor+1,w,c
  2646  000A8E  5802               	subwfb	___aodiv@dividend+1,w,c
  2647  000A90  500B               	movf	___aodiv@divisor+2,w,c
  2648  000A92  5803               	subwfb	___aodiv@dividend+2,w,c
  2649  000A94  500C               	movf	___aodiv@divisor+3,w,c
  2650  000A96  5804               	subwfb	___aodiv@dividend+3,w,c
  2651  000A98  500D               	movf	___aodiv@divisor+4,w,c
  2652  000A9A  5805               	subwfb	___aodiv@dividend+4,w,c
  2653  000A9C  500E               	movf	___aodiv@divisor+5,w,c
  2654  000A9E  5806               	subwfb	___aodiv@dividend+5,w,c
  2655  000AA0  500F               	movf	___aodiv@divisor+6,w,c
  2656  000AA2  5807               	subwfb	___aodiv@dividend+6,w,c
  2657  000AA4  5010               	movf	___aodiv@divisor+7,w,c
  2658  000AA6  5808               	subwfb	___aodiv@dividend+7,w,c
  2659  000AA8  A0D8               	btfss	status,0,c
  2660  000AAA  D011               	goto	l1362
  2661  000AAC  5009               	movf	___aodiv@divisor,w,c
  2662  000AAE  5E01               	subwf	___aodiv@dividend,f,c
  2663  000AB0  500A               	movf	___aodiv@divisor+1,w,c
  2664  000AB2  5A02               	subwfb	___aodiv@dividend+1,f,c
  2665  000AB4  500B               	movf	___aodiv@divisor+2,w,c
  2666  000AB6  5A03               	subwfb	___aodiv@dividend+2,f,c
  2667  000AB8  500C               	movf	___aodiv@divisor+3,w,c
  2668  000ABA  5A04               	subwfb	___aodiv@dividend+3,f,c
  2669  000ABC  500D               	movf	___aodiv@divisor+4,w,c
  2670  000ABE  5A05               	subwfb	___aodiv@dividend+4,f,c
  2671  000AC0  500E               	movf	___aodiv@divisor+5,w,c
  2672  000AC2  5A06               	subwfb	___aodiv@dividend+5,f,c
  2673  000AC4  500F               	movf	___aodiv@divisor+6,w,c
  2674  000AC6  5A07               	subwfb	___aodiv@dividend+6,f,c
  2675  000AC8  5010               	movf	___aodiv@divisor+7,w,c
  2676  000ACA  5A08               	subwfb	___aodiv@dividend+7,f,c
  2677  000ACC  8013               	bsf	___aodiv@quotient,0,c
  2678  000ACE                     l1362:
  2679  000ACE  90D8               	bcf	status,0,c
  2680  000AD0  3210               	rrcf	___aodiv@divisor+7,f,c
  2681  000AD2  320F               	rrcf	___aodiv@divisor+6,f,c
  2682  000AD4  320E               	rrcf	___aodiv@divisor+5,f,c
  2683  000AD6  320D               	rrcf	___aodiv@divisor+4,f,c
  2684  000AD8  320C               	rrcf	___aodiv@divisor+3,f,c
  2685  000ADA  320B               	rrcf	___aodiv@divisor+2,f,c
  2686  000ADC  320A               	rrcf	___aodiv@divisor+1,f,c
  2687  000ADE  3209               	rrcf	___aodiv@divisor,f,c
  2688  000AE0  2E11               	decfsz	___aodiv@counter,f,c
  2689  000AE2  D7C9               	goto	u720
  2690  000AE4                     l1366:
  2691  000AE4  5012               	movf	___aodiv@sign,w,c
  2692  000AE6  B4D8               	btfsc	status,2,c
  2693  000AE8  D010               	goto	l1370
  2694  000AEA  1E1A               	comf	___aodiv@quotient+7,f,c
  2695  000AEC  1E19               	comf	___aodiv@quotient+6,f,c
  2696  000AEE  1E18               	comf	___aodiv@quotient+5,f,c
  2697  000AF0  1E17               	comf	___aodiv@quotient+4,f,c
  2698  000AF2  1E16               	comf	___aodiv@quotient+3,f,c
  2699  000AF4  1E15               	comf	___aodiv@quotient+2,f,c
  2700  000AF6  1E14               	comf	___aodiv@quotient+1,f,c
  2701  000AF8  6C13               	negf	___aodiv@quotient,c
  2702  000AFA  0E00               	movlw	0
  2703  000AFC  2214               	addwfc	___aodiv@quotient+1,f,c
  2704  000AFE  2215               	addwfc	___aodiv@quotient+2,f,c
  2705  000B00  2216               	addwfc	___aodiv@quotient+3,f,c
  2706  000B02  2217               	addwfc	___aodiv@quotient+4,f,c
  2707  000B04  2218               	addwfc	___aodiv@quotient+5,f,c
  2708  000B06  2219               	addwfc	___aodiv@quotient+6,f,c
  2709  000B08  221A               	addwfc	___aodiv@quotient+7,f,c
  2710  000B0A                     l1370:
  2711  000B0A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2712  000B0E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2713  000B12  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2714  000B16  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2715  000B1A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2716  000B1E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2717  000B22  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2718  000B26  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2719  000B2A  0012               	return		;funcret
  2720  000B2C                     __end_of___aodiv:
  2721                           	opt callstack 0
  2722                           
  2723 ;; *************** function _DHT11start *****************
  2724 ;; Defined at:
  2725 ;;		line 47 in file "main.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2739 ;;      Params:         0       0       0       0       0       0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0
  2741 ;;      Temps:          1       0       0       0       0       0       0
  2742 ;;      Totals:         1       0       0       0       0       0       0
  2743 ;;Total ram usage:        1 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text20
  2753  000FAA                     __ptext20:
  2754                           	opt callstack 0
  2755  000FAA                     _DHT11start:
  2756                           	opt callstack 30
  2757                           
  2758                           ;main.c: 49:     TRISAbits.TRISA1 = 0;
  2759                           
  2760                           ;incstack = 0
  2761  000FAA  9292               	bcf	3986,1,c	;volatile
  2762                           
  2763                           ;main.c: 51:     LATAbits.LATA1 = 0;
  2764  000FAC  9289               	bcf	3977,1,c	;volatile
  2765                           
  2766                           ;main.c: 52:     _delay((unsigned long)((18)*(4000000/4000.0)));
  2767  000FAE  0E18               	movlw	24
  2768  000FB0  6E01               	movwf	??_DHT11start& (0+255),c
  2769  000FB2  0E5F               	movlw	95
  2770  000FB4                     u1127:
  2771  000FB4  2EE8               	decfsz	wreg,f,c
  2772  000FB6  D7FE               	bra	u1127
  2773  000FB8  2E01               	decfsz	??_DHT11start& (0+255),f,c
  2774  000FBA  D7FC               	bra	u1127
  2775  000FBC  F000               	nop	
  2776                           
  2777                           ;main.c: 54:     LATAbits.LATA1 = 1;
  2778  000FBE  8289               	bsf	3977,1,c	;volatile
  2779                           
  2780                           ;main.c: 55:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  2781  000FC0  0E03               	movlw	3
  2782  000FC2                     u1137:
  2783  000FC2  2EE8               	decfsz	wreg,f,c
  2784  000FC4  D7FE               	bra	u1137
  2785  000FC6  F000               	nop	
  2786                           
  2787                           ;main.c: 56:     TRISAbits.TRISA1 = 1;
  2788  000FC8  8292               	bsf	3986,1,c	;volatile
  2789  000FCA  0012               	return		;funcret
  2790  000FCC                     __end_of_DHT11start:
  2791                           	opt callstack 0
  2792                           
  2793                           	psect	rparam
  2794  0000                     tosu	equ	0xFFF
  2795                           tosh	equ	0xFFE
  2796                           tosl	equ	0xFFD
  2797                           stkptr	equ	0xFFC
  2798                           pclatu	equ	0xFFB
  2799                           pclath	equ	0xFFA
  2800                           pcl	equ	0xFF9
  2801                           tblptru	equ	0xFF8
  2802                           tblptrh	equ	0xFF7
  2803                           tblptrl	equ	0xFF6
  2804                           tablat	equ	0xFF5
  2805                           prodh	equ	0xFF4
  2806                           prodl	equ	0xFF3
  2807                           indf0	equ	0xFEF
  2808                           postinc0	equ	0xFEE
  2809                           postdec0	equ	0xFED
  2810                           preinc0	equ	0xFEC
  2811                           plusw0	equ	0xFEB
  2812                           fsr0h	equ	0xFEA
  2813                           fsr0l	equ	0xFE9
  2814                           wreg	equ	0xFE8
  2815                           indf1	equ	0xFE7
  2816                           postinc1	equ	0xFE6
  2817                           postdec1	equ	0xFE5
  2818                           preinc1	equ	0xFE4
  2819                           plusw1	equ	0xFE3
  2820                           fsr1h	equ	0xFE2
  2821                           fsr1l	equ	0xFE1
  2822                           bsr	equ	0xFE0
  2823                           indf2	equ	0xFDF
  2824                           postinc2	equ	0xFDE
  2825                           postdec2	equ	0xFDD
  2826                           preinc2	equ	0xFDC
  2827                           plusw2	equ	0xFDB
  2828                           fsr2h	equ	0xFDA
  2829                           fsr2l	equ	0xFD9
  2830                           status	equ	0xFD8


Data Sizes:
    Strings     26
    Constant    0
    Data        4
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     12      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1045_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    6405
                                              4 BANK0      8     8      0
                         _DHT11start
                             _printf
                           _readByte
                       _responseWait
                   _systemInitialize
 ---------------------------------------------------------------------------------
 (1) _systemInitialize                                     0     0      0       0
                          _adcConfig
                         _portConfig
                         _serialComm
             _set_osc_p18f45k22_4MHz
 ---------------------------------------------------------------------------------
 (2) _set_osc_p18f45k22_4MHz                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialComm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _portConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcConfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _responseWait                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readByte                                             2     2      0     116
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    6195
                                             88 COMRAM     6     0      6
                                              0 BANK0      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5973
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5619
                                             64 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4270
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2621
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1191
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     790
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _DHT11start                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11start
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _readByte
   _responseWait
   _systemInitialize
     _adcConfig
     _portConfig
     _serialComm
     _set_osc_p18f45k22_4MHz

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      C      38       4       35.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96       9        0.0%
DATA                 0      0      96      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 17 13:42:43 2019

                             l63 0FEA        __size_of_systemInitialize 0012  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                            l123 0F14                              l118 0EFA  
                            l161 0D1A                              l172 0690  
                            l174 0698                              l884 0F4C  
                   __CFG_CPB$OFF 000000                              u600 0DDC  
                   __CFG_CPD$OFF 000000                              u701 0A3E  
                            u720 0A76                              u810 0644  
                            u580 0D94                              u900 07E8  
                            u820 0646                              u901 07E6  
                            u670 0F32                              u910 07F6  
                            u920 07FC                              u850 0686  
                            u780 0BAE                              u940 080A  
                            u870 06AC                              u880 07C6  
                            u980 08D4                              _abs 0F24  
                            _pad 0CEA                              wreg 000FE8  
                   __CFG_LVP$OFF 000000              __size_of_DHT11start 0022  
                           ?_abs 0013                             l1312 0D12  
                           l1402 0C08                             l1322 0D6A  
                           l1314 0D24                             l1308 0D04  
                           l1500 0998                             l1350 0A5E  
                           l1406 0C2E                             l1318 0D3C  
                           l1430 06B2                             l1352 0A72  
                           l1344 0A38                             l1416 0672  
                           l1370 0B0A                             l1362 0ACE  
                           l1338 0A10                             l1434 06C0  
                           l1506 09B0                             l1268 1020  
                           l1292 0ED8                             l1444 07B8  
                           l1532 0E04                             l1366 0AE4  
                           l1390 0B96                             l1382 0B58  
                           l1278 0D9C                             l1534 0E2A  
                           l1392 0BAA                             l1288 0EC2  
                           l1296 0F8A                             l1464 0820  
                           l1386 0B7C                             l1298 0F8E  
                           l1490 0952                             l1562 0F0E  
                           l1468 0838                             l1398 0BF2  
                           l1582 0C54                             l1496 098E  
                           ?_pad 0012                             STR_1 060F  
                           STR_2 0601                             u1020 1014  
                           u1030 1018                             u1107 0CDA  
                           u1117 0F00                             u1127 0FB4  
                           u1137 0FC2                             _LATA 000F89  
                           _LATB 000F8A                             _LATD 000F8C  
                           u1097 0C64                             abs@a 0013  
                           _dbuf 0068                             _main 0C50  
                           _dtoa 061C                             _prec 0064  
                           _nout 0060                             pad@i 0019  
                           pad@p 0016                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001B  
                           fsr2l 000FD9                    __CFG_BORV$190 000000  
                           start 0000                    __CFG_IESO$OFF 000000  
                   ___param_bank 000000                            ??_abs 0015  
                          ??_pad 0018                  __end_of___aodiv 0B2C  
                          ?_main 0001                            ?_dtoa 001D  
                __end_of___aomod 0C50                            _ADRES 000FC3  
                   vfpfcnvrt@fmt 0043                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISD 000F95  
                          _TXREG 000FAD                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
                          _flags 0066                            _fputc 0D84  
                          _fputs 0EB8               __CFG_MCLRE$EXTMCLR 000000  
                          pad@fp 0012                            _width 0062  
                          _putch 101E                            dtoa@d 001F  
                          dtoa@i 003F                            dtoa@n 0037  
                          dtoa@p 0031                            dtoa@s 0035  
                          dtoa@w 0033                            tablat 000FF5  
                          status 000FD8                   __CFG_HFOFST$ON 000000  
                 __CFG_PBADEN$ON 000000                  __initialization 0E46  
                   __end_of_main 0CEA                     __end_of_dtoa 0862  
                         ??_main 008C                           ??_dtoa 0027  
                  __activetblptr 000001                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         ?_fputc 0002                           ?_fputs 000B  
                         _ANSELA 000F38                           ?_putch 0001  
                         _ANSELB 000F39                           _ANSELD 000F3B  
                 __CFG_WDTEN$OFF 000000                           _RCSTA1 000FAB  
                         _OSCCON 000FD3                           _SPBRG1 000FAF  
                         _TXSTA1 000FAC                   __CFG_XINST$OFF 000000  
                   vfprintf@cfmt 0057                     ??_DHT11start 0001  
                      ??___aodiv 0011                        ??___aomod 0011  
                 __CFG_STVREN$ON 000000                 __end_of_readByte 0F24  
                         clear_0 0E6C                 _systemInitialize 0FCC  
                         _printf 0E80                           pad@buf 0014  
                         main@TD 0093                           main@TI 0092  
                         dtoa@fp 001D                           _strlen 0F80  
                         fputc@c 0002                           fputs@c 000F  
                         fputs@i 0010                           fputs@s 000B  
        ?_set_osc_p18f45k22_4MHz 0001                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 __end_of_vfprintf 0E46  
             __size_of_adcConfig 000E               __end_of_DHT11start 0FCC  
                     __accesstop 0060          __end_of__initialization 0E72  
                  ___rparam_used 000001                   __pcstackCOMRAM 0001  
                   __pidataBANK0 102A                    __end_of_fputc 0DF0  
                  __end_of_fputs 0EF0                    __end_of_putch 102A  
 __end_of_set_osc_p18f45k22_4MHz 0FF0                          ??_fputc 0006  
                        ??_fputs 000F                          ??_putch 0001  
                     __pbssBANK0 0060                  __CFG_PLLCFG$OFF 000000  
             __CFG_CCP2MX$PORTB3 000000               __CFG_CCP3MX$PORTB5 000000  
              __end_of_adcConfig 1010                          ?_printf 0059  
                        ?_strlen 0001                          _OSCCON2 000FD2  
             __size_of_vfpfcnvrt 0182                          _OSCTUNE 000F9B  
                   readByte@data 0002                        ?_readByte 0001  
                __CFG_PWRTEN$OFF 000000                          __Hparam 0000  
                        __Lparam 0000                          ___aodiv 09E4  
                        ___aomod 0B2C                        ?_vfprintf 0051  
                   __psmallconst 0600                          __pcinit 0E46  
                        __ramtop 0600                          __ptext0 0C50  
                        __ptext1 0FCC                          __ptext2 0FDE  
                        __ptext3 0FF0                          __ptext4 0F56  
                        __ptext5 1002                          __ptext6 1010  
                        __ptext7 0EF0                          __ptext8 0E80  
                        __ptext9 0DF0                  __size_of_printf 0038  
                __size_of_strlen 002A                     __size_of_abs 0032  
                   __size_of_pad 009A                          main@RHD 0091  
                        main@RHI 0090             end_of_initialization 0E72  
                  ?_responseWait 0001         __end_of_systemInitialize 0FDE  
                        fputc@fp 0004                       ??_readByte 0001  
                        fputs@fp 000D                       _serialComm 0FF0  
              __end_of_vfpfcnvrt 09E4                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                     ??_vfprintf 0057                          strlen@a 0003  
                        strlen@s 0001                       _portConfig 0F56  
                      _PORTAbits 000F80                        _TRISAbits 000F92  
                      _TRISCbits 000F94                   ??_responseWait 0001  
                    vfpfcnvrt@ap 0045                      vfpfcnvrt@fp 0041  
                    vfpfcnvrt@ll 0049                   __end_of_printf 0EB8  
                 __end_of_strlen 0FAA              start_initialization 0E46  
                    __end_of_abs 0F56                      __end_of_pad 0D84  
                    ?_serialComm 0001                      vfprintf@fmt 0053  
                    __pdataBANK0 0094                      ?_portConfig 0001  
                       ??_printf 005F                         ??_strlen 0003  
                      _adcConfig 1002                    __pcstackBANK0 0088  
               ___aodiv@dividend 0001                __size_of_readByte 0034  
                       ?___aodiv 0001                         ?___aomod 0001  
               ___aodiv@quotient 0013             __end_of_responseWait 101E  
               __CFG_PRICLKEN$ON 000000                __size_of_vfprintf 0056  
                     ?_adcConfig 0001                      __smallconst 0600  
                       _BAUDCON1 000FB8              __size_of_serialComm 0012  
                 __size_of_fputc 006C                   __size_of_fputs 0038  
                 __size_of_putch 000C                ?_systemInitialize 0001  
            __size_of_portConfig 002A                         _LATAbits 000F89  
             ??_systemInitialize 0001                         _PIR1bits 000F9E  
               __CFG_WDTPS$32768 000000         ??_set_osc_p18f45k22_4MHz 0001  
                      _vfpfcnvrt 0862                       _ADCON0bits 000FC2  
                  readByte@index 0001                        copy_data0 0E5A  
                       __Hrparam 0000                       vfprintf@ap 0055  
                       __Lrparam 0000                       vfprintf@fp 0051  
                   __Lsmallconst 0600               __CFG_BOREN$SBORDIS 000000  
                     _DHT11start 0FAA                __CFG_P2BMX$PORTD2 000000  
               __size_of___aodiv 0148                 __size_of___aomod 0124  
                     ?_vfpfcnvrt 0041                  ___aodiv@divisor 0009  
                ___aodiv@counter 0011                      ??_adcConfig 0001  
                       _dtoa$584 002F                         __ptext10 0862  
                       __ptext11 061C                         __ptext20 0FAA  
                       __ptext12 0CEA                         __ptext13 0F80  
                       __ptext14 0EB8                         __ptext15 0D84  
                       __ptext16 101E                         __ptext17 0F24  
                       __ptext18 0B2C                         __ptext19 09E4  
                       _readByte 0EF0                    __size_of_main 009A  
                  __size_of_dtoa 0246                     ??_serialComm 0001  
          __size_of_responseWait 000E  __size_of_set_osc_p18f45k22_4MHz 0012  
                       _vfprintf 0DF0                        printf@fmt 0059  
                      printf@ret 0088                     ??_portConfig 0001  
               ___aomod@dividend 0001                        putch@data 0001  
             __end_of_serialComm 1002                     _sensorOutpur 0094  
                   _responseWait 1010               __end_of_portConfig 0F80  
                     _OSCCONbits 000FD3                      ?_DHT11start 0001  
                       printf@ap 008A                  ___aomod@divisor 0009  
                    ??_vfpfcnvrt 0047                  ___aomod@counter 0011  
              __CFG_T3CMX$PORTC0 000000           _set_osc_p18f45k22_4MHz 0FDE  
                   ___aodiv@sign 0012                __CFG_FOSC$INTIO67 000000  
                   ___aomod@sign 0012  
