

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 11 00:40:22 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37  0000                     
    38                           ; Version 2.05
    39                           ; Generated 20/12/2018 GMT
    40                           ; 
    41                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F45K22 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataBANK0
    74  0013C0                     __pidataBANK0:
    75                           	opt callstack 0
    76                           
    77                           ;initializer for _message
    78  0013C0  54                 	db	84
    79  0013C1  68                 	db	104
    80  0013C2  69                 	db	105
    81  0013C3  73                 	db	115
    82  0013C4  20                 	db	32
    83  0013C5  69                 	db	105
    84  0013C6  73                 	db	115
    85  0013C7  20                 	db	32
    86  0013C8  6D                 	db	109
    87  0013C9  65                 	db	101
    88  0013CA  73                 	db	115
    89  0013CB  73                 	db	115
    90  0013CC  61                 	db	97
    91  0013CD  67                 	db	103
    92  0013CE  65                 	db	101
    93  0013CF  21                 	db	33
    94  0013D0  0A                 	db	10
    95  0013D1  0D                 	db	13
    96  0013D2  00                 	db	0
    97                           
    98                           ;initializer for stoa@F1139
    99  0013D3  28                 	db	40
   100  0013D4  6E                 	db	110
   101  0013D5  75                 	db	117
   102  0013D6  6C                 	db	108
   103  0013D7  6C                 	db	108
   104  0013D8  29                 	db	41
   105  0013D9  00                 	db	0
   106                           
   107                           ;initializer for _AMPM
   108  0013DA  41                 	db	65
   109  0013DB  4D                 	db	77
   110  0013DC  00                 	db	0
   111  0013DD  00                 	db	0
   112  0013DE  00                 	db	0
   113  0013DF  00                 	db	0
   114  0013E0  00                 	db	0
   115  0013E1  00                 	db	0
   116  0013E2  00                 	db	0
   117  0013E3  00                 	db	0
   118  0013E4  50                 	db	80
   119  0013E5  4D                 	db	77
   120  0013E6  00                 	db	0
   121  0013E7  00                 	db	0
   122  0013E8  00                 	db	0
   123  0013E9  00                 	db	0
   124  0013EA  00                 	db	0
   125  0013EB  00                 	db	0
   126  0013EC  00                 	db	0
   127  0013ED  00                 	db	0
   128  0000                     _ANSELD	set	3899
   129  0000                     _ANSELB	set	3897
   130  0000                     _ANSELA	set	3896
   131  0000                     _ADRES	set	4035
   132  0000                     _INTCONbits	set	4082
   133  0000                     _TMR0L	set	4054
   134  0000                     _TMR0H	set	4055
   135  0000                     _T0CON	set	4053
   136  0000                     _ADCON0bits	set	4034
   137  0000                     _ADCON2	set	4032
   138  0000                     _ADCON1	set	4033
   139  0000                     _ADCON0	set	4034
   140  0000                     _TXREG	set	4013
   141  0000                     _PIR1bits	set	3998
   142  0000                     _BAUDCON1	set	4024
   143  0000                     _TXSTA1	set	4012
   144  0000                     _RCSTA1	set	4011
   145  0000                     _SPBRG1	set	4015
   146  0000                     _TRISCbits	set	3988
   147  0000                     _TRISD	set	3989
   148  0000                     _LATD	set	3980
   149  0000                     _TRISB	set	3987
   150  0000                     _LATB	set	3978
   151  0000                     _TRISA	set	3986
   152  0000                     _LATA	set	3977
   153  0000                     _OSCCONbits	set	4051
   154  0000                     _OSCTUNE	set	3995
   155  0000                     _OSCCON2	set	4050
   156  0000                     _OSCCON	set	4051
   157                           
   158                           	psect	smallconst
   159  000600                     __psmallconst:
   160                           	opt callstack 0
   161  000600  00                 	db	0
   162  000601                     STR_2:
   163  000601  25                 	db	37
   164  000602  30                 	db	48	;'0'
   165  000603  32                 	db	50	;'2'
   166  000604  64                 	db	100	;'d'
   167  000605  20                 	db	32
   168  000606  3A                 	db	58	;':'
   169  000607  20                 	db	32
   170  000608  25                 	db	37
   171  000609  30                 	db	48	;'0'
   172  00060A  32                 	db	50	;'2'
   173  00060B  64                 	db	100	;'d'
   174  00060C  20                 	db	32
   175  00060D  3A                 	db	58	;':'
   176  00060E  20                 	db	32
   177  00060F  25                 	db	37
   178  000610  30                 	db	48	;'0'
   179  000611  32                 	db	50	;'2'
   180  000612  64                 	db	100	;'d'
   181  000613  20                 	db	32
   182  000614  00                 	db	0
   183  000615                     STR_1:
   184  000615  1B                 	db	27
   185  000616  5B                 	db	91	;'['
   186  000617  32                 	db	50	;'2'
   187  000618  4A                 	db	74	;'J'
   188  000619  20                 	db	32
   189  00061A  1B                 	db	27
   190  00061B  5B                 	db	91	;'['
   191  00061C  3F                 	db	63	;'?'
   192  00061D  32                 	db	50	;'2'
   193  00061E  35                 	db	53	;'5'
   194  00061F  6C                 	db	108	;'l'
   195  000620  20                 	db	32
   196  000621  1B                 	db	27
   197  000622  5B                 	db	91	;'['
   198  000623  48                 	db	72	;'H'
   199  000624  00                 	db	0
   200  000625                     STR_3:
   201  000625  25                 	db	37
   202  000626  73                 	db	115	;'s'
   203  000627  00                 	db	0
   204                           
   205                           ; #config settings
   206  000628  00                 	db	0	; dummy byte at the end
   207  0000                     
   208                           	psect	cinit
   209  001328                     __pcinit:
   210                           	opt callstack 0
   211  001328                     start_initialization:
   212                           	opt callstack 0
   213  001328                     __initialization:
   214                           	opt callstack 0
   215                           
   216                           ; Initialize objects allocated to BANK0 (46 bytes)
   217                           ; load TBLPTR registers with __pidataBANK0
   218  001328  0EC0               	movlw	low __pidataBANK0
   219  00132A  6EF6               	movwf	tblptrl,c
   220  00132C  0E13               	movlw	high __pidataBANK0
   221  00132E  6EF7               	movwf	tblptrh,c
   222  001330  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   223  001332  6EF8               	movwf	tblptru,c
   224  001334  EE00  F060         	lfsr	0,__pdataBANK0
   225  001338  EE10 F02E          	lfsr	1,46
   226  00133C                     copy_data0:
   227  00133C  0009               	tblrd		*+
   228  00133E  CFF5 FFEE          	movff	tablat,postinc0
   229  001342  50E5               	movf	postdec1,w,c
   230  001344  50E1               	movf	fsr1l,w,c
   231  001346  E1FA               	bnz	copy_data0
   232                           
   233                           ; Clear objects allocated to BANK0 (40 bytes)
   234  001348  EE00  F08E         	lfsr	0,__pbssBANK0
   235  00134C  0E28               	movlw	40
   236  00134E                     clear_0:
   237  00134E  6AEE               	clrf	postinc0,c
   238  001350  06E8               	decf	wreg,f,c
   239  001352  E1FD               	bnz	clear_0
   240  001354                     end_of_initialization:
   241                           	opt callstack 0
   242  001354                     __end_of__initialization:
   243                           	opt callstack 0
   244  001354  0E00               	movlw	low (__Lmediumconst shr (0+16))
   245  001356  6EF8               	movwf	tblptru,c
   246  001358  0100               	movlb	0
   247  00135A  EF4C  F008         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssBANK0
   250  00008E                     __pbssBANK0:
   251                           	opt callstack 0
   252  00008E                     _nout:
   253                           	opt callstack 0
   254  00008E                     	ds	2
   255  000090                     _width:
   256                           	opt callstack 0
   257  000090                     	ds	2
   258  000092                     _prec:
   259                           	opt callstack 0
   260  000092                     	ds	2
   261  000094                     _flags:
   262                           	opt callstack 0
   263  000094                     	ds	2
   264  000096                     _dbuf:
   265                           	opt callstack 0
   266  000096                     	ds	32
   267                           
   268                           	psect	dataBANK0
   269  000060                     __pdataBANK0:
   270                           	opt callstack 0
   271  000060                     _message:
   272                           	opt callstack 0
   273  000060                     	ds	19
   274  000073                     stoa@F1139:
   275                           	opt callstack 0
   276  000073                     	ds	7
   277  00007A                     _AMPM:
   278                           	opt callstack 0
   279  00007A                     	ds	20
   280                           
   281                           	psect	cstackBANK0
   282  0000B6                     __pcstackBANK0:
   283                           	opt callstack 0
   284  0000B6                     vfprintf@cfmt:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0x0
   288  0000B6                     	ds	2
   289  0000B8                     ?_printf:
   290                           	opt callstack 0
   291  0000B8                     printf@fmt:
   292                           	opt callstack 0
   293                           
   294                           ; 2 bytes @ 0x2
   295  0000B8                     	ds	10
   296  0000C2                     printf@ap:
   297                           	opt callstack 0
   298                           
   299                           ; 2 bytes @ 0xC
   300  0000C2                     	ds	2
   301  0000C4                     main@myClock:
   302                           	opt callstack 0
   303                           
   304                           ; 5 bytes @ 0xE
   305  0000C4                     	ds	5
   306                           
   307                           	psect	cstackCOMRAM
   308  000001                     __pcstackCOMRAM:
   309                           	opt callstack 0
   310  000001                     ?_strlen:
   311                           	opt callstack 0
   312  000001                     ?_isdigit:
   313                           	opt callstack 0
   314  000001                     ?_isspace:
   315                           	opt callstack 0
   316  000001                     ?___wmul:
   317                           	opt callstack 0
   318  000001                     ?___aodiv:
   319                           	opt callstack 0
   320  000001                     ?___aomod:
   321                           	opt callstack 0
   322  000001                     putch@data:
   323                           	opt callstack 0
   324  000001                     ___wmul@multiplier:
   325                           	opt callstack 0
   326  000001                     isdigit@c:
   327                           	opt callstack 0
   328  000001                     isspace@c:
   329                           	opt callstack 0
   330  000001                     strlen@s:
   331                           	opt callstack 0
   332  000001                     ___aodiv@dividend:
   333                           	opt callstack 0
   334  000001                     ___aomod@dividend:
   335                           	opt callstack 0
   336                           
   337                           ; 8 bytes @ 0x0
   338  000001                     	ds	1
   339  000002                     fputc@c:
   340                           	opt callstack 0
   341                           
   342                           ; 2 bytes @ 0x1
   343  000002                     	ds	1
   344  000003                     ??_isdigit:
   345  000003                     ??_isspace:
   346  000003                     ___wmul@multiplicand:
   347                           	opt callstack 0
   348  000003                     strlen@a:
   349                           	opt callstack 0
   350                           
   351                           ; 2 bytes @ 0x2
   352  000003                     	ds	1
   353  000004                     fputc@fp:
   354                           	opt callstack 0
   355                           
   356                           ; 2 bytes @ 0x3
   357  000004                     	ds	1
   358  000005                     ___wmul@product:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0x4
   362  000005                     	ds	1
   363  000006                     ??_fputc:
   364                           
   365                           ; 1 bytes @ 0x5
   366  000006                     	ds	1
   367  000007                     _isspace$903:
   368                           	opt callstack 0
   369                           
   370                           ; 1 bytes @ 0x6
   371  000007                     	ds	1
   372  000008                     ?_atoi:
   373                           	opt callstack 0
   374  000008                     atoi@s:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x7
   378  000008                     	ds	1
   379  000009                     ___aodiv@divisor:
   380                           	opt callstack 0
   381  000009                     ___aomod@divisor:
   382                           	opt callstack 0
   383                           
   384                           ; 8 bytes @ 0x8
   385  000009                     	ds	1
   386  00000A                     ??_atoi:
   387                           
   388                           ; 1 bytes @ 0x9
   389  00000A                     	ds	1
   390  00000B                     ?_stoa:
   391                           	opt callstack 0
   392  00000B                     stoa@fp:
   393                           	opt callstack 0
   394  00000B                     fputs@s:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0xA
   398  00000B                     	ds	2
   399  00000D                     stoa@s:
   400                           	opt callstack 0
   401  00000D                     fputs@fp:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0xC
   405  00000D                     	ds	1
   406  00000E                     atoi@neg:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0xD
   410  00000E                     	ds	1
   411  00000F                     ??_stoa:
   412  00000F                     fputs@c:
   413                           	opt callstack 0
   414                           
   415                           ; 1 bytes @ 0xE
   416  00000F                     	ds	1
   417  000010                     _atoi$885:
   418                           	opt callstack 0
   419  000010                     fputs@i:
   420                           	opt callstack 0
   421  000010                     stoa@nuls:
   422                           	opt callstack 0
   423                           
   424                           ; 7 bytes @ 0xF
   425  000010                     	ds	1
   426  000011                     ___aodiv@counter:
   427                           	opt callstack 0
   428  000011                     ___aomod@counter:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0x10
   432  000011                     	ds	1
   433  000012                     ?_pad:
   434                           	opt callstack 0
   435  000012                     ___aodiv@sign:
   436                           	opt callstack 0
   437  000012                     ___aomod@sign:
   438                           	opt callstack 0
   439  000012                     pad@fp:
   440                           	opt callstack 0
   441  000012                     _atoi$887:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x11
   445  000012                     	ds	1
   446  000013                     ?_abs:
   447                           	opt callstack 0
   448  000013                     abs@a:
   449                           	opt callstack 0
   450  000013                     ___aodiv@quotient:
   451                           	opt callstack 0
   452                           
   453                           ; 8 bytes @ 0x12
   454  000013                     	ds	1
   455  000014                     _atoi$886:
   456                           	opt callstack 0
   457  000014                     pad@buf:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x13
   461  000014                     	ds	1
   462  000015                     ??_abs:
   463  000015                     atoi@n:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x14
   467  000015                     	ds	1
   468  000016                     pad@p:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x15
   472  000016                     	ds	1
   473  000017                     stoa@i:
   474                           	opt callstack 0
   475                           
   476                           ; 2 bytes @ 0x16
   477  000017                     	ds	1
   478  000018                     ??_pad:
   479                           
   480                           ; 1 bytes @ 0x17
   481  000018                     	ds	1
   482  000019                     pad@i:
   483                           	opt callstack 0
   484  000019                     stoa@w:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0x18
   488  000019                     	ds	2
   489  00001B                     pad@w:
   490                           	opt callstack 0
   491  00001B                     stoa@cp:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x1A
   495  00001B                     	ds	2
   496  00001D                     ?_dtoa:
   497                           	opt callstack 0
   498  00001D                     dtoa@fp:
   499                           	opt callstack 0
   500  00001D                     stoa@p:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0x1C
   504  00001D                     	ds	2
   505  00001F                     stoa@l:
   506                           	opt callstack 0
   507  00001F                     dtoa@d:
   508                           	opt callstack 0
   509                           
   510                           ; 8 bytes @ 0x1E
   511  00001F                     	ds	8
   512  000027                     ??_dtoa:
   513                           
   514                           ; 1 bytes @ 0x26
   515  000027                     	ds	8
   516  00002F                     _dtoa$401:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0x2E
   520  00002F                     	ds	2
   521  000031                     dtoa@p:
   522                           	opt callstack 0
   523                           
   524                           ; 2 bytes @ 0x30
   525  000031                     	ds	2
   526  000033                     dtoa@w:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x32
   530  000033                     	ds	2
   531  000035                     dtoa@s:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x34
   535  000035                     	ds	2
   536  000037                     dtoa@n:
   537                           	opt callstack 0
   538                           
   539                           ; 8 bytes @ 0x36
   540  000037                     	ds	8
   541  00003F                     dtoa@i:
   542                           	opt callstack 0
   543                           
   544                           ; 2 bytes @ 0x3E
   545  00003F                     	ds	2
   546  000041                     ?_vfpfcnvrt:
   547                           	opt callstack 0
   548  000041                     vfpfcnvrt@fp:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x40
   552  000041                     	ds	2
   553  000043                     vfpfcnvrt@fmt:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x42
   557  000043                     	ds	2
   558  000045                     vfpfcnvrt@ap:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x44
   562  000045                     	ds	2
   563  000047                     ??_vfpfcnvrt:
   564                           
   565                           ; 1 bytes @ 0x46
   566  000047                     	ds	4
   567  00004B                     vfpfcnvrt@ll:
   568                           	opt callstack 0
   569                           
   570                           ; 8 bytes @ 0x4A
   571  00004B                     	ds	8
   572  000053                     vfpfcnvrt@cp:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x52
   576  000053                     	ds	2
   577  000055                     vfpfcnvrt@done:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x54
   581  000055                     	ds	2
   582  000057                     _vfpfcnvrt$427:
   583                           	opt callstack 0
   584                           
   585                           ; 2 bytes @ 0x56
   586  000057                     	ds	2
   587  000059                     ?_vfprintf:
   588                           	opt callstack 0
   589  000059                     vfprintf@fp:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x58
   593  000059                     	ds	2
   594  00005B                     vfprintf@fmt:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x5A
   598  00005B                     	ds	2
   599  00005D                     vfprintf@ap:
   600                           	opt callstack 0
   601                           
   602                           ; 2 bytes @ 0x5C
   603  00005D                     	ds	2
   604  00005F                     
   605                           ; 1 bytes @ 0x5E
   606 ;;
   607 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   608 ;;
   609 ;; *************** function _main *****************
   610 ;; Defined at:
   611 ;;		line 71 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  myClock         5   14[BANK0 ] struct clock
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   625 ;;      Params:         0       0       0       0       0       0       0
   626 ;;      Locals:         0       5       0       0       0       0       0
   627 ;;      Temps:          0       0       0       0       0       0       0
   628 ;;      Totals:         0       5       0       0       0       0       0
   629 ;;Total ram usage:        5 bytes
   630 ;; Hardware stack levels required when called:    8
   631 ;; This function calls:
   632 ;;		_printf
   633 ;;		_systemInitialize
   634 ;; This function is called by:
   635 ;;		Startup code after reset
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text0
   640  001098                     __ptext0:
   641                           	opt callstack 0
   642  001098                     _main:
   643                           	opt callstack 23
   644                           
   645                           ;main.c: 73:     systemInitialize();
   646                           
   647                           ;incstack = 0
   648  001098  EC47  F00A         	call	_systemInitialize	;wreg free
   649                           
   650                           ;main.c: 74:     struct clock myClock;;main.c: 76:     myClock.isPM = 1; myClock.is24 = 
      +                          1;
   651  00109C  0E01               	movlw	1
   652  00109E  0100               	movlb	0	; () banked
   653  0010A0  6FC7               	movwf	(main@myClock+3)& (0+255),b
   654                           
   655                           ; BSR set to: 0
   656  0010A2  0E01               	movlw	1
   657  0010A4  6FC8               	movwf	(main@myClock+4)& (0+255),b
   658                           
   659                           ; BSR set to: 0
   660                           ;main.c: 78:     myClock.seconds = 50; myClock.minutes = 59; myClock.hours = 12;
   661  0010A6  0E32               	movlw	50
   662  0010A8  6FC4               	movwf	main@myClock& (0+255),b
   663                           
   664                           ; BSR set to: 0
   665  0010AA  0E3B               	movlw	59
   666  0010AC  6FC5               	movwf	(main@myClock+1)& (0+255),b
   667                           
   668                           ; BSR set to: 0
   669  0010AE  0E0C               	movlw	12
   670  0010B0  6FC6               	movwf	(main@myClock+2)& (0+255),b
   671  0010B2                     l2011:
   672                           
   673                           ; BSR set to: 0
   674                           ;main.c: 81:     {;main.c: 82:         printf("\33\[2J \33[?25l \33[H");
   675  0010B2  0E15               	movlw	low STR_1
   676  0010B4  6FB8               	movwf	printf@fmt& (0+255),b
   677  0010B6  0E06               	movlw	high STR_1
   678  0010B8  6FB9               	movwf	(printf@fmt+1)& (0+255),b
   679  0010BA  EC20  F00A         	call	_printf	;wreg free
   680                           
   681                           ;main.c: 84:         printf("%02d : %02d : %02d ",myClock.hours,myClock.minutes,myClock.
      +                          seconds);
   682  0010BE  0E01               	movlw	low STR_2
   683  0010C0  0100               	movlb	0	; () banked
   684  0010C2  6FB8               	movwf	printf@fmt& (0+255),b
   685  0010C4  0E06               	movlw	high STR_2
   686  0010C6  6FB9               	movwf	(printf@fmt+1)& (0+255),b
   687  0010C8  C0C6  F0BA         	movff	main@myClock+2,?_printf+2
   688  0010CC  6BBB               	clrf	(?_printf+3)& (0+255),b
   689  0010CE  C0C5  F0BC         	movff	main@myClock+1,?_printf+4
   690  0010D2  6BBD               	clrf	(?_printf+5)& (0+255),b
   691  0010D4  C0C4  F0BE         	movff	main@myClock,?_printf+6
   692  0010D8  6BBF               	clrf	(?_printf+7)& (0+255),b
   693  0010DA  EC20  F00A         	call	_printf	;wreg free
   694                           
   695                           ;main.c: 85:         printf("%s",AMPM[myClock.isPM]);
   696  0010DE  0E25               	movlw	low STR_3
   697  0010E0  0100               	movlb	0	; () banked
   698  0010E2  6FB8               	movwf	printf@fmt& (0+255),b
   699  0010E4  0E06               	movlw	high STR_3
   700  0010E6  6FB9               	movwf	(printf@fmt+1)& (0+255),b
   701  0010E8  51C7               	movf	(main@myClock+3)& (0+255),w,b
   702  0010EA  0D0A               	mullw	10
   703  0010EC  0E7A               	movlw	low _AMPM
   704  0010EE  24F3               	addwf	prodl,w,c
   705  0010F0  6FBA               	movwf	(?_printf+2)& (0+255),b
   706  0010F2  0E00               	movlw	high _AMPM
   707  0010F4  20F4               	addwfc	prodh,w,c
   708  0010F6  6FBB               	movwf	(?_printf+3)& (0+255),b
   709  0010F8  EC20  F00A         	call	_printf	;wreg free
   710  0010FC                     l109:
   711  0010FC  A4F2               	btfss	4082,2,c	;volatile
   712  0010FE  D7FE               	goto	l109
   713                           
   714                           ;main.c: 88:         LATB^=0x08;
   715  001100  0E08               	movlw	8
   716  001102  1A8A               	xorwf	3978,f,c	;volatile
   717                           
   718                           ;main.c: 89:         myClock.seconds++;
   719  001104  0100               	movlb	0	; () banked
   720  001106  2BC4               	incf	main@myClock& (0+255),f,b
   721                           
   722                           ; BSR set to: 0
   723                           ;main.c: 90:         if(myClock.seconds==60)
   724  001108  0E3C               	movlw	60
   725  00110A  19C4               	xorwf	main@myClock& (0+255),w,b
   726  00110C  A4D8               	btfss	status,2,c
   727  00110E  D01D               	goto	l113
   728                           
   729                           ; BSR set to: 0
   730                           ;main.c: 91:         {;main.c: 92:             myClock.seconds = 0;
   731  001110  0E00               	movlw	0
   732  001112  6FC4               	movwf	main@myClock& (0+255),b
   733                           
   734                           ; BSR set to: 0
   735                           ;main.c: 93:             myClock.minutes++;
   736  001114  2BC5               	incf	(main@myClock+1)& (0+255),f,b
   737                           
   738                           ; BSR set to: 0
   739                           ;main.c: 94:             if(myClock.minutes==60)
   740  001116  0E3C               	movlw	60
   741  001118  19C5               	xorwf	(main@myClock+1)& (0+255),w,b
   742  00111A  A4D8               	btfss	status,2,c
   743  00111C  D016               	goto	l113
   744                           
   745                           ; BSR set to: 0
   746                           ;main.c: 95:             {;main.c: 96:                 myClock.minutes=0;
   747  00111E  0E00               	movlw	0
   748  001120  6FC5               	movwf	(main@myClock+1)& (0+255),b
   749                           
   750                           ; BSR set to: 0
   751                           ;main.c: 97:                 myClock.hours++;
   752  001122  2BC6               	incf	(main@myClock+2)& (0+255),f,b
   753                           
   754                           ; BSR set to: 0
   755                           ;main.c: 98:                 if((myClock.hours>12)&(!myClock.is24))
   756  001124  0E0C               	movlw	12
   757  001126  65C6               	cpfsgt	(main@myClock+2)& (0+255),b
   758  001128  D008               	goto	l2041
   759                           
   760                           ; BSR set to: 0
   761  00112A  51C8               	movf	(main@myClock+4)& (0+255),w,b
   762  00112C  A4D8               	btfss	status,2,c
   763  00112E  D005               	goto	l2041
   764                           
   765                           ; BSR set to: 0
   766                           ;main.c: 99:                 {;main.c: 100:                     myClock.hours=1;
   767  001130  0E01               	movlw	1
   768  001132  6FC6               	movwf	(main@myClock+2)& (0+255),b
   769                           
   770                           ; BSR set to: 0
   771                           ;main.c: 101:                     myClock.isPM^=1;
   772  001134  0E01               	movlw	1
   773  001136  1BC7               	xorwf	(main@myClock+3)& (0+255),f,b
   774                           
   775                           ;main.c: 102:                 }
   776  001138  D008               	goto	l113
   777  00113A                     l2041:
   778                           
   779                           ; BSR set to: 0
   780  00113A  51C8               	movf	(main@myClock+4)& (0+255),w,b
   781  00113C  B4D8               	btfsc	status,2,c
   782  00113E  D005               	goto	l113
   783                           
   784                           ; BSR set to: 0
   785                           ;main.c: 104:                 {;main.c: 105:                     if(myClock.hours>23)
   786  001140  0E17               	movlw	23
   787  001142  65C6               	cpfsgt	(main@myClock+2)& (0+255),b
   788  001144  D002               	goto	l113
   789                           
   790                           ; BSR set to: 0
   791                           ;main.c: 106:                     {;main.c: 107:                         myClock.hours =
      +                           0;
   792  001146  0E00               	movlw	0
   793  001148  6FC6               	movwf	(main@myClock+2)& (0+255),b
   794  00114A                     l113:
   795                           
   796                           ; BSR set to: 0
   797                           ;main.c: 113:         INTCONbits.TMR0IF = 0;
   798                           
   799                           ; BSR set to: 0
   800  00114A  94F2               	bcf	4082,2,c	;volatile
   801                           
   802                           ;main.c: 114:         TMR0H=0x0B;
   803  00114C  0E0B               	movlw	11
   804  00114E  6ED7               	movwf	4055,c	;volatile
   805                           
   806                           ;main.c: 115:         TMR0L=0xDC;
   807  001150  0EDC               	movlw	220
   808  001152  6ED6               	movwf	4054,c	;volatile
   809  001154  D7AE               	goto	l2011
   810  001156                     __end_of_main:
   811                           	opt callstack 0
   812                           
   813 ;; *************** function _systemInitialize *****************
   814 ;; Defined at:
   815 ;;		line 59 in file "main.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   829 ;;      Params:         0       0       0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0
   832 ;;      Totals:         0       0       0       0       0       0       0
   833 ;;Total ram usage:        0 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    1
   836 ;; This function calls:
   837 ;;		_portConfig
   838 ;;		_serialComm
   839 ;;		_set_osc_p18f45k22_4MHz
   840 ;;		_timer0Config
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text1
   847  00148E                     __ptext1:
   848                           	opt callstack 0
   849  00148E                     _systemInitialize:
   850                           	opt callstack 29
   851                           
   852                           ;main.c: 61:  set_osc_p18f45k22_4MHz();
   853                           
   854                           ; BSR set to: 0
   855                           ;incstack = 0
   856  00148E  EC50  F00A         	call	_set_osc_p18f45k22_4MHz	;wreg free
   857                           
   858                           ;main.c: 62:  portConfig();
   859  001492  EC0C  F00A         	call	_portConfig	;wreg free
   860                           
   861                           ;main.c: 63:  serialComm();
   862  001496  EC59  F00A         	call	_serialComm	;wreg free
   863                           
   864                           ;main.c: 64:     timer0Config();
   865  00149A  EC62  F00A         	call	_timer0Config	;wreg free
   866  00149E  0012               	return		;funcret
   867  0014A0                     __end_of_systemInitialize:
   868                           	opt callstack 0
   869                           
   870 ;; *************** function _timer0Config *****************
   871 ;; Defined at:
   872 ;;		line 158 in file "./myConfig.h"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, status,2
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   886 ;;      Params:         0       0       0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0       0       0
   889 ;;      Totals:         0       0       0       0       0       0       0
   890 ;;Total ram usage:        0 bytes
   891 ;; Hardware stack levels used:    1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_systemInitialize
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text2
   900  0014C4                     __ptext2:
   901                           	opt callstack 0
   902  0014C4                     _timer0Config:
   903                           	opt callstack 29
   904                           
   905                           ;./myConfig.h: 160:     T0CON = 0x93;
   906                           
   907                           ;incstack = 0
   908  0014C4  0E93               	movlw	147
   909  0014C6  6ED5               	movwf	4053,c	;volatile
   910                           
   911                           ;./myConfig.h: 161:     TMR0H = 0x0B;
   912  0014C8  0E0B               	movlw	11
   913  0014CA  6ED7               	movwf	4055,c	;volatile
   914                           
   915                           ;./myConfig.h: 162:     TMR0L = 0xDC;
   916  0014CC  0EDC               	movlw	220
   917  0014CE  6ED6               	movwf	4054,c	;volatile
   918                           
   919                           ;./myConfig.h: 163:     INTCONbits.TMR0IF = 0;
   920  0014D0  94F2               	bcf	4082,2,c	;volatile
   921  0014D2  0012               	return		;funcret
   922  0014D4                     __end_of_timer0Config:
   923                           	opt callstack 0
   924                           
   925 ;; *************** function _set_osc_p18f45k22_4MHz *****************
   926 ;; Defined at:
   927 ;;		line 27 in file "./myConfig.h"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, status,2
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   941 ;;      Params:         0       0       0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0
   944 ;;      Totals:         0       0       0       0       0       0       0
   945 ;;Total ram usage:        0 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_systemInitialize
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text3
   955  0014A0                     __ptext3:
   956                           	opt callstack 0
   957  0014A0                     _set_osc_p18f45k22_4MHz:
   958                           	opt callstack 29
   959                           
   960                           ;./myConfig.h: 29:  OSCCON = 0x52;
   961                           
   962                           ;incstack = 0
   963  0014A0  0E52               	movlw	82
   964  0014A2  6ED3               	movwf	4051,c	;volatile
   965                           
   966                           ;./myConfig.h: 30:  OSCCON2 = 0x04;
   967  0014A4  0E04               	movlw	4
   968  0014A6  6ED2               	movwf	4050,c	;volatile
   969                           
   970                           ;./myConfig.h: 31:  OSCTUNE = 0x80;
   971  0014A8  0E80               	movlw	128
   972  0014AA  6E9B               	movwf	3995,c	;volatile
   973  0014AC                     l63:
   974  0014AC  B4D3               	btfsc	4051,2,c	;volatile
   975  0014AE  0012               	return	
   976  0014B0  D7FD               	goto	l63
   977  0014B2                     __end_of_set_osc_p18f45k22_4MHz:
   978                           	opt callstack 0
   979                           
   980 ;; *************** function _serialComm *****************
   981 ;; Defined at:
   982 ;;		line 94 in file "./myConfig.h"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   996 ;;      Params:         0       0       0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0       0       0
   999 ;;      Totals:         0       0       0       0       0       0       0
  1000 ;;Total ram usage:        0 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_systemInitialize
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text4
  1010  0014B2                     __ptext4:
  1011                           	opt callstack 0
  1012  0014B2                     _serialComm:
  1013                           	opt callstack 29
  1014                           
  1015                           ;./myConfig.h: 96:  SPBRG1 = 25;
  1016                           
  1017                           ;incstack = 0
  1018  0014B2  0E19               	movlw	25
  1019  0014B4  6EAF               	movwf	4015,c	;volatile
  1020                           
  1021                           ;./myConfig.h: 97:  RCSTA1 = 0x90;
  1022  0014B6  0E90               	movlw	144
  1023  0014B8  6EAB               	movwf	4011,c	;volatile
  1024                           
  1025                           ;./myConfig.h: 98:  TXSTA1 = 0x26;
  1026  0014BA  0E26               	movlw	38
  1027  0014BC  6EAC               	movwf	4012,c	;volatile
  1028                           
  1029                           ;./myConfig.h: 99:  BAUDCON1 = 0x40;
  1030  0014BE  0E40               	movlw	64
  1031  0014C0  6EB8               	movwf	4024,c	;volatile
  1032  0014C2  0012               	return		;funcret
  1033  0014C4                     __end_of_serialComm:
  1034                           	opt callstack 0
  1035                           
  1036 ;; *************** function _portConfig *****************
  1037 ;; Defined at:
  1038 ;;		line 64 in file "./myConfig.h"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1052 ;;      Params:         0       0       0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_systemInitialize
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text5
  1066  001418                     __ptext5:
  1067                           	opt callstack 0
  1068  001418                     _portConfig:
  1069                           	opt callstack 29
  1070                           
  1071                           ;./myConfig.h: 67:  ANSELA = 0x01;
  1072                           
  1073                           ;incstack = 0
  1074  001418  0E01               	movlw	1
  1075  00141A  010F               	movlb	15	; () banked
  1076  00141C  6F38               	movwf	56,b	;volatile
  1077                           
  1078                           ;./myConfig.h: 68:  LATA = 0x00;
  1079  00141E  0E00               	movlw	0
  1080  001420  6E89               	movwf	3977,c	;volatile
  1081                           
  1082                           ; BSR set to: 15
  1083                           ;./myConfig.h: 69:  TRISA = 0xFF;
  1084  001422  6892               	setf	3986,c	;volatile
  1085                           
  1086                           ;./myConfig.h: 71:  ANSELB = 0x00;
  1087  001424  0E00               	movlw	0
  1088  001426  6F39               	movwf	57,b	;volatile
  1089                           
  1090                           ;./myConfig.h: 72:  LATB = 0x00;
  1091  001428  0E00               	movlw	0
  1092  00142A  6E8A               	movwf	3978,c	;volatile
  1093                           
  1094                           ;./myConfig.h: 73:  TRISB = 0xF7;
  1095  00142C  0EF7               	movlw	247
  1096  00142E  6E93               	movwf	3987,c	;volatile
  1097                           
  1098                           ;./myConfig.h: 75:  ANSELD = 0x00;
  1099  001430  0E00               	movlw	0
  1100  001432  6F3B               	movwf	59,b	;volatile
  1101                           
  1102                           ;./myConfig.h: 76:  LATD = 0x00;
  1103  001434  0E00               	movlw	0
  1104  001436  6E8C               	movwf	3980,c	;volatile
  1105                           
  1106                           ; BSR set to: 15
  1107                           ;./myConfig.h: 77:  TRISD = 0xFF;
  1108  001438  6895               	setf	3989,c	;volatile
  1109                           
  1110                           ; BSR set to: 15
  1111                           ;./myConfig.h: 80:  TRISCbits.TRISC6 = 1;
  1112  00143A  8C94               	bsf	3988,6,c	;volatile
  1113                           
  1114                           ; BSR set to: 15
  1115                           ;./myConfig.h: 81:  TRISCbits.TRISC7 = 1;
  1116  00143C  8E94               	bsf	3988,7,c	;volatile
  1117                           
  1118                           ; BSR set to: 15
  1119  00143E  0012               	return		;funcret
  1120  001440                     __end_of_portConfig:
  1121                           	opt callstack 0
  1122                           
  1123 ;; *************** function _printf *****************
  1124 ;; Defined at:
  1125 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1128 ;;		 -> STR_3(3), STR_2(20), STR_1(16), 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  ap              2   12[BANK0 ] PTR void [1]
  1131 ;;		 -> ?_printf(2), 
  1132 ;;  ret             2    0        int 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  2    2[BANK0 ] int 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1142 ;;      Params:         0       8       0       0       0       0       0
  1143 ;;      Locals:         0       4       0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0
  1145 ;;      Totals:         0      12       0       0       0       0       0
  1146 ;;Total ram usage:       12 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    7
  1149 ;; This function calls:
  1150 ;;		_vfprintf
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text6
  1157  001440                     __ptext6:
  1158                           	opt callstack 0
  1159  001440                     _printf:
  1160                           	opt callstack 23
  1161                           
  1162                           ; BSR set to: 15
  1163                           ;incstack = 0
  1164  001440  0EBA               	movlw	low (?_printf+2)
  1165  001442  0100               	movlb	0	; () banked
  1166  001444  6FC2               	movwf	printf@ap& (0+255),b
  1167  001446  0E00               	movlw	high (?_printf+2)
  1168  001448  6FC3               	movwf	(printf@ap+1)& (0+255),b
  1169                           
  1170                           ; BSR set to: 0
  1171  00144A  0E00               	movlw	0
  1172  00144C  6E59               	movwf	vfprintf@fp,c
  1173  00144E  0E00               	movlw	0
  1174  001450  6E5A               	movwf	vfprintf@fp+1,c
  1175  001452  C0B8  F05B         	movff	printf@fmt,vfprintf@fmt
  1176  001456  C0B9  F05C         	movff	printf@fmt+1,vfprintf@fmt+1
  1177  00145A  0EC2               	movlw	low printf@ap
  1178  00145C  6E5D               	movwf	vfprintf@ap,c
  1179  00145E  0E00               	movlw	high printf@ap
  1180  001460  6E5E               	movwf	vfprintf@ap+1,c
  1181  001462  EC2E  F009         	call	_vfprintf	;wreg free
  1182  001466  0012               	return		;funcret
  1183  001468                     __end_of_printf:
  1184                           	opt callstack 0
  1185                           
  1186 ;; *************** function _vfprintf *****************
  1187 ;; Defined at:
  1188 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  fp              2   88[COMRAM] PTR struct _IO_FILE
  1191 ;;		 -> NULL(0), 
  1192 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
  1193 ;;		 -> STR_3(3), STR_2(20), STR_1(16), 
  1194 ;;  ap              2   92[COMRAM] PTR PTR void 
  1195 ;;		 -> printf@ap(2), 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
  1198 ;;		 -> STR_3(3), STR_2(20), STR_1(16), 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  2   88[COMRAM] int 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1208 ;;      Params:         6       0       0       0       0       0       0
  1209 ;;      Locals:         0       2       0       0       0       0       0
  1210 ;;      Temps:          0       0       0       0       0       0       0
  1211 ;;      Totals:         6       2       0       0       0       0       0
  1212 ;;Total ram usage:        8 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    6
  1215 ;; This function calls:
  1216 ;;		_vfpfcnvrt
  1217 ;; This function is called by:
  1218 ;;		_printf
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text7
  1223  00125C                     __ptext7:
  1224                           	opt callstack 0
  1225  00125C                     _vfprintf:
  1226                           	opt callstack 23
  1227                           
  1228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1229                           
  1230                           ;incstack = 0
  1231  00125C  C05B  F0B6         	movff	vfprintf@fmt,vfprintf@cfmt
  1232  001260  C05C  F0B7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1233                           
  1234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1235  001264  0E00               	movlw	0
  1236  001266  0100               	movlb	0	; () banked
  1237  001268  6F8F               	movwf	(_nout+1)& (0+255),b
  1238  00126A  0E00               	movlw	0
  1239  00126C  6F8E               	movwf	_nout& (0+255),b
  1240                           
  1241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1242  00126E  D013               	goto	l1989
  1243  001270                     l1987:
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1247  001270  C059  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1248  001274  C05A  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1249  001278  0EB6               	movlw	low vfprintf@cfmt
  1250  00127A  6E43               	movwf	vfpfcnvrt@fmt,c
  1251  00127C  0E00               	movlw	high vfprintf@cfmt
  1252  00127E  6E44               	movwf	vfpfcnvrt@fmt+1,c
  1253  001280  C05D  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1254  001284  C05E  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1255  001288  EC15  F003         	call	_vfpfcnvrt	;wreg free
  1256  00128C  5041               	movf	?_vfpfcnvrt,w,c
  1257  00128E  0100               	movlb	0	; () banked
  1258  001290  278E               	addwf	_nout& (0+255),f,b
  1259  001292  5042               	movf	?_vfpfcnvrt+1,w,c
  1260  001294  238F               	addwfc	(_nout+1)& (0+255),f,b
  1261  001296                     l1989:
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1265  001296  C0B6  FFF6         	movff	vfprintf@cfmt,tblptrl
  1266  00129A  C0B7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1267  00129E                     	if	0	;tblptru may be non-zero
  1268  00129E                     	endif
  1269  00129E                     	if	0	;tblptru may be non-zero
  1270  00129E                     	endif
  1271  00129E  0008               	tblrd		*
  1272  0012A0  50F5               	movf	tablat,w,c
  1273  0012A2  0900               	iorlw	0
  1274  0012A4  A4D8               	btfss	status,2,c
  1275  0012A6  D7E4               	goto	l1987
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1279  0012A8  C08E  F059         	movff	_nout,?_vfprintf
  1280  0012AC  C08F  F05A         	movff	_nout+1,?_vfprintf+1
  1281                           
  1282                           ; BSR set to: 0
  1283  0012B0  0012               	return		;funcret
  1284  0012B2                     __end_of_vfprintf:
  1285                           	opt callstack 0
  1286                           
  1287 ;; *************** function _vfpfcnvrt *****************
  1288 ;; Defined at:
  1289 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1292 ;;		 -> NULL(0), 
  1293 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1294 ;;		 -> vfprintf@cfmt(2), 
  1295 ;;  ap              2   68[COMRAM] PTR PTR void 
  1296 ;;		 -> printf@ap(2), 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  ll              8   74[COMRAM] long long 
  1299 ;;  llu             8    0        unsigned long long 
  1300 ;;  f               4    0        unsigned long long 
  1301 ;;  vp              3    0        PTR void 
  1302 ;;  ct              3    0        unsigned char [3]
  1303 ;;  done            2   84[COMRAM] int 
  1304 ;;  cp              2   82[COMRAM] PTR unsigned char 
  1305 ;;		 -> ?_printf(2), AMPM(20), 
  1306 ;;  i               2    0        int 
  1307 ;;  c               1    0        unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2   64[COMRAM] int 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1317 ;;      Params:         6       0       0       0       0       0       0
  1318 ;;      Locals:        14       0       0       0       0       0       0
  1319 ;;      Temps:          4       0       0       0       0       0       0
  1320 ;;      Totals:        24       0       0       0       0       0       0
  1321 ;;Total ram usage:       24 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    5
  1324 ;; This function calls:
  1325 ;;		_atoi
  1326 ;;		_dtoa
  1327 ;;		_fputc
  1328 ;;		_isdigit
  1329 ;;		_stoa
  1330 ;; This function is called by:
  1331 ;;		_vfprintf
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text8
  1336  00062A                     __ptext8:
  1337                           	opt callstack 0
  1338  00062A                     _vfpfcnvrt:
  1339                           	opt callstack 23
  1340                           
  1341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;incstack = 0
  1345  00062A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1346  00062E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1347  000632  CFDE FFF6          	movff	postinc2,tblptrl
  1348  000636  CFDD FFF7          	movff	postdec2,tblptrh
  1349  00063A                     	if	0	;tblptru may be non-zero
  1350  00063A                     	endif
  1351  00063A                     	if	0	;tblptru may be non-zero
  1352  00063A                     	endif
  1353  00063A  0008               	tblrd		*
  1354  00063C  50F5               	movf	tablat,w,c
  1355  00063E  0A25               	xorlw	37
  1356  000640  A4D8               	btfss	status,2,c
  1357  000642  D181               	goto	l1951
  1358                           
  1359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1360  000644  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1361  000648  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1362  00064C  2ADE               	incf	postinc2,f,c
  1363  00064E  0E00               	movlw	0
  1364  000650  22DD               	addwfc	postdec2,f,c
  1365                           
  1366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1367  000652  0E00               	movlw	0
  1368  000654  0100               	movlb	0	; () banked
  1369  000656  6F91               	movwf	(_width+1)& (0+255),b
  1370  000658  0E00               	movlw	0
  1371  00065A  6F90               	movwf	_width& (0+255),b
  1372  00065C  C090  F094         	movff	_width,_flags
  1373  000660  C091  F095         	movff	_width+1,_flags+1
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1377  000664  6992               	setf	_prec& (0+255),b
  1378  000666  6993               	setf	(_prec+1)& (0+255),b
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1382  000668  0E00               	movlw	0
  1383  00066A  6E56               	movwf	vfpfcnvrt@done+1,c
  1384  00066C  0E00               	movlw	0
  1385  00066E  D019               	goto	L1
  1386  000670                     l1869:
  1387                           
  1388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1389  000670  0100               	movlb	0	; () banked
  1390  000672  8194               	bsf	_flags& (0+255),0,b
  1391  000674                     l1871:
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1395  000674  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1396  000678  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1397  00067C  2ADE               	incf	postinc2,f,c
  1398  00067E  0E00               	movlw	0
  1399  000680  22DD               	addwfc	postdec2,f,c
  1400                           
  1401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1402  000682  D032               	goto	l1895
  1403  000684                     l1873:
  1404                           
  1405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1406  000684  0100               	movlb	0	; () banked
  1407  000686  8394               	bsf	_flags& (0+255),1,b
  1408  000688  D7F5               	goto	l1871
  1409  00068A                     l1877:
  1410                           
  1411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1412  00068A  0100               	movlb	0	; () banked
  1413  00068C  8594               	bsf	_flags& (0+255),2,b
  1414  00068E  D7F2               	goto	l1871
  1415  000690                     l1881:
  1416                           
  1417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1418  000690  0100               	movlb	0	; () banked
  1419  000692  8794               	bsf	_flags& (0+255),3,b
  1420  000694  D7EF               	goto	l1871
  1421  000696                     l1885:
  1422                           
  1423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1424  000696  0100               	movlb	0	; () banked
  1425  000698  8994               	bsf	_flags& (0+255),4,b
  1426  00069A  D7EC               	goto	l1871
  1427  00069C                     l1889:
  1428                           
  1429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1430  00069C  0E00               	movlw	0
  1431  00069E  6E56               	movwf	vfpfcnvrt@done+1,c
  1432  0006A0  0E01               	movlw	1
  1433  0006A2                     L1:
  1434  0006A2  6E55               	movwf	vfpfcnvrt@done,c
  1435                           
  1436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1437  0006A4  D021               	goto	l1895
  1438  0006A6                     l1893:
  1439  0006A6  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1440  0006AA  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1441  0006AE  CFDE FFF6          	movff	postinc2,tblptrl
  1442  0006B2  CFDD FFF7          	movff	postdec2,tblptrh
  1443  0006B6                     	if	0	;tblptru may be non-zero
  1444  0006B6                     	endif
  1445  0006B6                     	if	0	;tblptru may be non-zero
  1446  0006B6                     	endif
  1447  0006B6  0008               	tblrd		*
  1448  0006B8  50F5               	movf	tablat,w,c
  1449  0006BA  6E47               	movwf	??_vfpfcnvrt& (0+255),c
  1450  0006BC  6A48               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1451                           
  1452                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1453                           ; Switch size 1, requested type "simple"
  1454                           ; Number of cases is 1, Range of values is 0 to 0
  1455                           ; switch strategies available:
  1456                           ; Name         Instructions Cycles
  1457                           ; simple_byte            4     3 (average)
  1458                           ;	Chosen strategy is simple_byte
  1459  0006BE  5048               	movf	??_vfpfcnvrt+1,w,c
  1460  0006C0  0A00               	xorlw	0	; case 0
  1461  0006C2  A4D8               	btfss	status,2,c
  1462  0006C4  D7EB               	goto	l1889
  1463                           
  1464                           ; Switch size 1, requested type "simple"
  1465                           ; Number of cases is 5, Range of values is 32 to 48
  1466                           ; switch strategies available:
  1467                           ; Name         Instructions Cycles
  1468                           ; simple_byte           16     9 (average)
  1469                           ;	Chosen strategy is simple_byte
  1470  0006C6  5047               	movf	??_vfpfcnvrt,w,c
  1471  0006C8  0A20               	xorlw	32	; case 32
  1472  0006CA  B4D8               	btfsc	status,2,c
  1473  0006CC  D7E1               	goto	l1881
  1474  0006CE  0A03               	xorlw	3	; case 35
  1475  0006D0  B4D8               	btfsc	status,2,c
  1476  0006D2  D7E1               	goto	l1885
  1477  0006D4  0A08               	xorlw	8	; case 43
  1478  0006D6  B4D8               	btfsc	status,2,c
  1479  0006D8  D7D8               	goto	l1877
  1480  0006DA  0A06               	xorlw	6	; case 45
  1481  0006DC  B4D8               	btfsc	status,2,c
  1482  0006DE  D7C8               	goto	l1869
  1483  0006E0  0A1D               	xorlw	29	; case 48
  1484  0006E2  B4D8               	btfsc	status,2,c
  1485  0006E4  D7CF               	goto	l1873
  1486  0006E6  D7DA               	goto	l1889
  1487  0006E8                     l1895:
  1488                           
  1489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1490  0006E8  5055               	movf	vfpfcnvrt@done,w,c
  1491  0006EA  1056               	iorwf	vfpfcnvrt@done+1,w,c
  1492  0006EC  B4D8               	btfsc	status,2,c
  1493  0006EE  D7DB               	goto	l1893
  1494                           
  1495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1496  0006F0  0100               	movlb	0	; () banked
  1497  0006F2  B194               	btfsc	_flags& (0+255),0,b
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1501  0006F4  9394               	bcf	_flags& (0+255),1,b
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1505  0006F6  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1506  0006FA  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1507  0006FE  CFDE FFF6          	movff	postinc2,tblptrl
  1508  000702  CFDD FFF7          	movff	postdec2,tblptrh
  1509  000706                     	if	0	;tblptru may be non-zero
  1510  000706                     	endif
  1511  000706                     	if	0	;tblptru may be non-zero
  1512  000706                     	endif
  1513  000706  0008               	tblrd		*
  1514  000708  50F5               	movf	tablat,w,c
  1515  00070A  0A2A               	xorlw	42
  1516  00070C  A4D8               	btfss	status,2,c
  1517  00070E  D023               	goto	l1907
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1521  000710  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1522  000714  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1523  000718  2ADE               	incf	postinc2,f,c
  1524  00071A  0E00               	movlw	0
  1525  00071C  22DD               	addwfc	postdec2,f,c
  1526                           
  1527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1528  00071E  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1529  000722  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1530  000726  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1531  00072A  0E02               	movlw	2
  1532  00072C  26DE               	addwf	postinc2,f,c
  1533  00072E  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1534  000732  0E00               	movlw	0
  1535  000734  22DD               	addwfc	postdec2,f,c
  1536  000736  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1537  00073A  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1538  00073E  CFDE F090          	movff	postinc2,_width
  1539  000742  CFDD F091          	movff	postdec2,_width+1
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1543  000746  AF91               	btfss	(_width+1)& (0+255),7,b
  1544  000748  D03F               	goto	u1510
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1548  00074A  8194               	bsf	_flags& (0+255),0,b
  1549                           
  1550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1551  00074C  6D90               	negf	_width& (0+255),b
  1552  00074E  1F91               	comf	(_width+1)& (0+255),f,b
  1553  000750  B0D8               	btfsc	status,0,c
  1554  000752  2B91               	incf	(_width+1)& (0+255),f,b
  1555  000754  D039               	goto	u1510
  1556  000756                     l1907:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1560  000756  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1561  00075A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1562  00075E  CFDE F008          	movff	postinc2,atoi@s
  1563  000762  CFDD F009          	movff	postdec2,atoi@s+1
  1564  000766  EC84  F006         	call	_atoi	;wreg free
  1565  00076A  C008  F090         	movff	?_atoi,_width
  1566  00076E  C009  F091         	movff	?_atoi+1,_width+1
  1567                           
  1568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1569  000772  D007               	goto	l1911
  1570  000774                     l1909:
  1571                           
  1572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1573  000774  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1574  000778  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1575  00077C  2ADE               	incf	postinc2,f,c
  1576  00077E  0E00               	movlw	0
  1577  000780  22DD               	addwfc	postdec2,f,c
  1578  000782                     l1911:
  1579  000782  0ED0               	movlw	208
  1580  000784  6E47               	movwf	??_vfpfcnvrt& (0+255),c
  1581  000786  0EFF               	movlw	255
  1582  000788  6E48               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1583  00078A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1584  00078E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1585  000792  CFDE FFF6          	movff	postinc2,tblptrl
  1586  000796  CFDD FFF7          	movff	postdec2,tblptrh
  1587  00079A                     	if	0	;tblptru may be non-zero
  1588  00079A                     	endif
  1589  00079A                     	if	0	;tblptru may be non-zero
  1590  00079A                     	endif
  1591  00079A  0008               	tblrd		*
  1592  00079C  50F5               	movf	tablat,w,c
  1593  00079E  6E49               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1594  0007A0  6A4A               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1595  0007A2  5047               	movf	??_vfpfcnvrt,w,c
  1596  0007A4  2649               	addwf	??_vfpfcnvrt+2,f,c
  1597  0007A6  5048               	movf	??_vfpfcnvrt+1,w,c
  1598  0007A8  224A               	addwfc	??_vfpfcnvrt+3,f,c
  1599  0007AA  504A               	movf	??_vfpfcnvrt+3,w,c
  1600  0007AC  E106               	bnz	u1490
  1601  0007AE  0E0A               	movlw	10
  1602  0007B0  5C49               	subwf	??_vfpfcnvrt+2,w,c
  1603  0007B2  B0D8               	btfsc	status,0,c
  1604  0007B4  D002               	goto	u1490
  1605  0007B6  0E01               	movlw	1
  1606  0007B8  D001               	goto	u1500
  1607  0007BA                     u1490:
  1608  0007BA  0E00               	movlw	0
  1609  0007BC                     u1500:
  1610  0007BC  6E57               	movwf	_vfpfcnvrt$427,c
  1611  0007BE  6A58               	clrf	_vfpfcnvrt$427+1,c
  1612  0007C0  5057               	movf	_vfpfcnvrt$427,w,c
  1613  0007C2  1058               	iorwf	_vfpfcnvrt$427+1,w,c
  1614  0007C4  A4D8               	btfss	status,2,c
  1615  0007C6  D7D6               	goto	l1909
  1616  0007C8                     u1510:
  1617                           
  1618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1619  0007C8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1620  0007CC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1621  0007D0  CFDE FFF6          	movff	postinc2,tblptrl
  1622  0007D4  CFDD FFF7          	movff	postdec2,tblptrh
  1623  0007D8                     	if	0	;tblptru may be non-zero
  1624  0007D8                     	endif
  1625  0007D8                     	if	0	;tblptru may be non-zero
  1626  0007D8                     	endif
  1627  0007D8  0008               	tblrd		*
  1628  0007DA  50F5               	movf	tablat,w,c
  1629  0007DC  0A64               	xorlw	100
  1630  0007DE  B4D8               	btfsc	status,2,c
  1631  0007E0  D00D               	goto	u1530
  1632  0007E2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1633  0007E6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1634  0007EA  CFDE FFF6          	movff	postinc2,tblptrl
  1635  0007EE  CFDD FFF7          	movff	postdec2,tblptrh
  1636  0007F2                     	if	0	;tblptru may be non-zero
  1637  0007F2                     	endif
  1638  0007F2                     	if	0	;tblptru may be non-zero
  1639  0007F2                     	endif
  1640  0007F2  0008               	tblrd		*
  1641  0007F4  50F5               	movf	tablat,w,c
  1642  0007F6  0A69               	xorlw	105
  1643  0007F8  A4D8               	btfss	status,2,c
  1644  0007FA  D03F               	goto	l1927
  1645  0007FC                     u1530:
  1646                           
  1647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1648  0007FC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1649  000800  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1650  000804  2ADE               	incf	postinc2,f,c
  1651  000806  0E00               	movlw	0
  1652  000808  22DD               	addwfc	postdec2,f,c
  1653                           
  1654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1655  00080A  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1656  00080E  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1657  000812  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1658  000816  0E02               	movlw	2
  1659  000818  26DE               	addwf	postinc2,f,c
  1660  00081A  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1661  00081E  0E00               	movlw	0
  1662  000820  22DD               	addwfc	postdec2,f,c
  1663  000822  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1664  000826  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1665  00082A  CFDE F04B          	movff	postinc2,vfpfcnvrt@ll
  1666  00082E  CFDD F04C          	movff	postdec2,vfpfcnvrt@ll+1
  1667  000832  0E00               	movlw	0
  1668  000834  BE4C               	btfsc	vfpfcnvrt@ll+1,7,c
  1669  000836  0EFF               	movlw	-1
  1670  000838  6E4D               	movwf	vfpfcnvrt@ll+2,c
  1671  00083A  6E4E               	movwf	vfpfcnvrt@ll+3,c
  1672  00083C  6E4F               	movwf	vfpfcnvrt@ll+4,c
  1673  00083E  6E50               	movwf	vfpfcnvrt@ll+5,c
  1674  000840  6E51               	movwf	vfpfcnvrt@ll+6,c
  1675  000842  6E52               	movwf	vfpfcnvrt@ll+7,c
  1676                           
  1677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1678  000844  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  1679  000848  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1680  00084C  C04B  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  1681  000850  C04C  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1682  000854  C04D  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1683  000858  C04E  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1684  00085C  C04F  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1685  000860  C050  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1686  000864  C051  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1687  000868  C052  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1688  00086C  ECBD  F004         	call	_dtoa	;wreg free
  1689  000870  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  1690  000874  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1691  000878  0012               	return	
  1692  00087A                     l1927:
  1693                           
  1694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  1695  00087A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1696  00087E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1697  000882  CFDE FFF6          	movff	postinc2,tblptrl
  1698  000886  CFDD FFF7          	movff	postdec2,tblptrh
  1699  00088A                     	if	0	;tblptru may be non-zero
  1700  00088A                     	endif
  1701  00088A                     	if	0	;tblptru may be non-zero
  1702  00088A                     	endif
  1703  00088A  0008               	tblrd		*
  1704  00088C  50F5               	movf	tablat,w,c
  1705  00088E  0A73               	xorlw	115
  1706  000890  A4D8               	btfss	status,2,c
  1707  000892  D02A               	goto	l1935
  1708                           
  1709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  1710  000894  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1711  000898  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1712  00089C  2ADE               	incf	postinc2,f,c
  1713  00089E  0E00               	movlw	0
  1714  0008A0  22DD               	addwfc	postdec2,f,c
  1715                           
  1716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  1717  0008A2  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1718  0008A6  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1719  0008AA  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1720  0008AE  0E02               	movlw	2
  1721  0008B0  26DE               	addwf	postinc2,f,c
  1722  0008B2  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1723  0008B6  0E00               	movlw	0
  1724  0008B8  22DD               	addwfc	postdec2,f,c
  1725  0008BA  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1726  0008BE  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1727  0008C2  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1728  0008C6  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1729                           
  1730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  1731  0008CA  C041  F00B         	movff	vfpfcnvrt@fp,stoa@fp
  1732  0008CE  C042  F00C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  1733  0008D2  C053  F00D         	movff	vfpfcnvrt@cp,stoa@s
  1734  0008D6  C054  F00E         	movff	vfpfcnvrt@cp+1,stoa@s+1
  1735  0008DA  EC24  F007         	call	_stoa	;wreg free
  1736  0008DE  C00B  F041         	movff	?_stoa,?_vfpfcnvrt
  1737  0008E2  C00C  F042         	movff	?_stoa+1,?_vfpfcnvrt+1
  1738  0008E6  0012               	return	
  1739  0008E8                     l1935:
  1740                           
  1741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1742  0008E8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1743  0008EC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1744  0008F0  CFDE FFF6          	movff	postinc2,tblptrl
  1745  0008F4  CFDD FFF7          	movff	postdec2,tblptrh
  1746  0008F8                     	if	0	;tblptru may be non-zero
  1747  0008F8                     	endif
  1748  0008F8                     	if	0	;tblptru may be non-zero
  1749  0008F8                     	endif
  1750  0008F8  0008               	tblrd		*
  1751  0008FA  50F5               	movf	tablat,w,c
  1752  0008FC  0A25               	xorlw	37
  1753  0008FE  A4D8               	btfss	status,2,c
  1754  000900  D016               	goto	l1945
  1755                           
  1756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1757  000902  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1758  000906  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1759  00090A  2ADE               	incf	postinc2,f,c
  1760  00090C  0E00               	movlw	0
  1761  00090E  22DD               	addwfc	postdec2,f,c
  1762                           
  1763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1764  000910  0E00               	movlw	0
  1765  000912  6E03               	movwf	fputc@c+1,c
  1766  000914  0E25               	movlw	37
  1767  000916  6E02               	movwf	fputc@c,c
  1768  000918  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1769  00091C  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1770  000920  ECF8  F008         	call	_fputc	;wreg free
  1771  000924                     l1941:
  1772                           
  1773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1774  000924  0E00               	movlw	0
  1775  000926  6E42               	movwf	?_vfpfcnvrt+1,c
  1776  000928  0E01               	movlw	1
  1777  00092A  6E41               	movwf	?_vfpfcnvrt,c
  1778  00092C  0012               	return	
  1779  00092E                     l1945:
  1780                           
  1781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1782  00092E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1783  000932  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1784  000936  2ADE               	incf	postinc2,f,c
  1785  000938  0E00               	movlw	0
  1786  00093A  22DD               	addwfc	postdec2,f,c
  1787                           
  1788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1789  00093C  0E00               	movlw	0
  1790  00093E  6E42               	movwf	?_vfpfcnvrt+1,c
  1791  000940  0E00               	movlw	0
  1792  000942  6E41               	movwf	?_vfpfcnvrt,c
  1793  000944  0012               	return	
  1794  000946                     l1951:
  1795                           
  1796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1797  000946  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1798  00094A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1799  00094E  CFDE FFF6          	movff	postinc2,tblptrl
  1800  000952  CFDD FFF7          	movff	postdec2,tblptrh
  1801  000956                     	if	0	;tblptru may be non-zero
  1802  000956                     	endif
  1803  000956                     	if	0	;tblptru may be non-zero
  1804  000956                     	endif
  1805  000956  0008               	tblrd		*
  1806  000958  50F5               	movf	tablat,w,c
  1807  00095A  6E02               	movwf	fputc@c,c
  1808  00095C  6A03               	clrf	fputc@c+1,c
  1809  00095E  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1810  000962  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1811  000966  ECF8  F008         	call	_fputc	;wreg free
  1812                           
  1813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1814  00096A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1815  00096E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1816  000972  2ADE               	incf	postinc2,f,c
  1817  000974  0E00               	movlw	0
  1818  000976  22DD               	addwfc	postdec2,f,c
  1819  000978  D7D5               	goto	l1941
  1820  00097A                     __end_of_vfpfcnvrt:
  1821                           	opt callstack 0
  1822                           
  1823 ;; *************** function _stoa *****************
  1824 ;; Defined at:
  1825 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  1828 ;;		 -> NULL(0), 
  1829 ;;  s               2   12[COMRAM] PTR unsigned char 
  1830 ;;		 -> ?_printf(2), AMPM(20), 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  nuls            7   15[COMRAM] unsigned char [7]
  1833 ;;  l               2   30[COMRAM] int 
  1834 ;;  p               2   28[COMRAM] int 
  1835 ;;  cp              2   26[COMRAM] PTR unsigned char 
  1836 ;;		 -> ?_printf(2), stoa@nuls(7), AMPM(20), 
  1837 ;;  w               2   24[COMRAM] int 
  1838 ;;  i               2   22[COMRAM] int 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  2   10[COMRAM] int 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1848 ;;      Params:         4       0       0       0       0       0       0
  1849 ;;      Locals:        17       0       0       0       0       0       0
  1850 ;;      Temps:          1       0       0       0       0       0       0
  1851 ;;      Totals:        22       0       0       0       0       0       0
  1852 ;;Total ram usage:       22 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    2
  1855 ;; This function calls:
  1856 ;;		_fputc
  1857 ;;		_strlen
  1858 ;; This function is called by:
  1859 ;;		_vfpfcnvrt
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text9
  1864  000E48                     __ptext9:
  1865                           	opt callstack 0
  1866  000E48                     _stoa:
  1867                           	opt callstack 25
  1868                           
  1869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  1870                           
  1871                           ;incstack = 0
  1872  000E48  EE20  F073         	lfsr	2,stoa@F1139
  1873  000E4C  EE10  F010         	lfsr	1,stoa@nuls
  1874  000E50  0E06               	movlw	6
  1875  000E52                     u1281:
  1876  000E52  CFDB FFE3          	movff	plusw2,plusw1
  1877  000E56  06E8               	decf	wreg,f,c
  1878  000E58  E2FC               	bc	u1281
  1879                           
  1880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  1881  000E5A  C00D  F01B         	movff	stoa@s,stoa@cp
  1882  000E5E  C00E  F01C         	movff	stoa@s+1,stoa@cp+1
  1883                           
  1884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  1885  000E62  501B               	movf	stoa@cp,w,c
  1886  000E64  101C               	iorwf	stoa@cp+1,w,c
  1887  000E66  A4D8               	btfss	status,2,c
  1888  000E68  D004               	goto	l1783
  1889                           
  1890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  1891  000E6A  0E10               	movlw	low stoa@nuls
  1892  000E6C  6E1B               	movwf	stoa@cp,c
  1893  000E6E  0E00               	movlw	high stoa@nuls
  1894  000E70  6E1C               	movwf	stoa@cp+1,c
  1895  000E72                     l1783:
  1896                           
  1897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  1898  000E72  C01B  F001         	movff	stoa@cp,strlen@s
  1899  000E76  C01C  F002         	movff	stoa@cp+1,strlen@s+1
  1900  000E7A  ECF7  F009         	call	_strlen	;wreg free
  1901  000E7E  C001  F01F         	movff	?_strlen,stoa@l
  1902  000E82  C002  F020         	movff	?_strlen+1,stoa@l+1
  1903                           
  1904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  1905  000E86  C092  F01D         	movff	_prec,stoa@p
  1906  000E8A  C093  F01E         	movff	_prec+1,stoa@p+1
  1907                           
  1908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  1909  000E8E  BE1E               	btfsc	stoa@p+1,7,c
  1910  000E90  D00E               	goto	l191
  1911  000E92  501F               	movf	stoa@l,w,c
  1912  000E94  5C1D               	subwf	stoa@p,w,c
  1913  000E96  501E               	movf	stoa@p+1,w,c
  1914  000E98  0A80               	xorlw	128
  1915  000E9A  6E0F               	movwf	??_stoa& (0+255),c
  1916  000E9C  5020               	movf	stoa@l+1,w,c
  1917  000E9E  0A80               	xorlw	128
  1918  000EA0  580F               	subwfb	??_stoa& (0+255),w,c
  1919  000EA2  B0D8               	btfsc	status,0,c
  1920  000EA4  D004               	goto	l191
  1921  000EA6  C01D  F01F         	movff	stoa@p,stoa@l
  1922  000EAA  C01E  F020         	movff	stoa@p+1,stoa@l+1
  1923  000EAE                     l191:
  1924                           
  1925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  1926  000EAE  C01F  F01D         	movff	stoa@l,stoa@p
  1927  000EB2  C020  F01E         	movff	stoa@l+1,stoa@p+1
  1928                           
  1929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  1930  000EB6  C090  F019         	movff	_width,stoa@w
  1931  000EBA  C091  F01A         	movff	_width+1,stoa@w+1
  1932                           
  1933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  1934  000EBE  0100               	movlb	0	; () banked
  1935  000EC0  A194               	btfss	_flags& (0+255),0,b
  1936  000EC2  D00D               	goto	l1797
  1937  000EC4  D016               	goto	u1330
  1938  000EC6                     l1793:
  1939                           
  1940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  1941  000EC6  0E00               	movlw	0
  1942  000EC8  6E03               	movwf	fputc@c+1,c
  1943  000ECA  0E20               	movlw	32
  1944  000ECC  6E02               	movwf	fputc@c,c
  1945  000ECE  C00B  F004         	movff	stoa@fp,fputc@fp
  1946  000ED2  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  1947  000ED6  ECF8  F008         	call	_fputc	;wreg free
  1948                           
  1949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  1950  000EDA  4A1F               	infsnz	stoa@l,f,c
  1951  000EDC  2A20               	incf	stoa@l+1,f,c
  1952  000EDE                     l1797:
  1953                           
  1954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  1955  000EDE  5019               	movf	stoa@w,w,c
  1956  000EE0  5C1F               	subwf	stoa@l,w,c
  1957  000EE2  5020               	movf	stoa@l+1,w,c
  1958  000EE4  0A80               	xorlw	128
  1959  000EE6  6E0F               	movwf	??_stoa& (0+255),c
  1960  000EE8  501A               	movf	stoa@w+1,w,c
  1961  000EEA  0A80               	xorlw	128
  1962  000EEC  580F               	subwfb	??_stoa& (0+255),w,c
  1963  000EEE  A0D8               	btfss	status,0,c
  1964  000EF0  D7EA               	goto	l1793
  1965  000EF2                     u1330:
  1966                           
  1967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  1968  000EF2  0E00               	movlw	0
  1969  000EF4  6E18               	movwf	stoa@i+1,c
  1970  000EF6  0E00               	movlw	0
  1971  000EF8  6E17               	movwf	stoa@i,c
  1972                           
  1973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  1974  000EFA  D013               	goto	l1807
  1975  000EFC                     l1801:
  1976                           
  1977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  1978  000EFC  C01B  FFD9         	movff	stoa@cp,fsr2l
  1979  000F00  C01C  FFDA         	movff	stoa@cp+1,fsr2h
  1980  000F04  50DF               	movf	indf2,w,c
  1981  000F06  6E0F               	movwf	??_stoa& (0+255),c
  1982  000F08  500F               	movf	??_stoa,w,c
  1983  000F0A  6E02               	movwf	fputc@c,c
  1984  000F0C  6A03               	clrf	fputc@c+1,c
  1985  000F0E  C00B  F004         	movff	stoa@fp,fputc@fp
  1986  000F12  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  1987  000F16  ECF8  F008         	call	_fputc	;wreg free
  1988                           
  1989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  1990  000F1A  4A1B               	infsnz	stoa@cp,f,c
  1991  000F1C  2A1C               	incf	stoa@cp+1,f,c
  1992                           
  1993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  1994  000F1E  4A17               	infsnz	stoa@i,f,c
  1995  000F20  2A18               	incf	stoa@i+1,f,c
  1996  000F22                     l1807:
  1997                           
  1998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  1999  000F22  501D               	movf	stoa@p,w,c
  2000  000F24  5C17               	subwf	stoa@i,w,c
  2001  000F26  5018               	movf	stoa@i+1,w,c
  2002  000F28  0A80               	xorlw	128
  2003  000F2A  6E0F               	movwf	??_stoa& (0+255),c
  2004  000F2C  501E               	movf	stoa@p+1,w,c
  2005  000F2E  0A80               	xorlw	128
  2006  000F30  580F               	subwfb	??_stoa& (0+255),w,c
  2007  000F32  A0D8               	btfss	status,0,c
  2008  000F34  D7E3               	goto	l1801
  2009                           
  2010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  2011  000F36  0100               	movlb	0	; () banked
  2012  000F38  B194               	btfsc	_flags& (0+255),0,b
  2013  000F3A  D00D               	goto	l1815
  2014  000F3C  D016               	goto	u1360
  2015  000F3E                     l1811:
  2016                           
  2017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  2018  000F3E  0E00               	movlw	0
  2019  000F40  6E03               	movwf	fputc@c+1,c
  2020  000F42  0E20               	movlw	32
  2021  000F44  6E02               	movwf	fputc@c,c
  2022  000F46  C00B  F004         	movff	stoa@fp,fputc@fp
  2023  000F4A  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  2024  000F4E  ECF8  F008         	call	_fputc	;wreg free
  2025                           
  2026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  2027  000F52  4A1F               	infsnz	stoa@l,f,c
  2028  000F54  2A20               	incf	stoa@l+1,f,c
  2029  000F56                     l1815:
  2030                           
  2031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  2032  000F56  5019               	movf	stoa@w,w,c
  2033  000F58  5C1F               	subwf	stoa@l,w,c
  2034  000F5A  5020               	movf	stoa@l+1,w,c
  2035  000F5C  0A80               	xorlw	128
  2036  000F5E  6E0F               	movwf	??_stoa& (0+255),c
  2037  000F60  501A               	movf	stoa@w+1,w,c
  2038  000F62  0A80               	xorlw	128
  2039  000F64  580F               	subwfb	??_stoa& (0+255),w,c
  2040  000F66  A0D8               	btfss	status,0,c
  2041  000F68  D7EA               	goto	l1811
  2042  000F6A                     u1360:
  2043                           
  2044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  2045                           
  2046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  2047  000F6A  C01F  F00B         	movff	stoa@l,?_stoa
  2048  000F6E  C020  F00C         	movff	stoa@l+1,?_stoa+1
  2049  000F72  0012               	return		;funcret
  2050  000F74                     __end_of_stoa:
  2051                           	opt callstack 0
  2052                           
  2053 ;; *************** function _dtoa *****************
  2054 ;; Defined at:
  2055 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2058 ;;		 -> NULL(0), 
  2059 ;;  d               8   30[COMRAM] long long 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  n               8   54[COMRAM] long long 
  2062 ;;  i               2   62[COMRAM] int 
  2063 ;;  s               2   52[COMRAM] int 
  2064 ;;  w               2   50[COMRAM] int 
  2065 ;;  p               2   48[COMRAM] int 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  2   28[COMRAM] int 
  2068 ;; Registers used:
  2069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2075 ;;      Params:        10       0       0       0       0       0       0
  2076 ;;      Locals:        18       0       0       0       0       0       0
  2077 ;;      Temps:          8       0       0       0       0       0       0
  2078 ;;      Totals:        36       0       0       0       0       0       0
  2079 ;;Total ram usage:       36 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; Hardware stack levels required when called:    4
  2082 ;; This function calls:
  2083 ;;		___aodiv
  2084 ;;		___aomod
  2085 ;;		_abs
  2086 ;;		_pad
  2087 ;; This function is called by:
  2088 ;;		_vfpfcnvrt
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text10
  2093  00097A                     __ptext10:
  2094                           	opt callstack 0
  2095  00097A                     _dtoa:
  2096                           	opt callstack 23
  2097                           
  2098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2099                           
  2100                           ;incstack = 0
  2101  00097A  C01F  F037         	movff	dtoa@d,dtoa@n
  2102  00097E  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  2103  000982  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  2104  000986  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  2105  00098A  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  2106  00098E  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  2107  000992  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  2108  000996  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  2109                           
  2110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2111  00099A  AE3E               	btfss	dtoa@n+7,7,c
  2112  00099C  D002               	goto	u1130
  2113  00099E  0E01               	movlw	1
  2114  0009A0  D001               	goto	u1140
  2115  0009A2                     u1130:
  2116  0009A2  0E00               	movlw	0
  2117  0009A4                     u1140:
  2118  0009A4  6E35               	movwf	dtoa@s,c
  2119  0009A6  6A36               	clrf	dtoa@s+1,c
  2120                           
  2121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2122  0009A8  5035               	movf	dtoa@s,w,c
  2123  0009AA  1036               	iorwf	dtoa@s+1,w,c
  2124  0009AC  B4D8               	btfsc	status,2,c
  2125  0009AE  D010               	goto	l1719
  2126                           
  2127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2128  0009B0  1E3E               	comf	dtoa@n+7,f,c
  2129  0009B2  1E3D               	comf	dtoa@n+6,f,c
  2130  0009B4  1E3C               	comf	dtoa@n+5,f,c
  2131  0009B6  1E3B               	comf	dtoa@n+4,f,c
  2132  0009B8  1E3A               	comf	dtoa@n+3,f,c
  2133  0009BA  1E39               	comf	dtoa@n+2,f,c
  2134  0009BC  1E38               	comf	dtoa@n+1,f,c
  2135  0009BE  6C37               	negf	dtoa@n,c
  2136  0009C0  0E00               	movlw	0
  2137  0009C2  2238               	addwfc	dtoa@n+1,f,c
  2138  0009C4  2239               	addwfc	dtoa@n+2,f,c
  2139  0009C6  223A               	addwfc	dtoa@n+3,f,c
  2140  0009C8  223B               	addwfc	dtoa@n+4,f,c
  2141  0009CA  223C               	addwfc	dtoa@n+5,f,c
  2142  0009CC  223D               	addwfc	dtoa@n+6,f,c
  2143  0009CE  223E               	addwfc	dtoa@n+7,f,c
  2144  0009D0                     l1719:
  2145                           
  2146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2147  0009D0  0100               	movlb	0	; () banked
  2148  0009D2  AF93               	btfss	(_prec+1)& (0+255),7,b
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2152  0009D4  9394               	bcf	_flags& (0+255),1,b
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2156  0009D6  BF93               	btfsc	(_prec+1)& (0+255),7,b
  2157  0009D8  D005               	goto	u1170
  2158  0009DA  5193               	movf	(_prec+1)& (0+255),w,b
  2159  0009DC  E108               	bnz	l162
  2160  0009DE  0592               	decf	_prec& (0+255),w,b
  2161  0009E0  B0D8               	btfsc	status,0,c
  2162  0009E2  D005               	goto	l162
  2163  0009E4                     u1170:
  2164                           
  2165                           ; BSR set to: 0
  2166  0009E4  0E00               	movlw	0
  2167  0009E6  6E32               	movwf	dtoa@p+1,c
  2168  0009E8  0E01               	movlw	1
  2169  0009EA  6E31               	movwf	dtoa@p,c
  2170  0009EC  D004               	goto	l164
  2171  0009EE                     l162:
  2172                           
  2173                           ; BSR set to: 0
  2174  0009EE  C092  F031         	movff	_prec,dtoa@p
  2175  0009F2  C093  F032         	movff	_prec+1,dtoa@p+1
  2176  0009F6                     l164:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2180  0009F6  C090  F033         	movff	_width,dtoa@w
  2181  0009FA  C091  F034         	movff	_width+1,dtoa@w+1
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2185  0009FE  5035               	movf	dtoa@s,w,c
  2186  000A00  1036               	iorwf	dtoa@s+1,w,c
  2187  000A02  A4D8               	btfss	status,2,c
  2188  000A04  D002               	goto	u1190
  2189                           
  2190                           ; BSR set to: 0
  2191  000A06  A594               	btfss	_flags& (0+255),2,b
  2192  000A08  D003               	goto	l1733
  2193  000A0A                     u1190:
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2197  000A0A  0633               	decf	dtoa@w,f,c
  2198  000A0C  A0D8               	btfss	status,0,c
  2199  000A0E  0634               	decf	dtoa@w+1,f,c
  2200  000A10                     l1733:
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2204  000A10  0E00               	movlw	0
  2205  000A12  6E40               	movwf	dtoa@i+1,c
  2206  000A14  0E1F               	movlw	31
  2207  000A16  6E3F               	movwf	dtoa@i,c
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2211  000A18  0E00               	movlw	0
  2212  000A1A  6FB5               	movwf	(_dbuf+31)& (0+255),b
  2213                           
  2214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2215  000A1C  D07C               	goto	l1747
  2216  000A1E                     l1737:
  2217                           
  2218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2219  000A1E  063F               	decf	dtoa@i,f,c
  2220  000A20  A0D8               	btfss	status,0,c
  2221  000A22  0640               	decf	dtoa@i+1,f,c
  2222                           
  2223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2224  000A24  0E96               	movlw	low _dbuf
  2225  000A26  243F               	addwf	dtoa@i,w,c
  2226  000A28  6ED9               	movwf	fsr2l,c
  2227  000A2A  0E00               	movlw	high _dbuf
  2228  000A2C  2040               	addwfc	dtoa@i+1,w,c
  2229  000A2E  6EDA               	movwf	fsr2h,c
  2230  000A30  C037  F001         	movff	dtoa@n,___aomod@dividend
  2231  000A34  C038  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2232  000A38  C039  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2233  000A3C  C03A  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2234  000A40  C03B  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2235  000A44  C03C  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2236  000A48  C03D  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2237  000A4C  C03E  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2238  000A50  0E0A               	movlw	10
  2239  000A52  6E09               	movwf	___aomod@divisor,c
  2240  000A54  0E00               	movlw	0
  2241  000A56  6E0A               	movwf	___aomod@divisor+1,c
  2242  000A58  0E00               	movlw	0
  2243  000A5A  6E0B               	movwf	___aomod@divisor+2,c
  2244  000A5C  0E00               	movlw	0
  2245  000A5E  6E0C               	movwf	___aomod@divisor+3,c
  2246  000A60  0E00               	movlw	0
  2247  000A62  6E0D               	movwf	___aomod@divisor+4,c
  2248  000A64  0E00               	movlw	0
  2249  000A66  6E0E               	movwf	___aomod@divisor+5,c
  2250  000A68  0E00               	movlw	0
  2251  000A6A  6E0F               	movwf	___aomod@divisor+6,c
  2252  000A6C  0E00               	movlw	0
  2253  000A6E  6E10               	movwf	___aomod@divisor+7,c
  2254  000A70  ECBA  F007         	call	___aomod	;wreg free
  2255  000A74  C001  F027         	movff	?___aomod,??_dtoa
  2256  000A78  C002  F028         	movff	?___aomod+1,??_dtoa+1
  2257  000A7C  C003  F029         	movff	?___aomod+2,??_dtoa+2
  2258  000A80  C004  F02A         	movff	?___aomod+3,??_dtoa+3
  2259  000A84  C005  F02B         	movff	?___aomod+4,??_dtoa+4
  2260  000A88  C006  F02C         	movff	?___aomod+5,??_dtoa+5
  2261  000A8C  C007  F02D         	movff	?___aomod+6,??_dtoa+6
  2262  000A90  C008  F02E         	movff	?___aomod+7,??_dtoa+7
  2263  000A94  C027  F013         	movff	??_dtoa,abs@a
  2264  000A98  C029  F014         	movff	??_dtoa+2,abs@a+1
  2265  000A9C  ECAF  F009         	call	_abs	;wreg free
  2266  000AA0  5013               	movf	?_abs,w,c
  2267  000AA2  0F30               	addlw	48
  2268  000AA4  6EDF               	movwf	indf2,c
  2269                           
  2270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2271  000AA6  0631               	decf	dtoa@p,f,c
  2272  000AA8  A0D8               	btfss	status,0,c
  2273  000AAA  0632               	decf	dtoa@p+1,f,c
  2274                           
  2275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2276  000AAC  0633               	decf	dtoa@w,f,c
  2277  000AAE  A0D8               	btfss	status,0,c
  2278  000AB0  0634               	decf	dtoa@w+1,f,c
  2279                           
  2280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2281  000AB2  C037  F001         	movff	dtoa@n,___aodiv@dividend
  2282  000AB6  C038  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2283  000ABA  C039  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2284  000ABE  C03A  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2285  000AC2  C03B  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2286  000AC6  C03C  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2287  000ACA  C03D  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2288  000ACE  C03E  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2289  000AD2  0E0A               	movlw	10
  2290  000AD4  6E09               	movwf	___aodiv@divisor,c
  2291  000AD6  0E00               	movlw	0
  2292  000AD8  6E0A               	movwf	___aodiv@divisor+1,c
  2293  000ADA  0E00               	movlw	0
  2294  000ADC  6E0B               	movwf	___aodiv@divisor+2,c
  2295  000ADE  0E00               	movlw	0
  2296  000AE0  6E0C               	movwf	___aodiv@divisor+3,c
  2297  000AE2  0E00               	movlw	0
  2298  000AE4  6E0D               	movwf	___aodiv@divisor+4,c
  2299  000AE6  0E00               	movlw	0
  2300  000AE8  6E0E               	movwf	___aodiv@divisor+5,c
  2301  000AEA  0E00               	movlw	0
  2302  000AEC  6E0F               	movwf	___aodiv@divisor+6,c
  2303  000AEE  0E00               	movlw	0
  2304  000AF0  6E10               	movwf	___aodiv@divisor+7,c
  2305  000AF2  ECE0  F005         	call	___aodiv	;wreg free
  2306  000AF6  C001  F037         	movff	?___aodiv,dtoa@n
  2307  000AFA  C002  F038         	movff	?___aodiv+1,dtoa@n+1
  2308  000AFE  C003  F039         	movff	?___aodiv+2,dtoa@n+2
  2309  000B02  C004  F03A         	movff	?___aodiv+3,dtoa@n+3
  2310  000B06  C005  F03B         	movff	?___aodiv+4,dtoa@n+4
  2311  000B0A  C006  F03C         	movff	?___aodiv+5,dtoa@n+5
  2312  000B0E  C007  F03D         	movff	?___aodiv+6,dtoa@n+6
  2313  000B12  C008  F03E         	movff	?___aodiv+7,dtoa@n+7
  2314  000B16                     l1747:
  2315                           
  2316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2317  000B16  BE40               	btfsc	dtoa@i+1,7,c
  2318  000B18  D020               	goto	u1240
  2319  000B1A  5040               	movf	dtoa@i+1,w,c
  2320  000B1C  E103               	bnz	u1200
  2321  000B1E  043F               	decf	dtoa@i,w,c
  2322  000B20  A0D8               	btfss	status,0,c
  2323  000B22  D01B               	goto	u1240
  2324  000B24                     u1200:
  2325  000B24  5037               	movf	dtoa@n,w,c
  2326  000B26  1038               	iorwf	dtoa@n+1,w,c
  2327  000B28  1039               	iorwf	dtoa@n+2,w,c
  2328  000B2A  103A               	iorwf	dtoa@n+3,w,c
  2329  000B2C  103B               	iorwf	dtoa@n+4,w,c
  2330  000B2E  103C               	iorwf	dtoa@n+5,w,c
  2331  000B30  103D               	iorwf	dtoa@n+6,w,c
  2332  000B32  103E               	iorwf	dtoa@n+7,w,c
  2333  000B34  A4D8               	btfss	status,2,c
  2334  000B36  D773               	goto	l1737
  2335  000B38  BE32               	btfsc	dtoa@p+1,7,c
  2336  000B3A  D005               	goto	u1220
  2337  000B3C  5032               	movf	dtoa@p+1,w,c
  2338  000B3E  E102               	bnz	u1221
  2339  000B40  0431               	decf	dtoa@p,w,c
  2340  000B42  B0D8               	btfsc	status,0,c
  2341  000B44                     u1221:
  2342  000B44  D76C               	goto	l1737
  2343  000B46                     u1220:
  2344  000B46  BE34               	btfsc	dtoa@w+1,7,c
  2345  000B48  D008               	goto	u1240
  2346  000B4A  5034               	movf	dtoa@w+1,w,c
  2347  000B4C  E103               	bnz	u1230
  2348  000B4E  0433               	decf	dtoa@w,w,c
  2349  000B50  A0D8               	btfss	status,0,c
  2350  000B52  D003               	goto	u1240
  2351  000B54                     u1230:
  2352  000B54  0100               	movlb	0	; () banked
  2353  000B56  B394               	btfsc	_flags& (0+255),1,b
  2354  000B58  D762               	goto	l1737
  2355  000B5A                     u1240:
  2356                           
  2357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2358  000B5A  5035               	movf	dtoa@s,w,c
  2359  000B5C  1036               	iorwf	dtoa@s+1,w,c
  2360  000B5E  A4D8               	btfss	status,2,c
  2361  000B60  D003               	goto	u1260
  2362  000B62  0100               	movlb	0	; () banked
  2363  000B64  A594               	btfss	_flags& (0+255),2,b
  2364  000B66  D017               	goto	l1771
  2365  000B68                     u1260:
  2366                           
  2367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2368  000B68  063F               	decf	dtoa@i,f,c
  2369  000B6A  A0D8               	btfss	status,0,c
  2370  000B6C  0640               	decf	dtoa@i+1,f,c
  2371                           
  2372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2373  000B6E  5035               	movf	dtoa@s,w,c
  2374  000B70  1036               	iorwf	dtoa@s+1,w,c
  2375  000B72  A4D8               	btfss	status,2,c
  2376  000B74  D004               	goto	l1767
  2377  000B76  0E00               	movlw	0
  2378  000B78  6E30               	movwf	_dtoa$401+1,c
  2379  000B7A  0E2B               	movlw	43
  2380  000B7C  D003               	goto	L2
  2381  000B7E                     l1767:
  2382  000B7E  0E00               	movlw	0
  2383  000B80  6E30               	movwf	_dtoa$401+1,c
  2384  000B82  0E2D               	movlw	45
  2385  000B84                     L2:
  2386  000B84  6E2F               	movwf	_dtoa$401,c
  2387  000B86  0E96               	movlw	low _dbuf
  2388  000B88  243F               	addwf	dtoa@i,w,c
  2389  000B8A  6ED9               	movwf	fsr2l,c
  2390  000B8C  0E00               	movlw	high _dbuf
  2391  000B8E  2040               	addwfc	dtoa@i+1,w,c
  2392  000B90  6EDA               	movwf	fsr2h,c
  2393  000B92  C02F  FFDF         	movff	_dtoa$401,indf2
  2394  000B96                     l1771:
  2395                           
  2396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2397  000B96  C01D  F012         	movff	dtoa@fp,pad@fp
  2398  000B9A  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  2399  000B9E  0E96               	movlw	low _dbuf
  2400  000BA0  243F               	addwf	dtoa@i,w,c
  2401  000BA2  6E14               	movwf	pad@buf,c
  2402  000BA4  0E00               	movlw	high _dbuf
  2403  000BA6  2040               	addwfc	dtoa@i+1,w,c
  2404  000BA8  6E15               	movwf	pad@buf+1,c
  2405  000BAA  C033  F016         	movff	dtoa@w,pad@p
  2406  000BAE  C034  F017         	movff	dtoa@w+1,pad@p+1
  2407  000BB2  ECAB  F008         	call	_pad	;wreg free
  2408  000BB6  C012  F01D         	movff	?_pad,?_dtoa
  2409  000BBA  C013  F01E         	movff	?_pad+1,?_dtoa+1
  2410  000BBE  0012               	return		;funcret
  2411  000BC0                     __end_of_dtoa:
  2412                           	opt callstack 0
  2413                           
  2414 ;; *************** function _pad *****************
  2415 ;; Defined at:
  2416 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2419 ;;		 -> NULL(0), 
  2420 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2421 ;;		 -> dbuf(32), 
  2422 ;;  p               2   21[COMRAM] int 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  w               2   26[COMRAM] int 
  2425 ;;  i               2   24[COMRAM] int 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  2   17[COMRAM] int 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2435 ;;      Params:         6       0       0       0       0       0       0
  2436 ;;      Locals:         4       0       0       0       0       0       0
  2437 ;;      Temps:          1       0       0       0       0       0       0
  2438 ;;      Totals:        11       0       0       0       0       0       0
  2439 ;;Total ram usage:       11 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    3
  2442 ;; This function calls:
  2443 ;;		_fputc
  2444 ;;		_fputs
  2445 ;;		_strlen
  2446 ;; This function is called by:
  2447 ;;		_dtoa
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text11
  2452  001156                     __ptext11:
  2453                           	opt callstack 0
  2454  001156                     _pad:
  2455                           	opt callstack 23
  2456                           
  2457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2458                           
  2459                           ;incstack = 0
  2460  001156  0100               	movlb	0	; () banked
  2461  001158  A194               	btfss	_flags& (0+255),0,b
  2462  00115A  D00A               	goto	l1589
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2466  00115C  C014  F00B         	movff	pad@buf,fputs@s
  2467  001160  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2468  001164  C012  F00D         	movff	pad@fp,fputs@fp
  2469  001168  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2470  00116C  EC78  F009         	call	_fputs	;wreg free
  2471  001170                     l1589:
  2472                           
  2473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2474  001170  BE17               	btfsc	pad@p+1,7,c
  2475  001172  D005               	goto	l1593
  2476  001174  C016  F01B         	movff	pad@p,pad@w
  2477  001178  C017  F01C         	movff	pad@p+1,pad@w+1
  2478  00117C  D004               	goto	l151
  2479  00117E                     l1593:
  2480  00117E  0E00               	movlw	0
  2481  001180  6E1C               	movwf	pad@w+1,c
  2482  001182  0E00               	movlw	0
  2483  001184  6E1B               	movwf	pad@w,c
  2484  001186                     l151:
  2485                           
  2486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2487  001186  0E00               	movlw	0
  2488  001188  6E1A               	movwf	pad@i+1,c
  2489  00118A  0E00               	movlw	0
  2490  00118C  6E19               	movwf	pad@i,c
  2491                           
  2492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2493  00118E  D00C               	goto	l1599
  2494  001190                     l1595:
  2495                           
  2496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2497  001190  0E00               	movlw	0
  2498  001192  6E03               	movwf	fputc@c+1,c
  2499  001194  0E20               	movlw	32
  2500  001196  6E02               	movwf	fputc@c,c
  2501  001198  C012  F004         	movff	pad@fp,fputc@fp
  2502  00119C  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2503  0011A0  ECF8  F008         	call	_fputc	;wreg free
  2504                           
  2505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2506  0011A4  4A19               	infsnz	pad@i,f,c
  2507  0011A6  2A1A               	incf	pad@i+1,f,c
  2508  0011A8                     l1599:
  2509                           
  2510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2511  0011A8  501B               	movf	pad@w,w,c
  2512  0011AA  5C19               	subwf	pad@i,w,c
  2513  0011AC  501A               	movf	pad@i+1,w,c
  2514  0011AE  0A80               	xorlw	128
  2515  0011B0  6E18               	movwf	??_pad& (0+255),c
  2516  0011B2  501C               	movf	pad@w+1,w,c
  2517  0011B4  0A80               	xorlw	128
  2518  0011B6  5818               	subwfb	??_pad& (0+255),w,c
  2519  0011B8  A0D8               	btfss	status,0,c
  2520  0011BA  D7EA               	goto	l1595
  2521                           
  2522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2523  0011BC  0100               	movlb	0	; () banked
  2524  0011BE  B194               	btfsc	_flags& (0+255),0,b
  2525  0011C0  D00A               	goto	l1603
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2529  0011C2  C014  F00B         	movff	pad@buf,fputs@s
  2530  0011C6  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2531  0011CA  C012  F00D         	movff	pad@fp,fputs@fp
  2532  0011CE  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2533  0011D2  EC78  F009         	call	_fputs	;wreg free
  2534  0011D6                     l1603:
  2535                           
  2536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2537  0011D6  C014  F001         	movff	pad@buf,strlen@s
  2538  0011DA  C015  F002         	movff	pad@buf+1,strlen@s+1
  2539  0011DE  ECF7  F009         	call	_strlen	;wreg free
  2540  0011E2  501B               	movf	pad@w,w,c
  2541  0011E4  2401               	addwf	?_strlen,w,c
  2542  0011E6  6E12               	movwf	?_pad,c
  2543  0011E8  501C               	movf	pad@w+1,w,c
  2544  0011EA  2002               	addwfc	?_strlen+1,w,c
  2545  0011EC  6E13               	movwf	?_pad+1,c
  2546  0011EE  0012               	return		;funcret
  2547  0011F0                     __end_of_pad:
  2548                           	opt callstack 0
  2549                           
  2550 ;; *************** function _strlen *****************
  2551 ;; Defined at:
  2552 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2555 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), AMPM(20), 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2558 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), AMPM(20), 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  2    0[COMRAM] unsigned int 
  2561 ;; Registers used:
  2562 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2568 ;;      Params:         2       0       0       0       0       0       0
  2569 ;;      Locals:         2       0       0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0
  2571 ;;      Totals:         4       0       0       0       0       0       0
  2572 ;;Total ram usage:        4 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; This function calls:
  2575 ;;		Nothing
  2576 ;; This function is called by:
  2577 ;;		_pad
  2578 ;;		_stoa
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text12
  2583  0013EE                     __ptext12:
  2584                           	opt callstack 0
  2585  0013EE                     _strlen:
  2586                           	opt callstack 26
  2587                           
  2588                           ;incstack = 0
  2589  0013EE  C001  F003         	movff	strlen@s,strlen@a
  2590  0013F2  C002  F004         	movff	strlen@s+1,strlen@a+1
  2591  0013F6  D002               	goto	l1579
  2592  0013F8                     l1577:
  2593  0013F8  4A01               	infsnz	strlen@s,f,c
  2594  0013FA  2A02               	incf	strlen@s+1,f,c
  2595  0013FC                     l1579:
  2596  0013FC  C001  FFD9         	movff	strlen@s,fsr2l
  2597  001400  C002  FFDA         	movff	strlen@s+1,fsr2h
  2598  001404  50DF               	movf	indf2,w,c
  2599  001406  A4D8               	btfss	status,2,c
  2600  001408  D7F7               	goto	l1577
  2601  00140A  5003               	movf	strlen@a,w,c
  2602  00140C  5C01               	subwf	strlen@s,w,c
  2603  00140E  6E01               	movwf	?_strlen,c
  2604  001410  5004               	movf	strlen@a+1,w,c
  2605  001412  5802               	subwfb	strlen@s+1,w,c
  2606  001414  6E02               	movwf	?_strlen+1,c
  2607  001416  0012               	return		;funcret
  2608  001418                     __end_of_strlen:
  2609                           	opt callstack 0
  2610                           
  2611 ;; *************** function _fputs *****************
  2612 ;; Defined at:
  2613 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2616 ;;		 -> dbuf(32), 
  2617 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  2618 ;;		 -> NULL(0), 
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  i               2   15[COMRAM] int 
  2621 ;;  c               1   14[COMRAM] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  2   10[COMRAM] int 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2631 ;;      Params:         4       0       0       0       0       0       0
  2632 ;;      Locals:         3       0       0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0
  2634 ;;      Totals:         7       0       0       0       0       0       0
  2635 ;;Total ram usage:        7 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    2
  2638 ;; This function calls:
  2639 ;;		_fputc
  2640 ;; This function is called by:
  2641 ;;		_pad
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text13
  2646  0012F0                     __ptext13:
  2647                           	opt callstack 0
  2648  0012F0                     _fputs:
  2649                           	opt callstack 23
  2650                           
  2651                           ;incstack = 0
  2652  0012F0  0E00               	movlw	0
  2653  0012F2  6E11               	movwf	fputs@i+1,c
  2654  0012F4  0E00               	movlw	0
  2655  0012F6  6E10               	movwf	fputs@i,c
  2656  0012F8  D00B               	goto	l1573
  2657  0012FA                     l1569:
  2658  0012FA  C00F  F002         	movff	fputs@c,fputc@c
  2659  0012FE  6A03               	clrf	fputc@c+1,c
  2660  001300  C00D  F004         	movff	fputs@fp,fputc@fp
  2661  001304  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  2662  001308  ECF8  F008         	call	_fputc	;wreg free
  2663  00130C  4A10               	infsnz	fputs@i,f,c
  2664  00130E  2A11               	incf	fputs@i+1,f,c
  2665  001310                     l1573:
  2666  001310  5010               	movf	fputs@i,w,c
  2667  001312  240B               	addwf	fputs@s,w,c
  2668  001314  6ED9               	movwf	fsr2l,c
  2669  001316  5011               	movf	fputs@i+1,w,c
  2670  001318  200C               	addwfc	fputs@s+1,w,c
  2671  00131A  6EDA               	movwf	fsr2h,c
  2672  00131C  50DF               	movf	indf2,w,c
  2673  00131E  6E0F               	movwf	fputs@c,c
  2674  001320  500F               	movf	fputs@c,w,c
  2675  001322  B4D8               	btfsc	status,2,c
  2676  001324  0012               	return	
  2677  001326  D7E9               	goto	l1569
  2678  001328                     __end_of_fputs:
  2679                           	opt callstack 0
  2680                           
  2681 ;; *************** function _fputc *****************
  2682 ;; Defined at:
  2683 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  c               2    1[COMRAM] int 
  2686 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2687 ;;		 -> NULL(0), 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  2    1[COMRAM] int 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2699 ;;      Params:         4       0       0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0
  2701 ;;      Temps:          5       0       0       0       0       0       0
  2702 ;;      Totals:         9       0       0       0       0       0       0
  2703 ;;Total ram usage:        9 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    1
  2706 ;; This function calls:
  2707 ;;		_putch
  2708 ;; This function is called by:
  2709 ;;		_pad
  2710 ;;		_stoa
  2711 ;;		_vfpfcnvrt
  2712 ;;		_fputs
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text14
  2717  0011F0                     __ptext14:
  2718                           	opt callstack 0
  2719  0011F0                     _fputc:
  2720                           	opt callstack 25
  2721                           
  2722                           ;incstack = 0
  2723  0011F0  5004               	movf	fputc@fp,w,c
  2724  0011F2  1005               	iorwf	fputc@fp+1,w,c
  2725  0011F4  B4D8               	btfsc	status,2,c
  2726  0011F6  D004               	goto	u860
  2727  0011F8  5004               	movf	fputc@fp,w,c
  2728  0011FA  1005               	iorwf	fputc@fp+1,w,c
  2729  0011FC  A4D8               	btfss	status,2,c
  2730  0011FE  D004               	goto	l1559
  2731  001200                     u860:
  2732  001200  5002               	movf	fputc@c,w,c
  2733  001202  EC6A  F00A         	call	_putch
  2734  001206  0012               	return	
  2735  001208                     l1559:
  2736  001208  EE20 F004          	lfsr	2,4
  2737  00120C  5004               	movf	fputc@fp,w,c
  2738  00120E  26D9               	addwf	fsr2l,f,c
  2739  001210  5005               	movf	fputc@fp+1,w,c
  2740  001212  22DA               	addwfc	fsr2h,f,c
  2741  001214  50DE               	movf	postinc2,w,c
  2742  001216  10DE               	iorwf	postinc2,w,c
  2743  001218  B4D8               	btfsc	status,2,c
  2744  00121A  D016               	goto	u880
  2745  00121C  EE20 F004          	lfsr	2,4
  2746  001220  5004               	movf	fputc@fp,w,c
  2747  001222  26D9               	addwf	fsr2l,f,c
  2748  001224  5005               	movf	fputc@fp+1,w,c
  2749  001226  22DA               	addwfc	fsr2h,f,c
  2750  001228  EE10 F002          	lfsr	1,2
  2751  00122C  5004               	movf	fputc@fp,w,c
  2752  00122E  26E1               	addwf	fsr1l,f,c
  2753  001230  5005               	movf	fputc@fp+1,w,c
  2754  001232  22E2               	addwfc	fsr1h,f,c
  2755  001234  50DE               	movf	postinc2,w,c
  2756  001236  5CE6               	subwf	postinc1,w,c
  2757  001238  50E6               	movf	postinc1,w,c
  2758  00123A  0A80               	xorlw	128
  2759  00123C  6E0A               	movwf	(??_fputc+4)& (0+255),c
  2760  00123E  50DE               	movf	postinc2,w,c
  2761  001240  0A80               	xorlw	128
  2762  001242  580A               	subwfb	(??_fputc+4)& (0+255),w,c
  2763  001244  B0D8               	btfsc	status,0,c
  2764  001246  0012               	return	
  2765  001248                     u880:
  2766  001248  EE20 F002          	lfsr	2,2
  2767  00124C  5004               	movf	fputc@fp,w,c
  2768  00124E  26D9               	addwf	fsr2l,f,c
  2769  001250  5005               	movf	fputc@fp+1,w,c
  2770  001252  22DA               	addwfc	fsr2h,f,c
  2771  001254  2ADE               	incf	postinc2,f,c
  2772  001256  0E00               	movlw	0
  2773  001258  22DD               	addwfc	postdec2,f,c
  2774  00125A  0012               	return		;funcret
  2775  00125C                     __end_of_fputc:
  2776                           	opt callstack 0
  2777                           
  2778 ;; *************** function _putch *****************
  2779 ;; Defined at:
  2780 ;;		line 111 in file "./myConfig.h"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  data            1    wreg     unsigned char 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  data            1    0[COMRAM] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2794 ;;      Params:         0       0       0       0       0       0       0
  2795 ;;      Locals:         1       0       0       0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0       0       0
  2797 ;;      Totals:         1       0       0       0       0       0       0
  2798 ;;Total ram usage:        1 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_fputc
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text15
  2808  0014D4                     __ptext15:
  2809                           	opt callstack 0
  2810  0014D4                     _putch:
  2811                           	opt callstack 25
  2812                           
  2813                           ;incstack = 0
  2814                           ;putch@data stored from wreg
  2815  0014D4  6E01               	movwf	putch@data,c
  2816  0014D6                     
  2817                           ;./myConfig.h: 112:     while( ! PIR1bits.TXIF);
  2818  0014D6  A89E               	btfss	3998,4,c	;volatile
  2819  0014D8  D7FE               	goto	l1549
  2820                           
  2821                           ;./myConfig.h: 113:     TXREG = data;
  2822  0014DA  C001  FFAD         	movff	putch@data,4013	;volatile
  2823  0014DE  0012               	return		;funcret
  2824  0014E0                     __end_of_putch:
  2825                           	opt callstack 0
  2826                           
  2827 ;; *************** function _abs *****************
  2828 ;; Defined at:
  2829 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  a               2   18[COMRAM] int 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  2   18[COMRAM] int 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2843 ;;      Params:         2       0       0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0
  2845 ;;      Temps:          2       0       0       0       0       0       0
  2846 ;;      Totals:         4       0       0       0       0       0       0
  2847 ;;Total ram usage:        4 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_dtoa
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text16
  2857  00135E                     __ptext16:
  2858                           	opt callstack 0
  2859  00135E                     _abs:
  2860                           	opt callstack 26
  2861                           
  2862                           ;incstack = 0
  2863  00135E  BE14               	btfsc	abs@a+1,7,c
  2864  001360  D005               	goto	u950
  2865  001362  5014               	movf	abs@a+1,w,c
  2866  001364  E110               	bnz	l920
  2867  001366  0413               	decf	abs@a,w,c
  2868  001368  B0D8               	btfsc	status,0,c
  2869  00136A  D00D               	goto	l920
  2870  00136C                     u950:
  2871  00136C  C013  F015         	movff	abs@a,??_abs
  2872  001370  C014  F016         	movff	abs@a+1,??_abs+1
  2873  001374  1E15               	comf	??_abs,f,c
  2874  001376  1E16               	comf	??_abs+1,f,c
  2875  001378  4A15               	infsnz	??_abs,f,c
  2876  00137A  2A16               	incf	??_abs+1,f,c
  2877  00137C  C015  F013         	movff	??_abs,?_abs
  2878  001380  C016  F014         	movff	??_abs+1,?_abs+1
  2879  001384  0012               	return	
  2880  001386                     l920:
  2881  001386  C013  F013         	movff	abs@a,?_abs
  2882  00138A  C014  F014         	movff	abs@a+1,?_abs+1
  2883  00138E  0012               	return		;funcret
  2884  001390                     __end_of_abs:
  2885                           	opt callstack 0
  2886                           
  2887 ;; *************** function ___aomod *****************
  2888 ;; Defined at:
  2889 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  dividend        8    0[COMRAM] long long 
  2892 ;;  divisor         8    8[COMRAM] long long 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  sign            1   17[COMRAM] unsigned char 
  2895 ;;  counter         1   16[COMRAM] unsigned char 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  8    0[COMRAM] long long 
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2905 ;;      Params:        16       0       0       0       0       0       0
  2906 ;;      Locals:         2       0       0       0       0       0       0
  2907 ;;      Temps:          0       0       0       0       0       0       0
  2908 ;;      Totals:        18       0       0       0       0       0       0
  2909 ;;Total ram usage:       18 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; This function calls:
  2912 ;;		Nothing
  2913 ;; This function is called by:
  2914 ;;		_dtoa
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text17
  2919  000F74                     __ptext17:
  2920                           	opt callstack 0
  2921  000F74                     ___aomod:
  2922                           	opt callstack 26
  2923                           
  2924                           ;incstack = 0
  2925  000F74  0E00               	movlw	0
  2926  000F76  6E12               	movwf	___aomod@sign,c
  2927  000F78  AE08               	btfss	___aomod@dividend+7,7,c
  2928  000F7A  D012               	goto	l1673
  2929  000F7C  1E08               	comf	___aomod@dividend+7,f,c
  2930  000F7E  1E07               	comf	___aomod@dividend+6,f,c
  2931  000F80  1E06               	comf	___aomod@dividend+5,f,c
  2932  000F82  1E05               	comf	___aomod@dividend+4,f,c
  2933  000F84  1E04               	comf	___aomod@dividend+3,f,c
  2934  000F86  1E03               	comf	___aomod@dividend+2,f,c
  2935  000F88  1E02               	comf	___aomod@dividend+1,f,c
  2936  000F8A  6C01               	negf	___aomod@dividend,c
  2937  000F8C  0E00               	movlw	0
  2938  000F8E  2202               	addwfc	___aomod@dividend+1,f,c
  2939  000F90  2203               	addwfc	___aomod@dividend+2,f,c
  2940  000F92  2204               	addwfc	___aomod@dividend+3,f,c
  2941  000F94  2205               	addwfc	___aomod@dividend+4,f,c
  2942  000F96  2206               	addwfc	___aomod@dividend+5,f,c
  2943  000F98  2207               	addwfc	___aomod@dividend+6,f,c
  2944  000F9A  2208               	addwfc	___aomod@dividend+7,f,c
  2945  000F9C  0E01               	movlw	1
  2946  000F9E  6E12               	movwf	___aomod@sign,c
  2947  000FA0                     l1673:
  2948  000FA0  AE10               	btfss	___aomod@divisor+7,7,c
  2949  000FA2  D010               	goto	l1677
  2950  000FA4  1E10               	comf	___aomod@divisor+7,f,c
  2951  000FA6  1E0F               	comf	___aomod@divisor+6,f,c
  2952  000FA8  1E0E               	comf	___aomod@divisor+5,f,c
  2953  000FAA  1E0D               	comf	___aomod@divisor+4,f,c
  2954  000FAC  1E0C               	comf	___aomod@divisor+3,f,c
  2955  000FAE  1E0B               	comf	___aomod@divisor+2,f,c
  2956  000FB0  1E0A               	comf	___aomod@divisor+1,f,c
  2957  000FB2  6C09               	negf	___aomod@divisor,c
  2958  000FB4  0E00               	movlw	0
  2959  000FB6  220A               	addwfc	___aomod@divisor+1,f,c
  2960  000FB8  220B               	addwfc	___aomod@divisor+2,f,c
  2961  000FBA  220C               	addwfc	___aomod@divisor+3,f,c
  2962  000FBC  220D               	addwfc	___aomod@divisor+4,f,c
  2963  000FBE  220E               	addwfc	___aomod@divisor+5,f,c
  2964  000FC0  220F               	addwfc	___aomod@divisor+6,f,c
  2965  000FC2  2210               	addwfc	___aomod@divisor+7,f,c
  2966  000FC4                     l1677:
  2967  000FC4  5009               	movf	___aomod@divisor,w,c
  2968  000FC6  100A               	iorwf	___aomod@divisor+1,w,c
  2969  000FC8  100B               	iorwf	___aomod@divisor+2,w,c
  2970  000FCA  100C               	iorwf	___aomod@divisor+3,w,c
  2971  000FCC  100D               	iorwf	___aomod@divisor+4,w,c
  2972  000FCE  100E               	iorwf	___aomod@divisor+5,w,c
  2973  000FD0  100F               	iorwf	___aomod@divisor+6,w,c
  2974  000FD2  1010               	iorwf	___aomod@divisor+7,w,c
  2975  000FD4  B4D8               	btfsc	status,2,c
  2976  000FD6  D03C               	goto	l1693
  2977  000FD8  0E01               	movlw	1
  2978  000FDA  6E11               	movwf	___aomod@counter,c
  2979  000FDC  D00A               	goto	l1683
  2980  000FDE                     l1681:
  2981  000FDE  90D8               	bcf	status,0,c
  2982  000FE0  3609               	rlcf	___aomod@divisor,f,c
  2983  000FE2  360A               	rlcf	___aomod@divisor+1,f,c
  2984  000FE4  360B               	rlcf	___aomod@divisor+2,f,c
  2985  000FE6  360C               	rlcf	___aomod@divisor+3,f,c
  2986  000FE8  360D               	rlcf	___aomod@divisor+4,f,c
  2987  000FEA  360E               	rlcf	___aomod@divisor+5,f,c
  2988  000FEC  360F               	rlcf	___aomod@divisor+6,f,c
  2989  000FEE  3610               	rlcf	___aomod@divisor+7,f,c
  2990  000FF0  2A11               	incf	___aomod@counter,f,c
  2991  000FF2                     l1683:
  2992  000FF2  AE10               	btfss	___aomod@divisor+7,7,c
  2993  000FF4  D7F4               	goto	l1681
  2994  000FF6                     u1080:
  2995  000FF6  5009               	movf	___aomod@divisor,w,c
  2996  000FF8  5C01               	subwf	___aomod@dividend,w,c
  2997  000FFA  500A               	movf	___aomod@divisor+1,w,c
  2998  000FFC  5802               	subwfb	___aomod@dividend+1,w,c
  2999  000FFE  500B               	movf	___aomod@divisor+2,w,c
  3000  001000  5803               	subwfb	___aomod@dividend+2,w,c
  3001  001002  500C               	movf	___aomod@divisor+3,w,c
  3002  001004  5804               	subwfb	___aomod@dividend+3,w,c
  3003  001006  500D               	movf	___aomod@divisor+4,w,c
  3004  001008  5805               	subwfb	___aomod@dividend+4,w,c
  3005  00100A  500E               	movf	___aomod@divisor+5,w,c
  3006  00100C  5806               	subwfb	___aomod@dividend+5,w,c
  3007  00100E  500F               	movf	___aomod@divisor+6,w,c
  3008  001010  5807               	subwfb	___aomod@dividend+6,w,c
  3009  001012  5010               	movf	___aomod@divisor+7,w,c
  3010  001014  5808               	subwfb	___aomod@dividend+7,w,c
  3011  001016  A0D8               	btfss	status,0,c
  3012  001018  D010               	goto	l1689
  3013  00101A  5009               	movf	___aomod@divisor,w,c
  3014  00101C  5E01               	subwf	___aomod@dividend,f,c
  3015  00101E  500A               	movf	___aomod@divisor+1,w,c
  3016  001020  5A02               	subwfb	___aomod@dividend+1,f,c
  3017  001022  500B               	movf	___aomod@divisor+2,w,c
  3018  001024  5A03               	subwfb	___aomod@dividend+2,f,c
  3019  001026  500C               	movf	___aomod@divisor+3,w,c
  3020  001028  5A04               	subwfb	___aomod@dividend+3,f,c
  3021  00102A  500D               	movf	___aomod@divisor+4,w,c
  3022  00102C  5A05               	subwfb	___aomod@dividend+4,f,c
  3023  00102E  500E               	movf	___aomod@divisor+5,w,c
  3024  001030  5A06               	subwfb	___aomod@dividend+5,f,c
  3025  001032  500F               	movf	___aomod@divisor+6,w,c
  3026  001034  5A07               	subwfb	___aomod@dividend+6,f,c
  3027  001036  5010               	movf	___aomod@divisor+7,w,c
  3028  001038  5A08               	subwfb	___aomod@dividend+7,f,c
  3029  00103A                     l1689:
  3030  00103A  90D8               	bcf	status,0,c
  3031  00103C  3210               	rrcf	___aomod@divisor+7,f,c
  3032  00103E  320F               	rrcf	___aomod@divisor+6,f,c
  3033  001040  320E               	rrcf	___aomod@divisor+5,f,c
  3034  001042  320D               	rrcf	___aomod@divisor+4,f,c
  3035  001044  320C               	rrcf	___aomod@divisor+3,f,c
  3036  001046  320B               	rrcf	___aomod@divisor+2,f,c
  3037  001048  320A               	rrcf	___aomod@divisor+1,f,c
  3038  00104A  3209               	rrcf	___aomod@divisor,f,c
  3039  00104C  2E11               	decfsz	___aomod@counter,f,c
  3040  00104E  D7D3               	goto	u1080
  3041  001050                     l1693:
  3042  001050  5012               	movf	___aomod@sign,w,c
  3043  001052  B4D8               	btfsc	status,2,c
  3044  001054  D010               	goto	l1697
  3045  001056  1E08               	comf	___aomod@dividend+7,f,c
  3046  001058  1E07               	comf	___aomod@dividend+6,f,c
  3047  00105A  1E06               	comf	___aomod@dividend+5,f,c
  3048  00105C  1E05               	comf	___aomod@dividend+4,f,c
  3049  00105E  1E04               	comf	___aomod@dividend+3,f,c
  3050  001060  1E03               	comf	___aomod@dividend+2,f,c
  3051  001062  1E02               	comf	___aomod@dividend+1,f,c
  3052  001064  6C01               	negf	___aomod@dividend,c
  3053  001066  0E00               	movlw	0
  3054  001068  2202               	addwfc	___aomod@dividend+1,f,c
  3055  00106A  2203               	addwfc	___aomod@dividend+2,f,c
  3056  00106C  2204               	addwfc	___aomod@dividend+3,f,c
  3057  00106E  2205               	addwfc	___aomod@dividend+4,f,c
  3058  001070  2206               	addwfc	___aomod@dividend+5,f,c
  3059  001072  2207               	addwfc	___aomod@dividend+6,f,c
  3060  001074  2208               	addwfc	___aomod@dividend+7,f,c
  3061  001076                     l1697:
  3062  001076  C001  F001         	movff	___aomod@dividend,?___aomod
  3063  00107A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3064  00107E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3065  001082  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3066  001086  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3067  00108A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3068  00108E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3069  001092  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3070  001096  0012               	return		;funcret
  3071  001098                     __end_of___aomod:
  3072                           	opt callstack 0
  3073                           
  3074 ;; *************** function ___aodiv *****************
  3075 ;; Defined at:
  3076 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  dividend        8    0[COMRAM] long long 
  3079 ;;  divisor         8    8[COMRAM] long long 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  quotient        8   18[COMRAM] long long 
  3082 ;;  sign            1   17[COMRAM] unsigned char 
  3083 ;;  counter         1   16[COMRAM] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  8    0[COMRAM] long long 
  3086 ;; Registers used:
  3087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3093 ;;      Params:        16       0       0       0       0       0       0
  3094 ;;      Locals:        10       0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0
  3096 ;;      Totals:        26       0       0       0       0       0       0
  3097 ;;Total ram usage:       26 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_dtoa
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text18
  3107  000BC0                     __ptext18:
  3108                           	opt callstack 0
  3109  000BC0                     ___aodiv:
  3110                           	opt callstack 26
  3111                           
  3112                           ;incstack = 0
  3113  000BC0  0E00               	movlw	0
  3114  000BC2  6E12               	movwf	___aodiv@sign,c
  3115  000BC4  AE10               	btfss	___aodiv@divisor+7,7,c
  3116  000BC6  D012               	goto	l1629
  3117  000BC8  1E10               	comf	___aodiv@divisor+7,f,c
  3118  000BCA  1E0F               	comf	___aodiv@divisor+6,f,c
  3119  000BCC  1E0E               	comf	___aodiv@divisor+5,f,c
  3120  000BCE  1E0D               	comf	___aodiv@divisor+4,f,c
  3121  000BD0  1E0C               	comf	___aodiv@divisor+3,f,c
  3122  000BD2  1E0B               	comf	___aodiv@divisor+2,f,c
  3123  000BD4  1E0A               	comf	___aodiv@divisor+1,f,c
  3124  000BD6  6C09               	negf	___aodiv@divisor,c
  3125  000BD8  0E00               	movlw	0
  3126  000BDA  220A               	addwfc	___aodiv@divisor+1,f,c
  3127  000BDC  220B               	addwfc	___aodiv@divisor+2,f,c
  3128  000BDE  220C               	addwfc	___aodiv@divisor+3,f,c
  3129  000BE0  220D               	addwfc	___aodiv@divisor+4,f,c
  3130  000BE2  220E               	addwfc	___aodiv@divisor+5,f,c
  3131  000BE4  220F               	addwfc	___aodiv@divisor+6,f,c
  3132  000BE6  2210               	addwfc	___aodiv@divisor+7,f,c
  3133  000BE8  0E01               	movlw	1
  3134  000BEA  6E12               	movwf	___aodiv@sign,c
  3135  000BEC                     l1629:
  3136  000BEC  AE08               	btfss	___aodiv@dividend+7,7,c
  3137  000BEE  D012               	goto	l1635
  3138  000BF0  1E08               	comf	___aodiv@dividend+7,f,c
  3139  000BF2  1E07               	comf	___aodiv@dividend+6,f,c
  3140  000BF4  1E06               	comf	___aodiv@dividend+5,f,c
  3141  000BF6  1E05               	comf	___aodiv@dividend+4,f,c
  3142  000BF8  1E04               	comf	___aodiv@dividend+3,f,c
  3143  000BFA  1E03               	comf	___aodiv@dividend+2,f,c
  3144  000BFC  1E02               	comf	___aodiv@dividend+1,f,c
  3145  000BFE  6C01               	negf	___aodiv@dividend,c
  3146  000C00  0E00               	movlw	0
  3147  000C02  2202               	addwfc	___aodiv@dividend+1,f,c
  3148  000C04  2203               	addwfc	___aodiv@dividend+2,f,c
  3149  000C06  2204               	addwfc	___aodiv@dividend+3,f,c
  3150  000C08  2205               	addwfc	___aodiv@dividend+4,f,c
  3151  000C0A  2206               	addwfc	___aodiv@dividend+5,f,c
  3152  000C0C  2207               	addwfc	___aodiv@dividend+6,f,c
  3153  000C0E  2208               	addwfc	___aodiv@dividend+7,f,c
  3154  000C10  0E01               	movlw	1
  3155  000C12  1A12               	xorwf	___aodiv@sign,f,c
  3156  000C14                     l1635:
  3157  000C14  EE20  F013         	lfsr	2,___aodiv@quotient
  3158  000C18  0E07               	movlw	7
  3159  000C1A                     u1001:
  3160  000C1A  6ADE               	clrf	postinc2,c
  3161  000C1C  06E8               	decf	wreg,f,c
  3162  000C1E  E2FD               	bc	u1001
  3163  000C20  5009               	movf	___aodiv@divisor,w,c
  3164  000C22  100A               	iorwf	___aodiv@divisor+1,w,c
  3165  000C24  100B               	iorwf	___aodiv@divisor+2,w,c
  3166  000C26  100C               	iorwf	___aodiv@divisor+3,w,c
  3167  000C28  100D               	iorwf	___aodiv@divisor+4,w,c
  3168  000C2A  100E               	iorwf	___aodiv@divisor+5,w,c
  3169  000C2C  100F               	iorwf	___aodiv@divisor+6,w,c
  3170  000C2E  1010               	iorwf	___aodiv@divisor+7,w,c
  3171  000C30  B4D8               	btfsc	status,2,c
  3172  000C32  D046               	goto	l1657
  3173  000C34  0E01               	movlw	1
  3174  000C36  6E11               	movwf	___aodiv@counter,c
  3175  000C38  D00A               	goto	l1643
  3176  000C3A                     l1641:
  3177  000C3A  90D8               	bcf	status,0,c
  3178  000C3C  3609               	rlcf	___aodiv@divisor,f,c
  3179  000C3E  360A               	rlcf	___aodiv@divisor+1,f,c
  3180  000C40  360B               	rlcf	___aodiv@divisor+2,f,c
  3181  000C42  360C               	rlcf	___aodiv@divisor+3,f,c
  3182  000C44  360D               	rlcf	___aodiv@divisor+4,f,c
  3183  000C46  360E               	rlcf	___aodiv@divisor+5,f,c
  3184  000C48  360F               	rlcf	___aodiv@divisor+6,f,c
  3185  000C4A  3610               	rlcf	___aodiv@divisor+7,f,c
  3186  000C4C  2A11               	incf	___aodiv@counter,f,c
  3187  000C4E                     l1643:
  3188  000C4E  AE10               	btfss	___aodiv@divisor+7,7,c
  3189  000C50  D7F4               	goto	l1641
  3190  000C52                     u1020:
  3191  000C52  90D8               	bcf	status,0,c
  3192  000C54  3613               	rlcf	___aodiv@quotient,f,c
  3193  000C56  3614               	rlcf	___aodiv@quotient+1,f,c
  3194  000C58  3615               	rlcf	___aodiv@quotient+2,f,c
  3195  000C5A  3616               	rlcf	___aodiv@quotient+3,f,c
  3196  000C5C  3617               	rlcf	___aodiv@quotient+4,f,c
  3197  000C5E  3618               	rlcf	___aodiv@quotient+5,f,c
  3198  000C60  3619               	rlcf	___aodiv@quotient+6,f,c
  3199  000C62  361A               	rlcf	___aodiv@quotient+7,f,c
  3200  000C64  5009               	movf	___aodiv@divisor,w,c
  3201  000C66  5C01               	subwf	___aodiv@dividend,w,c
  3202  000C68  500A               	movf	___aodiv@divisor+1,w,c
  3203  000C6A  5802               	subwfb	___aodiv@dividend+1,w,c
  3204  000C6C  500B               	movf	___aodiv@divisor+2,w,c
  3205  000C6E  5803               	subwfb	___aodiv@dividend+2,w,c
  3206  000C70  500C               	movf	___aodiv@divisor+3,w,c
  3207  000C72  5804               	subwfb	___aodiv@dividend+3,w,c
  3208  000C74  500D               	movf	___aodiv@divisor+4,w,c
  3209  000C76  5805               	subwfb	___aodiv@dividend+4,w,c
  3210  000C78  500E               	movf	___aodiv@divisor+5,w,c
  3211  000C7A  5806               	subwfb	___aodiv@dividend+5,w,c
  3212  000C7C  500F               	movf	___aodiv@divisor+6,w,c
  3213  000C7E  5807               	subwfb	___aodiv@dividend+6,w,c
  3214  000C80  5010               	movf	___aodiv@divisor+7,w,c
  3215  000C82  5808               	subwfb	___aodiv@dividend+7,w,c
  3216  000C84  A0D8               	btfss	status,0,c
  3217  000C86  D011               	goto	l1653
  3218  000C88  5009               	movf	___aodiv@divisor,w,c
  3219  000C8A  5E01               	subwf	___aodiv@dividend,f,c
  3220  000C8C  500A               	movf	___aodiv@divisor+1,w,c
  3221  000C8E  5A02               	subwfb	___aodiv@dividend+1,f,c
  3222  000C90  500B               	movf	___aodiv@divisor+2,w,c
  3223  000C92  5A03               	subwfb	___aodiv@dividend+2,f,c
  3224  000C94  500C               	movf	___aodiv@divisor+3,w,c
  3225  000C96  5A04               	subwfb	___aodiv@dividend+3,f,c
  3226  000C98  500D               	movf	___aodiv@divisor+4,w,c
  3227  000C9A  5A05               	subwfb	___aodiv@dividend+4,f,c
  3228  000C9C  500E               	movf	___aodiv@divisor+5,w,c
  3229  000C9E  5A06               	subwfb	___aodiv@dividend+5,f,c
  3230  000CA0  500F               	movf	___aodiv@divisor+6,w,c
  3231  000CA2  5A07               	subwfb	___aodiv@dividend+6,f,c
  3232  000CA4  5010               	movf	___aodiv@divisor+7,w,c
  3233  000CA6  5A08               	subwfb	___aodiv@dividend+7,f,c
  3234  000CA8  8013               	bsf	___aodiv@quotient,0,c
  3235  000CAA                     l1653:
  3236  000CAA  90D8               	bcf	status,0,c
  3237  000CAC  3210               	rrcf	___aodiv@divisor+7,f,c
  3238  000CAE  320F               	rrcf	___aodiv@divisor+6,f,c
  3239  000CB0  320E               	rrcf	___aodiv@divisor+5,f,c
  3240  000CB2  320D               	rrcf	___aodiv@divisor+4,f,c
  3241  000CB4  320C               	rrcf	___aodiv@divisor+3,f,c
  3242  000CB6  320B               	rrcf	___aodiv@divisor+2,f,c
  3243  000CB8  320A               	rrcf	___aodiv@divisor+1,f,c
  3244  000CBA  3209               	rrcf	___aodiv@divisor,f,c
  3245  000CBC  2E11               	decfsz	___aodiv@counter,f,c
  3246  000CBE  D7C9               	goto	u1020
  3247  000CC0                     l1657:
  3248  000CC0  5012               	movf	___aodiv@sign,w,c
  3249  000CC2  B4D8               	btfsc	status,2,c
  3250  000CC4  D010               	goto	l1661
  3251  000CC6  1E1A               	comf	___aodiv@quotient+7,f,c
  3252  000CC8  1E19               	comf	___aodiv@quotient+6,f,c
  3253  000CCA  1E18               	comf	___aodiv@quotient+5,f,c
  3254  000CCC  1E17               	comf	___aodiv@quotient+4,f,c
  3255  000CCE  1E16               	comf	___aodiv@quotient+3,f,c
  3256  000CD0  1E15               	comf	___aodiv@quotient+2,f,c
  3257  000CD2  1E14               	comf	___aodiv@quotient+1,f,c
  3258  000CD4  6C13               	negf	___aodiv@quotient,c
  3259  000CD6  0E00               	movlw	0
  3260  000CD8  2214               	addwfc	___aodiv@quotient+1,f,c
  3261  000CDA  2215               	addwfc	___aodiv@quotient+2,f,c
  3262  000CDC  2216               	addwfc	___aodiv@quotient+3,f,c
  3263  000CDE  2217               	addwfc	___aodiv@quotient+4,f,c
  3264  000CE0  2218               	addwfc	___aodiv@quotient+5,f,c
  3265  000CE2  2219               	addwfc	___aodiv@quotient+6,f,c
  3266  000CE4  221A               	addwfc	___aodiv@quotient+7,f,c
  3267  000CE6                     l1661:
  3268  000CE6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3269  000CEA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3270  000CEE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3271  000CF2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3272  000CF6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3273  000CFA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3274  000CFE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3275  000D02  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3276  000D06  0012               	return		;funcret
  3277  000D08                     __end_of___aodiv:
  3278                           	opt callstack 0
  3279                           
  3280 ;; *************** function _atoi *****************
  3281 ;; Defined at:
  3282 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  s               2    7[COMRAM] PTR const unsigned char 
  3285 ;;		 -> STR_3(3), STR_2(20), STR_1(16), 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  n               2   20[COMRAM] int 
  3288 ;;  neg             2   13[COMRAM] int 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  2    7[COMRAM] int 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3298 ;;      Params:         2       0       0       0       0       0       0
  3299 ;;      Locals:         9       0       0       0       0       0       0
  3300 ;;      Temps:          4       0       0       0       0       0       0
  3301 ;;      Totals:        15       0       0       0       0       0       0
  3302 ;;Total ram usage:       15 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    1
  3305 ;; This function calls:
  3306 ;;		___wmul
  3307 ;;		_isdigit
  3308 ;;		_isspace
  3309 ;; This function is called by:
  3310 ;;		_vfpfcnvrt
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text19
  3315  000D08                     __ptext19:
  3316                           	opt callstack 0
  3317  000D08                     _atoi:
  3318                           	opt callstack 26
  3319                           
  3320                           ;incstack = 0
  3321  000D08  0E00               	movlw	0
  3322  000D0A  6E16               	movwf	atoi@n+1,c
  3323  000D0C  0E00               	movlw	0
  3324  000D0E  6E15               	movwf	atoi@n,c
  3325  000D10  0E00               	movlw	0
  3326  000D12  6E0F               	movwf	atoi@neg+1,c
  3327  000D14  0E00               	movlw	0
  3328  000D16  6E0E               	movwf	atoi@neg,c
  3329  000D18  D002               	goto	l1821
  3330  000D1A                     l1819:
  3331  000D1A  4A08               	infsnz	atoi@s,f,c
  3332  000D1C  2A09               	incf	atoi@s+1,f,c
  3333  000D1E                     l1821:
  3334  000D1E  0E01               	movlw	1
  3335  000D20  6E14               	movwf	_atoi$886,c
  3336  000D22  C008  FFF6         	movff	atoi@s,tblptrl
  3337  000D26  C009  FFF7         	movff	atoi@s+1,tblptrh
  3338  000D2A                     	if	0	;tblptru may be non-zero
  3339  000D2A                     	endif
  3340  000D2A                     	if	0	;tblptru may be non-zero
  3341  000D2A                     	endif
  3342  000D2A  0008               	tblrd		*
  3343  000D2C  50F5               	movf	tablat,w,c
  3344  000D2E  0A20               	xorlw	32
  3345  000D30  B4D8               	btfsc	status,2,c
  3346  000D32  D018               	goto	l1829
  3347  000D34  0EF7               	movlw	247
  3348  000D36  6E0A               	movwf	??_atoi& (0+255),c
  3349  000D38  0EFF               	movlw	255
  3350  000D3A  6E0B               	movwf	(??_atoi+1)& (0+255),c
  3351  000D3C  C008  FFF6         	movff	atoi@s,tblptrl
  3352  000D40  C009  FFF7         	movff	atoi@s+1,tblptrh
  3353  000D44                     	if	0	;tblptru may be non-zero
  3354  000D44                     	endif
  3355  000D44                     	if	0	;tblptru may be non-zero
  3356  000D44                     	endif
  3357  000D44  0008               	tblrd		*
  3358  000D46  50F5               	movf	tablat,w,c
  3359  000D48  6E0C               	movwf	(??_atoi+2)& (0+255),c
  3360  000D4A  6A0D               	clrf	(??_atoi+3)& (0+255),c
  3361  000D4C  500A               	movf	??_atoi,w,c
  3362  000D4E  260C               	addwf	??_atoi+2,f,c
  3363  000D50  500B               	movf	??_atoi+1,w,c
  3364  000D52  220D               	addwfc	??_atoi+3,f,c
  3365  000D54  500D               	movf	??_atoi+3,w,c
  3366  000D56  E104               	bnz	u1380
  3367  000D58  0E05               	movlw	5
  3368  000D5A  5C0C               	subwf	??_atoi+2,w,c
  3369  000D5C  A0D8               	btfss	status,0,c
  3370  000D5E  D002               	goto	l1829
  3371  000D60                     u1380:
  3372  000D60  0E00               	movlw	0
  3373  000D62  6E14               	movwf	_atoi$886,c
  3374  000D64                     l1829:
  3375  000D64  C014  F010         	movff	_atoi$886,_atoi$885
  3376  000D68  6A11               	clrf	_atoi$885+1,c
  3377  000D6A  5010               	movf	_atoi$885,w,c
  3378  000D6C  1011               	iorwf	_atoi$885+1,w,c
  3379  000D6E  B4D8               	btfsc	status,2,c
  3380  000D70  D008               	goto	l1839
  3381  000D72  D7D3               	goto	l1819
  3382  000D74                     l1835:
  3383  000D74  0E00               	movlw	0
  3384  000D76  6E0F               	movwf	atoi@neg+1,c
  3385  000D78  0E01               	movlw	1
  3386  000D7A  6E0E               	movwf	atoi@neg,c
  3387  000D7C                     l1837:
  3388  000D7C  4A08               	infsnz	atoi@s,f,c
  3389  000D7E  2A09               	incf	atoi@s+1,f,c
  3390  000D80  D02E               	goto	l1845
  3391  000D82                     l1839:
  3392  000D82  C008  FFF6         	movff	atoi@s,tblptrl
  3393  000D86  C009  FFF7         	movff	atoi@s+1,tblptrh
  3394  000D8A                     	if	0	;tblptru may be non-zero
  3395  000D8A                     	endif
  3396  000D8A                     	if	0	;tblptru may be non-zero
  3397  000D8A                     	endif
  3398  000D8A  0008               	tblrd		*
  3399  000D8C  50F5               	movf	tablat,w,c
  3400  000D8E  6E0A               	movwf	??_atoi& (0+255),c
  3401  000D90  6A0B               	clrf	(??_atoi+1)& (0+255),c
  3402                           
  3403                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3404                           ; Switch size 1, requested type "simple"
  3405                           ; Number of cases is 1, Range of values is 0 to 0
  3406                           ; switch strategies available:
  3407                           ; Name         Instructions Cycles
  3408                           ; simple_byte            4     3 (average)
  3409                           ;	Chosen strategy is simple_byte
  3410  000D92  500B               	movf	??_atoi+1,w,c
  3411  000D94  0A00               	xorlw	0	; case 0
  3412  000D96  A4D8               	btfss	status,2,c
  3413  000D98  D022               	goto	l1845
  3414                           
  3415                           ; Switch size 1, requested type "simple"
  3416                           ; Number of cases is 2, Range of values is 43 to 45
  3417                           ; switch strategies available:
  3418                           ; Name         Instructions Cycles
  3419                           ; simple_byte            7     4 (average)
  3420                           ;	Chosen strategy is simple_byte
  3421  000D9A  500A               	movf	??_atoi,w,c
  3422  000D9C  0A2B               	xorlw	43	; case 43
  3423  000D9E  B4D8               	btfsc	status,2,c
  3424  000DA0  D7ED               	goto	l1837
  3425  000DA2  0A06               	xorlw	6	; case 45
  3426  000DA4  B4D8               	btfsc	status,2,c
  3427  000DA6  D7E6               	goto	l1835
  3428  000DA8  D01A               	goto	l1845
  3429  000DAA                     l1841:
  3430  000DAA  C015  F001         	movff	atoi@n,___wmul@multiplier
  3431  000DAE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3432  000DB2  0E00               	movlw	0
  3433  000DB4  6E04               	movwf	___wmul@multiplicand+1,c
  3434  000DB6  0E0A               	movlw	10
  3435  000DB8  6E03               	movwf	___wmul@multiplicand,c
  3436  000DBA  EC34  F00A         	call	___wmul	;wreg free
  3437  000DBE  C008  FFF6         	movff	atoi@s,tblptrl
  3438  000DC2  C009  FFF7         	movff	atoi@s+1,tblptrh
  3439  000DC6                     	if	0	;tblptru may be non-zero
  3440  000DC6                     	endif
  3441  000DC6                     	if	0	;tblptru may be non-zero
  3442  000DC6                     	endif
  3443  000DC6  0008               	tblrd		*
  3444  000DC8  50F5               	movf	tablat,w,c
  3445  000DCA  5E01               	subwf	?___wmul,f,c
  3446  000DCC  0E00               	movlw	0
  3447  000DCE  5A02               	subwfb	?___wmul+1,f,c
  3448  000DD0  0E30               	movlw	48
  3449  000DD2  2401               	addwf	?___wmul,w,c
  3450  000DD4  6E15               	movwf	atoi@n,c
  3451  000DD6  0E00               	movlw	0
  3452  000DD8  2002               	addwfc	?___wmul+1,w,c
  3453  000DDA  6E16               	movwf	atoi@n+1,c
  3454  000DDC  D7CF               	goto	l1837
  3455  000DDE                     l1845:
  3456  000DDE  0ED0               	movlw	208
  3457  000DE0  6E0A               	movwf	??_atoi& (0+255),c
  3458  000DE2  0EFF               	movlw	255
  3459  000DE4  6E0B               	movwf	(??_atoi+1)& (0+255),c
  3460  000DE6  C008  FFF6         	movff	atoi@s,tblptrl
  3461  000DEA  C009  FFF7         	movff	atoi@s+1,tblptrh
  3462  000DEE                     	if	0	;tblptru may be non-zero
  3463  000DEE                     	endif
  3464  000DEE                     	if	0	;tblptru may be non-zero
  3465  000DEE                     	endif
  3466  000DEE  0008               	tblrd		*
  3467  000DF0  50F5               	movf	tablat,w,c
  3468  000DF2  6E0C               	movwf	(??_atoi+2)& (0+255),c
  3469  000DF4  6A0D               	clrf	(??_atoi+3)& (0+255),c
  3470  000DF6  500A               	movf	??_atoi,w,c
  3471  000DF8  260C               	addwf	??_atoi+2,f,c
  3472  000DFA  500B               	movf	??_atoi+1,w,c
  3473  000DFC  220D               	addwfc	??_atoi+3,f,c
  3474  000DFE  500D               	movf	??_atoi+3,w,c
  3475  000E00  E106               	bnz	u1400
  3476  000E02  0E0A               	movlw	10
  3477  000E04  5C0C               	subwf	??_atoi+2,w,c
  3478  000E06  B0D8               	btfsc	status,0,c
  3479  000E08  D002               	goto	u1400
  3480  000E0A  0E01               	movlw	1
  3481  000E0C  D001               	goto	u1410
  3482  000E0E                     u1400:
  3483  000E0E  0E00               	movlw	0
  3484  000E10                     u1410:
  3485  000E10  6E12               	movwf	_atoi$887,c
  3486  000E12  6A13               	clrf	_atoi$887+1,c
  3487  000E14  5012               	movf	_atoi$887,w,c
  3488  000E16  1013               	iorwf	_atoi$887+1,w,c
  3489  000E18  A4D8               	btfss	status,2,c
  3490  000E1A  D7C7               	goto	l1841
  3491  000E1C  500E               	movf	atoi@neg,w,c
  3492  000E1E  100F               	iorwf	atoi@neg+1,w,c
  3493  000E20  A4D8               	btfss	status,2,c
  3494  000E22  D00D               	goto	l951
  3495  000E24  C015  F00A         	movff	atoi@n,??_atoi
  3496  000E28  C016  F00B         	movff	atoi@n+1,??_atoi+1
  3497  000E2C  1E0A               	comf	??_atoi,f,c
  3498  000E2E  1E0B               	comf	??_atoi+1,f,c
  3499  000E30  4A0A               	infsnz	??_atoi,f,c
  3500  000E32  2A0B               	incf	??_atoi+1,f,c
  3501  000E34  C00A  F008         	movff	??_atoi,?_atoi
  3502  000E38  C00B  F009         	movff	??_atoi+1,?_atoi+1
  3503  000E3C  0012               	return	
  3504  000E3E                     l951:
  3505  000E3E  C015  F008         	movff	atoi@n,?_atoi
  3506  000E42  C016  F009         	movff	atoi@n+1,?_atoi+1
  3507  000E46  0012               	return		;funcret
  3508  000E48                     __end_of_atoi:
  3509                           	opt callstack 0
  3510                           
  3511 ;; *************** function _isspace *****************
  3512 ;; Defined at:
  3513 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  c               2    0[COMRAM] int 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;		None
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  2    0[COMRAM] int 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3527 ;;      Params:         2       0       0       0       0       0       0
  3528 ;;      Locals:         1       0       0       0       0       0       0
  3529 ;;      Temps:          4       0       0       0       0       0       0
  3530 ;;      Totals:         7       0       0       0       0       0       0
  3531 ;;Total ram usage:        7 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; This function calls:
  3534 ;;		Nothing
  3535 ;; This function is called by:
  3536 ;;		_atoi
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text20
  3541  0012B2                     __ptext20:
  3542                           	opt callstack 0
  3543  0012B2                     _isspace:
  3544                           	opt callstack 26
  3545                           
  3546                           ;incstack = 0
  3547  0012B2  0E01               	movlw	1
  3548  0012B4  6E07               	movwf	_isspace$903,c
  3549  0012B6  0E20               	movlw	32
  3550  0012B8  1801               	xorwf	isspace@c,w,c
  3551  0012BA  1002               	iorwf	isspace@c+1,w,c
  3552  0012BC  B4D8               	btfsc	status,2,c
  3553  0012BE  D014               	goto	l1709
  3554  0012C0  0EF7               	movlw	247
  3555  0012C2  6E03               	movwf	??_isspace& (0+255),c
  3556  0012C4  0EFF               	movlw	255
  3557  0012C6  6E04               	movwf	(??_isspace+1)& (0+255),c
  3558  0012C8  C001  F005         	movff	isspace@c,??_isspace+2
  3559  0012CC  C002  F006         	movff	isspace@c+1,??_isspace+3
  3560  0012D0  5003               	movf	??_isspace,w,c
  3561  0012D2  2605               	addwf	??_isspace+2,f,c
  3562  0012D4  5004               	movf	??_isspace+1,w,c
  3563  0012D6  2206               	addwfc	??_isspace+3,f,c
  3564  0012D8  5006               	movf	??_isspace+3,w,c
  3565  0012DA  E104               	bnz	u1120
  3566  0012DC  0E05               	movlw	5
  3567  0012DE  5C05               	subwf	??_isspace+2,w,c
  3568  0012E0  A0D8               	btfss	status,0,c
  3569  0012E2  D002               	goto	l1709
  3570  0012E4                     u1120:
  3571  0012E4  0E00               	movlw	0
  3572  0012E6  6E07               	movwf	_isspace$903,c
  3573  0012E8                     l1709:
  3574  0012E8  C007  F001         	movff	_isspace$903,?_isspace
  3575  0012EC  6A02               	clrf	?_isspace+1,c
  3576  0012EE  0012               	return		;funcret
  3577  0012F0                     __end_of_isspace:
  3578                           	opt callstack 0
  3579                           
  3580 ;; *************** function _isdigit *****************
  3581 ;; Defined at:
  3582 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  c               2    0[COMRAM] int 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  2    0[COMRAM] int 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3596 ;;      Params:         2       0       0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0
  3598 ;;      Temps:          4       0       0       0       0       0       0
  3599 ;;      Totals:         6       0       0       0       0       0       0
  3600 ;;Total ram usage:        6 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_vfpfcnvrt
  3606 ;;		_atoi
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text21
  3611  001390                     __ptext21:
  3612                           	opt callstack 0
  3613  001390                     _isdigit:
  3614                           	opt callstack 27
  3615                           
  3616                           ;incstack = 0
  3617  001390  0ED0               	movlw	208
  3618  001392  6E03               	movwf	??_isdigit& (0+255),c
  3619  001394  0EFF               	movlw	255
  3620  001396  6E04               	movwf	(??_isdigit+1)& (0+255),c
  3621  001398  C001  F005         	movff	isdigit@c,??_isdigit+2
  3622  00139C  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  3623  0013A0  5003               	movf	??_isdigit,w,c
  3624  0013A2  2605               	addwf	??_isdigit+2,f,c
  3625  0013A4  5004               	movf	??_isdigit+1,w,c
  3626  0013A6  2206               	addwfc	??_isdigit+3,f,c
  3627  0013A8  5006               	movf	??_isdigit+3,w,c
  3628  0013AA  E106               	bnz	u960
  3629  0013AC  0E0A               	movlw	10
  3630  0013AE  5C05               	subwf	??_isdigit+2,w,c
  3631  0013B0  B0D8               	btfsc	status,0,c
  3632  0013B2  D002               	goto	u960
  3633  0013B4  0E01               	movlw	1
  3634  0013B6  D001               	goto	u970
  3635  0013B8                     u960:
  3636  0013B8  0E00               	movlw	0
  3637  0013BA                     u970:
  3638  0013BA  6E01               	movwf	?_isdigit,c
  3639  0013BC  6A02               	clrf	?_isdigit+1,c
  3640  0013BE  0012               	return		;funcret
  3641  0013C0                     __end_of_isdigit:
  3642                           	opt callstack 0
  3643                           
  3644 ;; *************** function ___wmul *****************
  3645 ;; Defined at:
  3646 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  multiplier      2    0[COMRAM] unsigned int 
  3649 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  product         2    4[COMRAM] unsigned int 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  2    0[COMRAM] unsigned int 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0, prodl, prodh
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3661 ;;      Params:         4       0       0       0       0       0       0
  3662 ;;      Locals:         2       0       0       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0
  3664 ;;      Totals:         6       0       0       0       0       0       0
  3665 ;;Total ram usage:        6 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_atoi
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text22
  3675  001468                     __ptext22:
  3676                           	opt callstack 0
  3677  001468                     ___wmul:
  3678                           	opt callstack 26
  3679                           
  3680                           ;incstack = 0
  3681  001468  5001               	movf	___wmul@multiplier,w,c
  3682  00146A  0203               	mulwf	___wmul@multiplicand,c
  3683  00146C  CFF3 F005          	movff	prodl,___wmul@product
  3684  001470  CFF4 F006          	movff	prodh,___wmul@product+1
  3685  001474  5001               	movf	___wmul@multiplier,w,c
  3686  001476  0204               	mulwf	___wmul@multiplicand+1,c
  3687  001478  50F3               	movf	prodl,w,c
  3688  00147A  2606               	addwf	___wmul@product+1,f,c
  3689  00147C  5002               	movf	___wmul@multiplier+1,w,c
  3690  00147E  0203               	mulwf	___wmul@multiplicand,c
  3691  001480  50F3               	movf	prodl,w,c
  3692  001482  2606               	addwf	___wmul@product+1,f,c
  3693  001484  C005  F001         	movff	___wmul@product,?___wmul
  3694  001488  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3695  00148C  0012               	return		;funcret
  3696  00148E                     __end_of___wmul:
  3697                           	opt callstack 0
  3698                           
  3699                           	psect	rparam
  3700  0000                     tosu	equ	0xFFF
  3701                           tosh	equ	0xFFE
  3702                           tosl	equ	0xFFD
  3703                           stkptr	equ	0xFFC
  3704                           pclatu	equ	0xFFB
  3705                           pclath	equ	0xFFA
  3706                           pcl	equ	0xFF9
  3707                           tblptru	equ	0xFF8
  3708                           tblptrh	equ	0xFF7
  3709                           tblptrl	equ	0xFF6
  3710                           tablat	equ	0xFF5
  3711                           prodh	equ	0xFF4
  3712                           prodl	equ	0xFF3
  3713                           indf0	equ	0xFEF
  3714                           postinc0	equ	0xFEE
  3715                           postdec0	equ	0xFED
  3716                           preinc0	equ	0xFEC
  3717                           plusw0	equ	0xFEB
  3718                           fsr0h	equ	0xFEA
  3719                           fsr0l	equ	0xFE9
  3720                           wreg	equ	0xFE8
  3721                           indf1	equ	0xFE7
  3722                           postinc1	equ	0xFE6
  3723                           postdec1	equ	0xFE5
  3724                           preinc1	equ	0xFE4
  3725                           plusw1	equ	0xFE3
  3726                           fsr1h	equ	0xFE2
  3727                           fsr1l	equ	0xFE1
  3728                           bsr	equ	0xFE0
  3729                           indf2	equ	0xFDF
  3730                           postinc2	equ	0xFDE
  3731                           postdec2	equ	0xFDD
  3732                           preinc2	equ	0xFDC
  3733                           plusw2	equ	0xFDB
  3734                           fsr2h	equ	0xFDA
  3735                           fsr2l	equ	0xFD9
  3736                           status	equ	0xFD8


Data Sizes:
    Strings     39
    Constant    0
    Data        46
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     19     105
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), AMPM(BANK0[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), AMPM(BANK0[20]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[3]), STR_2(CODE[20]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S907_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[3]), STR_2(CODE[20]), STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[3]), STR_2(CODE[20]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[3]), STR_2(CODE[20]), STR_1(CODE[16]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), AMPM(BANK0[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), AMPM(BANK0[20]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), AMPM(BANK0[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   12263
                                             14 BANK0      5     5      0
                             _printf
                   _systemInitialize
 ---------------------------------------------------------------------------------
 (1) _systemInitialize                                     0     0      0       0
                         _portConfig
                         _serialComm
             _set_osc_p18f45k22_4MHz
                       _timer0Config
 ---------------------------------------------------------------------------------
 (2) _timer0Config                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_osc_p18f45k22_4MHz                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialComm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _portConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   11792
                                              2 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11506
                                             88 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   11130
                                             64 COMRAM    24    18      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2095
                                             10 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5258
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3609
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1647
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1246
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1290
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     449
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit
         _stoa
           _fputc
             _putch
           _strlen
   _systemInitialize
     _portConfig
     _serialComm
     _set_osc_p18f45k22_4MHz
     _timer0Config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     13      69       4       65.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C7       9        0.0%
DATA                 0      0      C7      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 11 00:40:22 2019

                             l63 14AC              ___wmul@multiplicand 0003  
      __size_of_systemInitialize 0012                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l113 114A  
                            l109 10FC                              l151 1186  
                            l162 09EE                              l164 09F6  
                            l191 0EAE                              l920 1386  
                            l951 0E3E                     __CFG_CPB$OFF 000000  
                   __CFG_CPD$OFF 000000                              u860 1200  
                            u950 136C                              u960 13B8  
                            u880 1248                              u970 13BA  
                            _abs 135E                              _pad 1156  
                            prod 000FF3                              wreg 000FE8  
                   __CFG_LVP$OFF 000000                             l2011 10B2  
                           ?_abs 0013                             l2041 113A  
                           l1603 11D6                             l1641 0C3A  
                           l1801 0EFC                             l1643 0C4E  
                           l1635 0C14                             l1811 0F3E  
                           l1709 12E8                             l1821 0D1E  
                           l1661 0CE6                             l1653 0CAA  
                           l1629 0BEC                             l1549 14D6  
                           l1573 1310                             l1733 0A10  
                           l1559 1208                             l1719 09D0  
                           l1815 0F56                             l1807 0F22  
                           l1911 0782                             l1841 0DAA  
                           l1657 0CC0                             l1681 0FDE  
                           l1673 0FA0                             l1569 12FA  
                           l1577 13F8                             l1593 117E  
                           l1737 0A1E                             l1835 0D74  
                           l1819 0D1A                             l1683 0FF2  
                           l1579 13FC                             l1595 1190  
                           l1771 0B96                             l1747 0B16  
                           l1907 0756                             l1845 0DDE  
                           l1837 0D7C                             l1829 0D64  
                           l1693 1050                             l1677 0FC4  
                           l1589 1170                             l1941 0924  
                           l1909 0774                             l1839 0D82  
                           l1599 11A8                             l1767 0B7E  
                           l1783 0E72                             l1935 08E8  
                           l1927 087A                             l1871 0674  
                           l1951 0946                             l1697 1076  
                           l1689 103A                             l1793 0EC6  
                           l1945 092E                             l1881 0690  
                           l1873 0684                             l1797 0EDE  
                           l1893 06A6                             l1885 0696  
                           l1877 068A                             l1869 0670  
                           ?_pad 0012                             l1895 06E8  
                           l1889 069C                             l1987 1270  
                           l1989 1296                             STR_1 0615  
                           STR_2 0601                             STR_3 0625  
                           _AMPM 007A                             u1001 0C1A  
                           u1020 0C52                             u1120 12E4  
                           u1200 0B24                             u1130 09A2  
                           u1220 0B46                             u1140 09A4  
                           u1221 0B44                             u1230 0B54  
                           u1400 0E0E                             u1080 0FF6  
                           u1240 0B5A                             u1410 0E10  
                           u1170 09E4                             u1330 0EF2  
                           u1260 0B68                             u1500 07BC  
                           _LATA 000F89                             u1190 0A0A  
                           u1510 07C8                             _LATB 000F8A  
                           u1360 0F6A                             _LATD 000F8C  
                           u1281 0E52                             u1530 07FC  
                           u1380 0D60                             u1490 07BA  
                    main@myClock 00C4                             abs@a 0013  
                           _dbuf 0096                             _atoi 0D08  
                           _main 1098                             _dtoa 097A  
                           _prec 0092                             _nout 008E  
                           pad@i 0019                             pad@p 0016  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001B                             fsr2l 000FD9  
                           _stoa 0E48                    __CFG_BORV$190 000000  
                           prodh 000FF4                             prodl 000FF3  
                           start 0000                    __CFG_IESO$OFF 000000  
                   ___param_bank 000000                            ??_abs 0015  
                          ??_pad 0018                  __end_of___aodiv 0D08  
                          ?_atoi 0008                            ?_main 0001  
                          ?_dtoa 001D                  __end_of___aomod 1098  
                          _ADRES 000FC3                            ?_stoa 000B  
                          _T0CON 000FD5                     vfpfcnvrt@fmt 0043  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISD 000F95                            _TXREG 000FAD  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000                            _flags 0094  
                          _fputc 11F0                            _fputs 12F0  
                __end_of_isdigit 13C0               __CFG_MCLRE$EXTMCLR 000000  
                          atoi@n 0015                            pad@fp 0012  
                          atoi@s 0008                            _width 0090  
                          _putch 14D4                            dtoa@d 001F  
                          dtoa@i 003F                            dtoa@n 0037  
                          dtoa@p 0031                            dtoa@s 0035  
                          dtoa@w 0033                  __end_of_isspace 12F0  
                          tablat 000FF5                            plusw1 000FE3  
                          plusw2 000FDB                            stoa@i 0017  
                          stoa@l 001F                            stoa@p 001D  
                          stoa@s 000D                            stoa@w 0019  
                          status 000FD8                   __CFG_HFOFST$ON 000000  
                 __CFG_PBADEN$ON 000000                  __initialization 1328  
                   __end_of_atoi 0E48                     __end_of_main 1156  
                   __end_of_dtoa 0BC0                     __end_of_stoa 0F74  
                         ??_atoi 000A                           ??_main 005F  
                         ??_dtoa 0027                           ??_stoa 000F  
                  __activetblptr 000002                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         ?_fputc 0002                           ?_fputs 000B  
                         _ANSELA 000F38                           ?_putch 0001  
                         _ANSELB 000F39                           _ANSELD 000F3B  
                 __CFG_WDTEN$OFF 000000                           _RCSTA1 000FAB  
                         _OSCCON 000FD3                    vfpfcnvrt@done 0055  
                         _SPBRG1 000FAF                           _TXSTA1 000FAC  
                 __CFG_XINST$OFF 000000                     vfprintf@cfmt 00B6  
                      ??___aodiv 0011                        ??___aomod 0011  
                         ___wmul 1468                   __CFG_STVREN$ON 000000  
                         clear_0 134E                 _systemInitialize 148E  
                         _printf 1440                           pad@buf 0014  
                         dtoa@fp 001D                           _strlen 13EE  
                         fputc@c 0002                           fputs@c 000F  
                         fputs@i 0010                           fputs@s 000B  
                      ??_isdigit 0003          ?_set_osc_p18f45k22_4MHz 0001  
                   __mediumconst 0000                        ??_isspace 0003  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                           stoa@cp 001B  
                         stoa@fp 000B                 __end_of_vfprintf 12B2  
                     __accesstop 0060          __end_of__initialization 1354  
                  ___rparam_used 000001                   __pcstackCOMRAM 0001  
                   __pidataBANK0 13C0                    __end_of_fputc 125C  
                  __end_of_fputs 1328                    __end_of_putch 14E0  
 __end_of_set_osc_p18f45k22_4MHz 14B2                          ??_fputc 0006  
                        ??_fputs 000F                          ??_putch 0001  
                     __pbssBANK0 008E                  __CFG_PLLCFG$OFF 000000  
             __CFG_CCP2MX$PORTB3 000000                          ?___wmul 0001  
             __CFG_CCP3MX$PORTB5 000000                          ?_printf 00B8  
                        ?_strlen 0001                          _OSCCON2 000FD2  
             __size_of_vfpfcnvrt 0350                          _OSCTUNE 000F9B  
                __CFG_PWRTEN$OFF 000000                          __Hparam 0000  
                        __Lparam 0000                    ?_timer0Config 0001  
                        ___aodiv 0BC0                          ___aomod 0F74  
                __size_of___wmul 0026                        ?_vfprintf 0059  
                   __psmallconst 0600                          __pcinit 1328  
                        __ramtop 0600                          __ptext0 1098  
                        __ptext1 148E                          __ptext2 14C4  
                        __ptext3 14A0                          __ptext4 14B2  
                        __ptext5 1418                          __ptext6 1440  
                        __ptext7 125C                          __ptext8 062A  
                        __ptext9 0E48                  __size_of_printf 0028  
                __size_of_strlen 002A                     __size_of_abs 0032  
                   __size_of_pad 009A                          _isdigit 1390  
                        _message 0060                          _isspace 12B2  
                        atoi@neg 000E             end_of_initialization 1354  
       __end_of_systemInitialize 14A0                          fputc@fp 0004  
                  __Lmediumconst 0000                          fputs@fp 000D  
                     _serialComm 14B2                   ??_timer0Config 0001  
              __end_of_vfpfcnvrt 097A                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                     ??_vfprintf 005F                          strlen@a 0003  
                        strlen@s 0001                       _portConfig 1418  
                      _TRISCbits 000F94                      vfpfcnvrt@ap 0045  
                    vfpfcnvrt@cp 0053                      vfpfcnvrt@fp 0041  
                    vfpfcnvrt@ll 004B                   __end_of___wmul 148E  
                 __end_of_printf 1468                   __end_of_strlen 1418  
            start_initialization 1328                      __end_of_abs 1390  
                    __end_of_pad 11F0                      ?_serialComm 0001  
                    vfprintf@fmt 005B                         ??___wmul 0005  
                    __pdataBANK0 0060                      ?_portConfig 0001  
                       ??_printf 005F                         ??_strlen 0003  
                  __pcstackBANK0 00B6                 ___aodiv@dividend 0001  
           __end_of_timer0Config 14D4                         ?___aodiv 0001  
                       ?___aomod 0001                 ___aodiv@quotient 0013  
               __CFG_PRICLKEN$ON 000000                __size_of_vfprintf 0056  
                    __smallconst 0600                         _BAUDCON1 000FB8  
                       ?_isdigit 0001                         ?_isspace 0001  
            __size_of_serialComm 0012                   __size_of_fputc 006C  
                 __size_of_fputs 0038                   __size_of_putch 000C  
              ?_systemInitialize 0001                   ___wmul@product 0005  
            __size_of_portConfig 0028               ??_systemInitialize 0001  
                       _PIR1bits 000F9E                 __CFG_WDTPS$32768 000000  
       ??_set_osc_p18f45k22_4MHz 0001                        _vfpfcnvrt 062A  
                     _ADCON0bits 000FC2                ___wmul@multiplier 0001  
                      copy_data0 133C                         __Hrparam 0000  
                     vfprintf@ap 005D                         __Lrparam 0000  
                     vfprintf@fp 0059               __CFG_BOREN$SBORDIS 000000  
              __CFG_P2BMX$PORTD2 000000                 __size_of___aodiv 0148  
               __size_of___aomod 0124                       ?_vfpfcnvrt 0041  
                ___aodiv@divisor 0009                  ___aodiv@counter 0011  
          __size_of_timer0Config 0010                         _atoi$885 0010  
                       _atoi$886 0014                         _atoi$887 0012  
               __size_of_isdigit 0030                         _dtoa$401 002F  
               __size_of_isspace 003E                         __ptext10 097A  
                       __ptext11 1156                         __ptext20 12B2  
                       __ptext12 13EE                         __ptext21 1390  
                       __ptext13 12F0                         __ptext22 1468  
                       __ptext14 11F0                         __ptext15 14D4  
                       __ptext16 135E                         __ptext17 0F74  
                       __ptext18 0BC0                         __ptext19 0D08  
                  __size_of_atoi 0140                    __size_of_main 00BE  
                  __size_of_dtoa 0246                    __size_of_stoa 012C  
                   ??_serialComm 0001                        stoa@F1139 0073  
                   _timer0Config 14C4  __size_of_set_osc_p18f45k22_4MHz 0012  
                       _vfprintf 125C                        printf@fmt 00B8  
                   ??_portConfig 0001                      _isspace$903 0007  
               ___aomod@dividend 0001                        putch@data 0001  
                     _INTCONbits 000FF2                         isdigit@c 0001  
             __end_of_serialComm 14C4                         isspace@c 0001  
             __end_of_portConfig 1440                       _OSCCONbits 000FD3  
                       printf@ap 00C2                  ___aomod@divisor 0009  
                    ??_vfpfcnvrt 0047                    _vfpfcnvrt$427 0057  
                       stoa@nuls 0010                  ___aomod@counter 0011  
              __CFG_T3CMX$PORTC0 000000           _set_osc_p18f45k22_4MHz 14A0  
                   ___aodiv@sign 0012                __CFG_FOSC$INTIO67 000000  
                   ___aomod@sign 0012  
