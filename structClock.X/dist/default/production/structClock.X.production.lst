

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 16 21:47:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37  0000                     
    38                           ; Version 2.05
    39                           ; Generated 20/12/2018 GMT
    40                           ; 
    41                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F45K22 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataBANK0
    74  00146C                     __pidataBANK0:
    75                           	opt callstack 0
    76                           
    77                           ;initializer for stoa@F1139
    78  00146C  28                 	db	40
    79  00146D  6E                 	db	110
    80  00146E  75                 	db	117
    81  00146F  6C                 	db	108
    82  001470  6C                 	db	108
    83  001471  29                 	db	41
    84  001472  00                 	db	0
    85                           
    86                           ;initializer for _AMPM
    87  001473  41                 	db	65
    88  001474  4D                 	db	77
    89  001475  00                 	db	0
    90  001476  00                 	db	0
    91  001477  00                 	db	0
    92  001478  00                 	db	0
    93  001479  00                 	db	0
    94  00147A  00                 	db	0
    95  00147B  00                 	db	0
    96  00147C  00                 	db	0
    97  00147D  50                 	db	80
    98  00147E  4D                 	db	77
    99  00147F  00                 	db	0
   100  001480  00                 	db	0
   101  001481  00                 	db	0
   102  001482  00                 	db	0
   103  001483  00                 	db	0
   104  001484  00                 	db	0
   105  001485  00                 	db	0
   106  001486  00                 	db	0
   107  0000                     _ANSELD	set	3899
   108  0000                     _ANSELB	set	3897
   109  0000                     _ANSELA	set	3896
   110  0000                     _ADRES	set	4035
   111  0000                     _INTCONbits	set	4082
   112  0000                     _TMR0L	set	4054
   113  0000                     _TMR0H	set	4055
   114  0000                     _T0CON	set	4053
   115  0000                     _ADCON0bits	set	4034
   116  0000                     _ADCON2	set	4032
   117  0000                     _ADCON1	set	4033
   118  0000                     _ADCON0	set	4034
   119  0000                     _TXREG	set	4013
   120  0000                     _PIR1bits	set	3998
   121  0000                     _SPBRG1	set	4015
   122  0000                     _BAUDCON1	set	4024
   123  0000                     _TXSTA1	set	4012
   124  0000                     _RCSTA1	set	4011
   125  0000                     _TRISCbits	set	3988
   126  0000                     _TRISD	set	3989
   127  0000                     _LATD	set	3980
   128  0000                     _TRISB	set	3987
   129  0000                     _LATB	set	3978
   130  0000                     _TRISA	set	3986
   131  0000                     _LATA	set	3977
   132  0000                     _OSCCONbits	set	4051
   133  0000                     _OSCTUNE	set	3995
   134  0000                     _OSCCON2	set	4050
   135  0000                     _OSCCON	set	4051
   136                           
   137                           	psect	smallconst
   138  000600                     __psmallconst:
   139                           	opt callstack 0
   140  000600  00                 	db	0
   141  000601                     STR_2:
   142  000601  25                 	db	37
   143  000602  30                 	db	48	;'0'
   144  000603  32                 	db	50	;'2'
   145  000604  64                 	db	100	;'d'
   146  000605  20                 	db	32
   147  000606  3A                 	db	58	;':'
   148  000607  20                 	db	32
   149  000608  25                 	db	37
   150  000609  30                 	db	48	;'0'
   151  00060A  32                 	db	50	;'2'
   152  00060B  64                 	db	100	;'d'
   153  00060C  20                 	db	32
   154  00060D  3A                 	db	58	;':'
   155  00060E  20                 	db	32
   156  00060F  25                 	db	37
   157  000610  30                 	db	48	;'0'
   158  000611  32                 	db	50	;'2'
   159  000612  64                 	db	100	;'d'
   160  000613  20                 	db	32
   161  000614  00                 	db	0
   162  000615                     STR_1:
   163  000615  1B                 	db	27
   164  000616  5B                 	db	91	;'['
   165  000617  32                 	db	50	;'2'
   166  000618  4A                 	db	74	;'J'
   167  000619  20                 	db	32
   168  00061A  1B                 	db	27
   169  00061B  5B                 	db	91	;'['
   170  00061C  3F                 	db	63	;'?'
   171  00061D  32                 	db	50	;'2'
   172  00061E  35                 	db	53	;'5'
   173  00061F  6C                 	db	108	;'l'
   174  000620  20                 	db	32
   175  000621  1B                 	db	27
   176  000622  5B                 	db	91	;'['
   177  000623  48                 	db	72	;'H'
   178  000624  00                 	db	0
   179  000625                     STR_3:
   180  000625  25                 	db	37
   181  000626  73                 	db	115	;'s'
   182  000627  00                 	db	0
   183                           
   184                           ; #config settings
   185  000628  00                 	db	0	; dummy byte at the end
   186  0000                     
   187                           	psect	cinit
   188  001334                     __pcinit:
   189                           	opt callstack 0
   190  001334                     start_initialization:
   191                           	opt callstack 0
   192  001334                     __initialization:
   193                           	opt callstack 0
   194                           
   195                           ; Initialize objects allocated to BANK0 (27 bytes)
   196                           ; load TBLPTR registers with __pidataBANK0
   197  001334  0E6C               	movlw	low __pidataBANK0
   198  001336  6EF6               	movwf	tblptrl,c
   199  001338  0E14               	movlw	high __pidataBANK0
   200  00133A  6EF7               	movwf	tblptrh,c
   201  00133C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   202  00133E  6EF8               	movwf	tblptru,c
   203  001340  EE00  F088         	lfsr	0,__pdataBANK0
   204  001344  EE10 F01B          	lfsr	1,27
   205  001348                     copy_data0:
   206  001348  0009               	tblrd		*+
   207  00134A  CFF5 FFEE          	movff	tablat,postinc0
   208  00134E  50E5               	movf	postdec1,w,c
   209  001350  50E1               	movf	fsr1l,w,c
   210  001352  E1FA               	bnz	copy_data0
   211                           
   212                           ; Clear objects allocated to BANK0 (40 bytes)
   213  001354  EE00  F060         	lfsr	0,__pbssBANK0
   214  001358  0E28               	movlw	40
   215  00135A                     clear_0:
   216  00135A  6AEE               	clrf	postinc0,c
   217  00135C  06E8               	decf	wreg,f,c
   218  00135E  E1FD               	bnz	clear_0
   219  001360                     end_of_initialization:
   220                           	opt callstack 0
   221  001360                     __end_of__initialization:
   222                           	opt callstack 0
   223  001360  0E00               	movlw	low (__Lmediumconst shr (0+16))
   224  001362  6EF8               	movwf	tblptru,c
   225  001364  0100               	movlb	0
   226  001366  EF4C  F008         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssBANK0
   229  000060                     __pbssBANK0:
   230                           	opt callstack 0
   231  000060                     _nout:
   232                           	opt callstack 0
   233  000060                     	ds	2
   234  000062                     _width:
   235                           	opt callstack 0
   236  000062                     	ds	2
   237  000064                     _prec:
   238                           	opt callstack 0
   239  000064                     	ds	2
   240  000066                     _flags:
   241                           	opt callstack 0
   242  000066                     	ds	2
   243  000068                     _dbuf:
   244                           	opt callstack 0
   245  000068                     	ds	32
   246                           
   247                           	psect	dataBANK0
   248  000088                     __pdataBANK0:
   249                           	opt callstack 0
   250  000088                     stoa@F1139:
   251                           	opt callstack 0
   252  000088                     	ds	7
   253  00008F                     _AMPM:
   254                           	opt callstack 0
   255  00008F                     	ds	20
   256                           
   257                           	psect	cstackBANK0
   258  0000A3                     __pcstackBANK0:
   259                           	opt callstack 0
   260  0000A3                     vfprintf@cfmt:
   261                           	opt callstack 0
   262                           
   263                           ; 2 bytes @ 0x0
   264  0000A3                     	ds	2
   265  0000A5                     ?_printf:
   266                           	opt callstack 0
   267  0000A5                     printf@fmt:
   268                           	opt callstack 0
   269                           
   270                           ; 2 bytes @ 0x2
   271  0000A5                     	ds	10
   272  0000AF                     printf@ap:
   273                           	opt callstack 0
   274                           
   275                           ; 2 bytes @ 0xC
   276  0000AF                     	ds	2
   277  0000B1                     main@myClock:
   278                           	opt callstack 0
   279                           
   280                           ; 5 bytes @ 0xE
   281  0000B1                     	ds	5
   282                           
   283                           	psect	cstackCOMRAM
   284  000001                     __pcstackCOMRAM:
   285                           	opt callstack 0
   286  000001                     ?_strlen:
   287                           	opt callstack 0
   288  000001                     ?_isdigit:
   289                           	opt callstack 0
   290  000001                     ?_isspace:
   291                           	opt callstack 0
   292  000001                     ?___wmul:
   293                           	opt callstack 0
   294  000001                     ?___aodiv:
   295                           	opt callstack 0
   296  000001                     ?___aomod:
   297                           	opt callstack 0
   298  000001                     putch@data:
   299                           	opt callstack 0
   300  000001                     ___wmul@multiplier:
   301                           	opt callstack 0
   302  000001                     isdigit@c:
   303                           	opt callstack 0
   304  000001                     isspace@c:
   305                           	opt callstack 0
   306  000001                     strlen@s:
   307                           	opt callstack 0
   308  000001                     ___aodiv@dividend:
   309                           	opt callstack 0
   310  000001                     ___aomod@dividend:
   311                           	opt callstack 0
   312                           
   313                           ; 8 bytes @ 0x0
   314  000001                     	ds	1
   315  000002                     fputc@c:
   316                           	opt callstack 0
   317                           
   318                           ; 2 bytes @ 0x1
   319  000002                     	ds	1
   320  000003                     ??_isdigit:
   321  000003                     ??_isspace:
   322  000003                     ___wmul@multiplicand:
   323                           	opt callstack 0
   324  000003                     strlen@a:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0x2
   328  000003                     	ds	1
   329  000004                     fputc@fp:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x3
   333  000004                     	ds	1
   334  000005                     ___wmul@product:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0x4
   338  000005                     	ds	1
   339  000006                     ??_fputc:
   340                           
   341                           ; 1 bytes @ 0x5
   342  000006                     	ds	1
   343  000007                     _isspace$902:
   344                           	opt callstack 0
   345                           
   346                           ; 1 bytes @ 0x6
   347  000007                     	ds	1
   348  000008                     ?_atoi:
   349                           	opt callstack 0
   350  000008                     atoi@s:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0x7
   354  000008                     	ds	1
   355  000009                     ___aodiv@divisor:
   356                           	opt callstack 0
   357  000009                     ___aomod@divisor:
   358                           	opt callstack 0
   359                           
   360                           ; 8 bytes @ 0x8
   361  000009                     	ds	1
   362  00000A                     ??_atoi:
   363                           
   364                           ; 1 bytes @ 0x9
   365  00000A                     	ds	1
   366  00000B                     ?_stoa:
   367                           	opt callstack 0
   368  00000B                     stoa@fp:
   369                           	opt callstack 0
   370  00000B                     fputs@s:
   371                           	opt callstack 0
   372                           
   373                           ; 2 bytes @ 0xA
   374  00000B                     	ds	2
   375  00000D                     stoa@s:
   376                           	opt callstack 0
   377  00000D                     fputs@fp:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0xC
   381  00000D                     	ds	1
   382  00000E                     atoi@neg:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0xD
   386  00000E                     	ds	1
   387  00000F                     ??_stoa:
   388  00000F                     fputs@c:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0xE
   392  00000F                     	ds	1
   393  000010                     _atoi$884:
   394                           	opt callstack 0
   395  000010                     fputs@i:
   396                           	opt callstack 0
   397  000010                     stoa@nuls:
   398                           	opt callstack 0
   399                           
   400                           ; 7 bytes @ 0xF
   401  000010                     	ds	1
   402  000011                     ___aodiv@counter:
   403                           	opt callstack 0
   404  000011                     ___aomod@counter:
   405                           	opt callstack 0
   406                           
   407                           ; 1 bytes @ 0x10
   408  000011                     	ds	1
   409  000012                     ?_pad:
   410                           	opt callstack 0
   411  000012                     ___aodiv@sign:
   412                           	opt callstack 0
   413  000012                     ___aomod@sign:
   414                           	opt callstack 0
   415  000012                     pad@fp:
   416                           	opt callstack 0
   417  000012                     _atoi$886:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x11
   421  000012                     	ds	1
   422  000013                     ?_abs:
   423                           	opt callstack 0
   424  000013                     abs@a:
   425                           	opt callstack 0
   426  000013                     ___aodiv@quotient:
   427                           	opt callstack 0
   428                           
   429                           ; 8 bytes @ 0x12
   430  000013                     	ds	1
   431  000014                     _atoi$885:
   432                           	opt callstack 0
   433  000014                     pad@buf:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x13
   437  000014                     	ds	1
   438  000015                     ??_abs:
   439  000015                     atoi@n:
   440                           	opt callstack 0
   441                           
   442                           ; 2 bytes @ 0x14
   443  000015                     	ds	1
   444  000016                     pad@p:
   445                           	opt callstack 0
   446                           
   447                           ; 2 bytes @ 0x15
   448  000016                     	ds	1
   449  000017                     stoa@i:
   450                           	opt callstack 0
   451                           
   452                           ; 2 bytes @ 0x16
   453  000017                     	ds	1
   454  000018                     ??_pad:
   455                           
   456                           ; 1 bytes @ 0x17
   457  000018                     	ds	1
   458  000019                     pad@i:
   459                           	opt callstack 0
   460  000019                     stoa@w:
   461                           	opt callstack 0
   462                           
   463                           ; 2 bytes @ 0x18
   464  000019                     	ds	2
   465  00001B                     pad@w:
   466                           	opt callstack 0
   467  00001B                     stoa@cp:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x1A
   471  00001B                     	ds	2
   472  00001D                     ?_dtoa:
   473                           	opt callstack 0
   474  00001D                     dtoa@fp:
   475                           	opt callstack 0
   476  00001D                     stoa@p:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x1C
   480  00001D                     	ds	2
   481  00001F                     stoa@l:
   482                           	opt callstack 0
   483  00001F                     dtoa@d:
   484                           	opt callstack 0
   485                           
   486                           ; 8 bytes @ 0x1E
   487  00001F                     	ds	8
   488  000027                     ??_dtoa:
   489                           
   490                           ; 1 bytes @ 0x26
   491  000027                     	ds	8
   492  00002F                     _dtoa$400:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x2E
   496  00002F                     	ds	2
   497  000031                     dtoa@p:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x30
   501  000031                     	ds	2
   502  000033                     dtoa@w:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x32
   506  000033                     	ds	2
   507  000035                     dtoa@s:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x34
   511  000035                     	ds	2
   512  000037                     dtoa@n:
   513                           	opt callstack 0
   514                           
   515                           ; 8 bytes @ 0x36
   516  000037                     	ds	8
   517  00003F                     dtoa@i:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x3E
   521  00003F                     	ds	2
   522  000041                     ?_vfpfcnvrt:
   523                           	opt callstack 0
   524  000041                     vfpfcnvrt@fp:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x40
   528  000041                     	ds	2
   529  000043                     vfpfcnvrt@fmt:
   530                           	opt callstack 0
   531                           
   532                           ; 2 bytes @ 0x42
   533  000043                     	ds	2
   534  000045                     vfpfcnvrt@ap:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x44
   538  000045                     	ds	2
   539  000047                     ??_vfpfcnvrt:
   540                           
   541                           ; 1 bytes @ 0x46
   542  000047                     	ds	4
   543  00004B                     vfpfcnvrt@ll:
   544                           	opt callstack 0
   545                           
   546                           ; 8 bytes @ 0x4A
   547  00004B                     	ds	8
   548  000053                     vfpfcnvrt@cp:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x52
   552  000053                     	ds	2
   553  000055                     vfpfcnvrt@done:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x54
   557  000055                     	ds	2
   558  000057                     _vfpfcnvrt$426:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x56
   562  000057                     	ds	2
   563  000059                     ?_vfprintf:
   564                           	opt callstack 0
   565  000059                     vfprintf@fp:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0x58
   569  000059                     	ds	2
   570  00005B                     vfprintf@fmt:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x5A
   574  00005B                     	ds	2
   575  00005D                     vfprintf@ap:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x5C
   579  00005D                     	ds	2
   580  00005F                     
   581                           ; 1 bytes @ 0x5E
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 69 in file "main.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  myClock         5   14[BANK0 ] struct clock
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   601 ;;      Params:         0       0       0       0       0       0       0
   602 ;;      Locals:         0       5       0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0
   604 ;;      Totals:         0       5       0       0       0       0       0
   605 ;;Total ram usage:        5 bytes
   606 ;; Hardware stack levels required when called:    8
   607 ;; This function calls:
   608 ;;		_printf
   609 ;;		_systemInitialize
   610 ;; This function is called by:
   611 ;;		Startup code after reset
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text0
   616  001098                     __ptext0:
   617                           	opt callstack 0
   618  001098                     _main:
   619                           	opt callstack 23
   620                           
   621                           ;main.c: 71:     systemInitialize();
   622                           
   623                           ;incstack = 0
   624  001098  EC44  F00A         	call	_systemInitialize	;wreg free
   625                           
   626                           ;main.c: 72:     struct clock myClock;;main.c: 75:     myClock.seconds = 50;
   627  00109C  0E32               	movlw	50
   628  00109E  0100               	movlb	0	; () banked
   629  0010A0  6FB1               	movwf	main@myClock& (0+255),b
   630                           
   631                           ; BSR set to: 0
   632                           ;main.c: 76:     myClock.minutes = 59;
   633  0010A2  0E3B               	movlw	59
   634  0010A4  6FB2               	movwf	(main@myClock+1)& (0+255),b
   635                           
   636                           ; BSR set to: 0
   637                           ;main.c: 77:     myClock.hours = 11;
   638  0010A6  0E0B               	movlw	11
   639  0010A8  6FB3               	movwf	(main@myClock+2)& (0+255),b
   640                           
   641                           ; BSR set to: 0
   642                           ;main.c: 78:     myClock.isPM = 0;
   643  0010AA  0E00               	movlw	0
   644  0010AC  6FB4               	movwf	(main@myClock+3)& (0+255),b
   645                           
   646                           ; BSR set to: 0
   647                           ;main.c: 79:     myClock.is24 = 0;
   648  0010AE  0E00               	movlw	0
   649  0010B0  6FB5               	movwf	(main@myClock+4)& (0+255),b
   650  0010B2                     l2019:
   651                           
   652                           ; BSR set to: 0
   653                           ;main.c: 82:     {;main.c: 83:         printf("\33[2J \33[?25l \33[H");
   654  0010B2  0E15               	movlw	low STR_1
   655  0010B4  6FA5               	movwf	printf@fmt& (0+255),b
   656  0010B6  0E06               	movlw	high STR_1
   657  0010B8  6FA6               	movwf	(printf@fmt+1)& (0+255),b
   658  0010BA  EC0F  F00A         	call	_printf	;wreg free
   659                           
   660                           ;main.c: 85:         printf("%02d : %02d : %02d ",myClock.hours,myClock.minutes,myClock.
      +                          seconds);
   661  0010BE  0E01               	movlw	low STR_2
   662  0010C0  0100               	movlb	0	; () banked
   663  0010C2  6FA5               	movwf	printf@fmt& (0+255),b
   664  0010C4  0E06               	movlw	high STR_2
   665  0010C6  6FA6               	movwf	(printf@fmt+1)& (0+255),b
   666  0010C8  C0B3  F0A7         	movff	main@myClock+2,?_printf+2
   667  0010CC  6BA8               	clrf	(?_printf+3)& (0+255),b
   668  0010CE  C0B2  F0A9         	movff	main@myClock+1,?_printf+4
   669  0010D2  6BAA               	clrf	(?_printf+5)& (0+255),b
   670  0010D4  C0B1  F0AB         	movff	main@myClock,?_printf+6
   671  0010D8  6BAC               	clrf	(?_printf+7)& (0+255),b
   672  0010DA  EC0F  F00A         	call	_printf	;wreg free
   673                           
   674                           ;main.c: 86:         if(!myClock.is24)
   675  0010DE  0100               	movlb	0	; () banked
   676  0010E0  51B5               	movf	(main@myClock+4)& (0+255),w,b
   677  0010E2  A4D8               	btfss	status,2,c
   678  0010E4  D00E               	goto	l108
   679                           
   680                           ; BSR set to: 0
   681                           ;main.c: 87:         {;main.c: 88:             printf("%s",AMPM[myClock.isPM]);
   682  0010E6  0E25               	movlw	low STR_3
   683  0010E8  6FA5               	movwf	printf@fmt& (0+255),b
   684  0010EA  0E06               	movlw	high STR_3
   685  0010EC  6FA6               	movwf	(printf@fmt+1)& (0+255),b
   686  0010EE  51B4               	movf	(main@myClock+3)& (0+255),w,b
   687  0010F0  0D0A               	mullw	10
   688  0010F2  0E8F               	movlw	low _AMPM
   689  0010F4  24F3               	addwf	prodl,w,c
   690  0010F6  6FA7               	movwf	(?_printf+2)& (0+255),b
   691  0010F8  0E00               	movlw	high _AMPM
   692  0010FA  20F4               	addwfc	prodh,w,c
   693  0010FC  6FA8               	movwf	(?_printf+3)& (0+255),b
   694  0010FE  EC0F  F00A         	call	_printf	;wreg free
   695  001102                     l108:
   696  001102  A4F2               	btfss	4082,2,c	;volatile
   697  001104  D7FE               	goto	l108
   698                           
   699                           ;main.c: 92:         LATB^=0x08;
   700  001106  0E08               	movlw	8
   701  001108  1A8A               	xorwf	3978,f,c	;volatile
   702                           
   703                           ;main.c: 93:         myClock.seconds++;
   704  00110A  0100               	movlb	0	; () banked
   705  00110C  2BB1               	incf	main@myClock& (0+255),f,b
   706                           
   707                           ; BSR set to: 0
   708                           ;main.c: 94:         if(myClock.seconds==60)
   709  00110E  0E3C               	movlw	60
   710  001110  19B1               	xorwf	main@myClock& (0+255),w,b
   711  001112  A4D8               	btfss	status,2,c
   712  001114  D020               	goto	l2059
   713                           
   714                           ; BSR set to: 0
   715                           ;main.c: 95:         {;main.c: 96:             myClock.seconds = 0;
   716  001116  0E00               	movlw	0
   717  001118  6FB1               	movwf	main@myClock& (0+255),b
   718                           
   719                           ; BSR set to: 0
   720                           ;main.c: 97:             myClock.minutes++;
   721  00111A  2BB2               	incf	(main@myClock+1)& (0+255),f,b
   722                           
   723                           ; BSR set to: 0
   724                           ;main.c: 98:             if(myClock.minutes==60)
   725  00111C  0E3C               	movlw	60
   726  00111E  19B2               	xorwf	(main@myClock+1)& (0+255),w,b
   727  001120  A4D8               	btfss	status,2,c
   728  001122  D019               	goto	l2059
   729                           
   730                           ; BSR set to: 0
   731                           ;main.c: 99:             {;main.c: 100:                 myClock.minutes=0;
   732  001124  0E00               	movlw	0
   733  001126  6FB2               	movwf	(main@myClock+1)& (0+255),b
   734                           
   735                           ; BSR set to: 0
   736                           ;main.c: 101:                 myClock.hours++;
   737  001128  2BB3               	incf	(main@myClock+2)& (0+255),f,b
   738                           
   739                           ; BSR set to: 0
   740                           ;main.c: 102:                 if((myClock.hours>12)&(!myClock.is24))
   741  00112A  0E0C               	movlw	12
   742  00112C  65B3               	cpfsgt	(main@myClock+2)& (0+255),b
   743  00112E  D005               	goto	l2049
   744                           
   745                           ; BSR set to: 0
   746  001130  51B5               	movf	(main@myClock+4)& (0+255),w,b
   747  001132  A4D8               	btfss	status,2,c
   748  001134  D002               	goto	l2049
   749                           
   750                           ; BSR set to: 0
   751                           ;main.c: 103:                 {;main.c: 104:                     myClock.hours=1;
   752  001136  0E01               	movlw	1
   753  001138  D007               	goto	L1
   754  00113A                     l2049:
   755                           
   756                           ; BSR set to: 0
   757  00113A  51B5               	movf	(main@myClock+4)& (0+255),w,b
   758  00113C  B4D8               	btfsc	status,2,c
   759  00113E  D005               	goto	l2055
   760                           
   761                           ; BSR set to: 0
   762                           ;main.c: 107:                 {;main.c: 108:                     if(myClock.hours>23)
   763  001140  0E17               	movlw	23
   764  001142  65B3               	cpfsgt	(main@myClock+2)& (0+255),b
   765  001144  D002               	goto	l2055
   766                           
   767                           ; BSR set to: 0
   768                           ;main.c: 109:                     {;main.c: 110:                         myClock.hours =
      +                           0;
   769  001146  0E00               	movlw	0
   770  001148                     L1:
   771  001148  6FB3               	movwf	(main@myClock+2)& (0+255),b
   772  00114A                     l2055:
   773                           
   774                           ; BSR set to: 0
   775                           ;main.c: 113:                 if(myClock.hours==12)
   776  00114A  0E0C               	movlw	12
   777  00114C  19B3               	xorwf	(main@myClock+2)& (0+255),w,b
   778  00114E  A4D8               	btfss	status,2,c
   779  001150  D002               	goto	l2059
   780                           
   781                           ; BSR set to: 0
   782                           ;main.c: 114:                 {;main.c: 115:                         myClock.isPM^=1;
   783  001152  0E01               	movlw	1
   784  001154  1BB4               	xorwf	(main@myClock+3)& (0+255),f,b
   785  001156                     l2059:
   786                           
   787                           ; BSR set to: 0
   788                           ;main.c: 120:         INTCONbits.TMR0IF = 0;
   789  001156  94F2               	bcf	4082,2,c	;volatile
   790                           
   791                           ; BSR set to: 0
   792                           ;main.c: 121:         TMR0H=0x0B;
   793  001158  0E0B               	movlw	11
   794  00115A  6ED7               	movwf	4055,c	;volatile
   795                           
   796                           ; BSR set to: 0
   797                           ;main.c: 122:         TMR0L=0xDC;
   798  00115C  0EDC               	movlw	220
   799  00115E  6ED6               	movwf	4054,c	;volatile
   800  001160  D7A8               	goto	l2019
   801  001162                     __end_of_main:
   802                           	opt callstack 0
   803                           
   804 ;; *************** function _systemInitialize *****************
   805 ;; Defined at:
   806 ;;		line 57 in file "main.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   820 ;;      Params:         0       0       0       0       0       0       0
   821 ;;      Locals:         0       0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0
   823 ;;      Totals:         0       0       0       0       0       0       0
   824 ;;Total ram usage:        0 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    1
   827 ;; This function calls:
   828 ;;		_portConfig
   829 ;;		_serialComm
   830 ;;		_set_osc_p18f45k22_4MHz
   831 ;;		_timer0Config
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text1
   838  001488                     __ptext1:
   839                           	opt callstack 0
   840  001488                     _systemInitialize:
   841                           	opt callstack 29
   842                           
   843                           ;main.c: 59:  set_osc_p18f45k22_4MHz();
   844                           
   845                           ; BSR set to: 0
   846                           ;incstack = 0
   847  001488  EC4D  F00A         	call	_set_osc_p18f45k22_4MHz	;wreg free
   848                           
   849                           ;main.c: 60:  portConfig();
   850  00148C  ECFB  F009         	call	_portConfig	;wreg free
   851                           
   852                           ;main.c: 61:  serialComm();
   853  001490  EC56  F00A         	call	_serialComm	;wreg free
   854                           
   855                           ;main.c: 62:     timer0Config();
   856  001494  EC5F  F00A         	call	_timer0Config	;wreg free
   857  001498  0012               	return		;funcret
   858  00149A                     __end_of_systemInitialize:
   859                           	opt callstack 0
   860                           
   861 ;; *************** function _timer0Config *****************
   862 ;; Defined at:
   863 ;;		line 159 in file "./myConfig.h"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   877 ;;      Params:         0       0       0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0
   880 ;;      Totals:         0       0       0       0       0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_systemInitialize
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text2
   891  0014BE                     __ptext2:
   892                           	opt callstack 0
   893  0014BE                     _timer0Config:
   894                           	opt callstack 29
   895                           
   896                           ;./myConfig.h: 161:     T0CON = 0x93;
   897                           
   898                           ;incstack = 0
   899  0014BE  0E93               	movlw	147
   900  0014C0  6ED5               	movwf	4053,c	;volatile
   901                           
   902                           ;./myConfig.h: 162:     TMR0H = 0x0B;
   903  0014C2  0E0B               	movlw	11
   904  0014C4  6ED7               	movwf	4055,c	;volatile
   905                           
   906                           ;./myConfig.h: 163:     TMR0L = 0xDC;
   907  0014C6  0EDC               	movlw	220
   908  0014C8  6ED6               	movwf	4054,c	;volatile
   909                           
   910                           ;./myConfig.h: 164:     INTCONbits.TMR0IF = 0;
   911  0014CA  94F2               	bcf	4082,2,c	;volatile
   912  0014CC  0012               	return		;funcret
   913  0014CE                     __end_of_timer0Config:
   914                           	opt callstack 0
   915                           
   916 ;; *************** function _set_osc_p18f45k22_4MHz *****************
   917 ;; Defined at:
   918 ;;		line 27 in file "./myConfig.h"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   932 ;;      Params:         0       0       0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0
   935 ;;      Totals:         0       0       0       0       0       0       0
   936 ;;Total ram usage:        0 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_systemInitialize
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text3
   946  00149A                     __ptext3:
   947                           	opt callstack 0
   948  00149A                     _set_osc_p18f45k22_4MHz:
   949                           	opt callstack 29
   950                           
   951                           ;./myConfig.h: 29:  OSCCON = 0x52;
   952                           
   953                           ;incstack = 0
   954  00149A  0E52               	movlw	82
   955  00149C  6ED3               	movwf	4051,c	;volatile
   956                           
   957                           ;./myConfig.h: 30:  OSCCON2 = 0x04;
   958  00149E  0E04               	movlw	4
   959  0014A0  6ED2               	movwf	4050,c	;volatile
   960                           
   961                           ;./myConfig.h: 31:  OSCTUNE = 0x80;
   962  0014A2  0E80               	movlw	128
   963  0014A4  6E9B               	movwf	3995,c	;volatile
   964  0014A6                     l63:
   965  0014A6  B4D3               	btfsc	4051,2,c	;volatile
   966  0014A8  0012               	return	
   967  0014AA  D7FD               	goto	l63
   968  0014AC                     __end_of_set_osc_p18f45k22_4MHz:
   969                           	opt callstack 0
   970                           
   971 ;; *************** function _serialComm *****************
   972 ;; Defined at:
   973 ;;		line 94 in file "./myConfig.h"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   987 ;;      Params:         0       0       0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0
   990 ;;      Totals:         0       0       0       0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		_systemInitialize
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text4
  1001  0014AC                     __ptext4:
  1002                           	opt callstack 0
  1003  0014AC                     _serialComm:
  1004                           	opt callstack 29
  1005                           
  1006                           ;./myConfig.h: 96:  RCSTA1 = 0x90;
  1007                           
  1008                           ;incstack = 0
  1009  0014AC  0E90               	movlw	144
  1010  0014AE  6EAB               	movwf	4011,c	;volatile
  1011                           
  1012                           ;./myConfig.h: 97:  TXSTA1 = 0x26;
  1013  0014B0  0E26               	movlw	38
  1014  0014B2  6EAC               	movwf	4012,c	;volatile
  1015                           
  1016                           ;./myConfig.h: 98:  BAUDCON1 = 0x40;
  1017  0014B4  0E40               	movlw	64
  1018  0014B6  6EB8               	movwf	4024,c	;volatile
  1019                           
  1020                           ;./myConfig.h: 100:     SPBRG1 = 25;
  1021  0014B8  0E19               	movlw	25
  1022  0014BA  6EAF               	movwf	4015,c	;volatile
  1023  0014BC  0012               	return		;funcret
  1024  0014BE                     __end_of_serialComm:
  1025                           	opt callstack 0
  1026                           
  1027 ;; *************** function _portConfig *****************
  1028 ;; Defined at:
  1029 ;;		line 64 in file "./myConfig.h"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1043 ;;      Params:         0       0       0       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0
  1046 ;;      Totals:         0       0       0       0       0       0       0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_systemInitialize
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text5
  1057  0013F6                     __ptext5:
  1058                           	opt callstack 0
  1059  0013F6                     _portConfig:
  1060                           	opt callstack 29
  1061                           
  1062                           ;./myConfig.h: 67:  ANSELA = 0x01;
  1063                           
  1064                           ;incstack = 0
  1065  0013F6  0E01               	movlw	1
  1066  0013F8  010F               	movlb	15	; () banked
  1067  0013FA  6F38               	movwf	56,b	;volatile
  1068                           
  1069                           ;./myConfig.h: 68:  LATA = 0x00;
  1070  0013FC  0E00               	movlw	0
  1071  0013FE  6E89               	movwf	3977,c	;volatile
  1072                           
  1073                           ; BSR set to: 15
  1074                           ;./myConfig.h: 69:  TRISA = 0xFF;
  1075  001400  6892               	setf	3986,c	;volatile
  1076                           
  1077                           ;./myConfig.h: 71:  ANSELB = 0x00;
  1078  001402  0E00               	movlw	0
  1079  001404  6F39               	movwf	57,b	;volatile
  1080                           
  1081                           ;./myConfig.h: 72:  LATB = 0x00;
  1082  001406  0E00               	movlw	0
  1083  001408  6E8A               	movwf	3978,c	;volatile
  1084                           
  1085                           ;./myConfig.h: 73:  TRISB = 0xF7;
  1086  00140A  0EF7               	movlw	247
  1087  00140C  6E93               	movwf	3987,c	;volatile
  1088                           
  1089                           ;./myConfig.h: 75:  ANSELD = 0x00;
  1090  00140E  0E00               	movlw	0
  1091  001410  6F3B               	movwf	59,b	;volatile
  1092                           
  1093                           ;./myConfig.h: 76:  LATD = 0x00;
  1094  001412  0E00               	movlw	0
  1095  001414  6E8C               	movwf	3980,c	;volatile
  1096                           
  1097                           ; BSR set to: 15
  1098                           ;./myConfig.h: 77:  TRISD = 0xFF;
  1099  001416  6895               	setf	3989,c	;volatile
  1100                           
  1101                           ; BSR set to: 15
  1102                           ;./myConfig.h: 80:  TRISCbits.TRISC6 = 1;
  1103  001418  8C94               	bsf	3988,6,c	;volatile
  1104                           
  1105                           ; BSR set to: 15
  1106                           ;./myConfig.h: 81:  TRISCbits.TRISC7 = 1;
  1107  00141A  8E94               	bsf	3988,7,c	;volatile
  1108                           
  1109                           ; BSR set to: 15
  1110  00141C  0012               	return		;funcret
  1111  00141E                     __end_of_portConfig:
  1112                           	opt callstack 0
  1113                           
  1114 ;; *************** function _printf *****************
  1115 ;; Defined at:
  1116 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1119 ;;		 -> STR_3(3), STR_2(20), STR_1(16), 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  ap              2   12[BANK0 ] PTR void [1]
  1122 ;;		 -> ?_printf(2), 
  1123 ;;  ret             2    0        int 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2    2[BANK0 ] int 
  1126 ;; Registers used:
  1127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1133 ;;      Params:         0       8       0       0       0       0       0
  1134 ;;      Locals:         0       4       0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0
  1136 ;;      Totals:         0      12       0       0       0       0       0
  1137 ;;Total ram usage:       12 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    7
  1140 ;; This function calls:
  1141 ;;		_vfprintf
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text6
  1148  00141E                     __ptext6:
  1149                           	opt callstack 0
  1150  00141E                     _printf:
  1151                           	opt callstack 23
  1152                           
  1153                           ; BSR set to: 15
  1154                           ;incstack = 0
  1155  00141E  0EA7               	movlw	low (?_printf+2)
  1156  001420  0100               	movlb	0	; () banked
  1157  001422  6FAF               	movwf	printf@ap& (0+255),b
  1158  001424  0E00               	movlw	high (?_printf+2)
  1159  001426  6FB0               	movwf	(printf@ap+1)& (0+255),b
  1160                           
  1161                           ; BSR set to: 0
  1162  001428  0E00               	movlw	0
  1163  00142A  6E59               	movwf	vfprintf@fp,c
  1164  00142C  0E00               	movlw	0
  1165  00142E  6E5A               	movwf	vfprintf@fp+1,c
  1166  001430  C0A5  F05B         	movff	printf@fmt,vfprintf@fmt
  1167  001434  C0A6  F05C         	movff	printf@fmt+1,vfprintf@fmt+1
  1168  001438  0EAF               	movlw	low printf@ap
  1169  00143A  6E5D               	movwf	vfprintf@ap,c
  1170  00143C  0E00               	movlw	high printf@ap
  1171  00143E  6E5E               	movwf	vfprintf@ap+1,c
  1172  001440  EC34  F009         	call	_vfprintf	;wreg free
  1173  001444  0012               	return		;funcret
  1174  001446                     __end_of_printf:
  1175                           	opt callstack 0
  1176                           
  1177 ;; *************** function _vfprintf *****************
  1178 ;; Defined at:
  1179 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  fp              2   88[COMRAM] PTR struct _IO_FILE
  1182 ;;		 -> NULL(0), 
  1183 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
  1184 ;;		 -> STR_3(3), STR_2(20), STR_1(16), 
  1185 ;;  ap              2   92[COMRAM] PTR PTR void 
  1186 ;;		 -> printf@ap(2), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
  1189 ;;		 -> STR_3(3), STR_2(20), STR_1(16), 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  2   88[COMRAM] int 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1199 ;;      Params:         6       0       0       0       0       0       0
  1200 ;;      Locals:         0       2       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0
  1202 ;;      Totals:         6       2       0       0       0       0       0
  1203 ;;Total ram usage:        8 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    6
  1206 ;; This function calls:
  1207 ;;		_vfpfcnvrt
  1208 ;; This function is called by:
  1209 ;;		_printf
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text7
  1214  001268                     __ptext7:
  1215                           	opt callstack 0
  1216  001268                     _vfprintf:
  1217                           	opt callstack 23
  1218                           
  1219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1220                           
  1221                           ;incstack = 0
  1222  001268  C05B  F0A3         	movff	vfprintf@fmt,vfprintf@cfmt
  1223  00126C  C05C  F0A4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1224                           
  1225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1226  001270  0E00               	movlw	0
  1227  001272  0100               	movlb	0	; () banked
  1228  001274  6F61               	movwf	(_nout+1)& (0+255),b
  1229  001276  0E00               	movlw	0
  1230  001278  6F60               	movwf	_nout& (0+255),b
  1231                           
  1232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1233  00127A  D013               	goto	l1997
  1234  00127C                     l1995:
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1238  00127C  C059  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1239  001280  C05A  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1240  001284  0EA3               	movlw	low vfprintf@cfmt
  1241  001286  6E43               	movwf	vfpfcnvrt@fmt,c
  1242  001288  0E00               	movlw	high vfprintf@cfmt
  1243  00128A  6E44               	movwf	vfpfcnvrt@fmt+1,c
  1244  00128C  C05D  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1245  001290  C05E  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1246  001294  EC15  F003         	call	_vfpfcnvrt	;wreg free
  1247  001298  5041               	movf	?_vfpfcnvrt,w,c
  1248  00129A  0100               	movlb	0	; () banked
  1249  00129C  2760               	addwf	_nout& (0+255),f,b
  1250  00129E  5042               	movf	?_vfpfcnvrt+1,w,c
  1251  0012A0  2361               	addwfc	(_nout+1)& (0+255),f,b
  1252  0012A2                     l1997:
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1256  0012A2  C0A3  FFF6         	movff	vfprintf@cfmt,tblptrl
  1257  0012A6  C0A4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1258  0012AA                     	if	0	;tblptru may be non-zero
  1259  0012AA                     	endif
  1260  0012AA                     	if	0	;tblptru may be non-zero
  1261  0012AA                     	endif
  1262  0012AA  0008               	tblrd		*
  1263  0012AC  50F5               	movf	tablat,w,c
  1264  0012AE  0900               	iorlw	0
  1265  0012B0  A4D8               	btfss	status,2,c
  1266  0012B2  D7E4               	goto	l1995
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1270  0012B4  C060  F059         	movff	_nout,?_vfprintf
  1271  0012B8  C061  F05A         	movff	_nout+1,?_vfprintf+1
  1272                           
  1273                           ; BSR set to: 0
  1274  0012BC  0012               	return		;funcret
  1275  0012BE                     __end_of_vfprintf:
  1276                           	opt callstack 0
  1277                           
  1278 ;; *************** function _vfpfcnvrt *****************
  1279 ;; Defined at:
  1280 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1283 ;;		 -> NULL(0), 
  1284 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1285 ;;		 -> vfprintf@cfmt(2), 
  1286 ;;  ap              2   68[COMRAM] PTR PTR void 
  1287 ;;		 -> printf@ap(2), 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  ll              8   74[COMRAM] long long 
  1290 ;;  llu             8    0        unsigned long long 
  1291 ;;  f               4    0        unsigned long long 
  1292 ;;  vp              3    0        PTR void 
  1293 ;;  ct              3    0        unsigned char [3]
  1294 ;;  done            2   84[COMRAM] int 
  1295 ;;  cp              2   82[COMRAM] PTR unsigned char 
  1296 ;;		 -> ?_printf(2), AMPM(20), 
  1297 ;;  i               2    0        int 
  1298 ;;  c               1    0        unsigned char 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  2   64[COMRAM] int 
  1301 ;; Registers used:
  1302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1308 ;;      Params:         6       0       0       0       0       0       0
  1309 ;;      Locals:        14       0       0       0       0       0       0
  1310 ;;      Temps:          4       0       0       0       0       0       0
  1311 ;;      Totals:        24       0       0       0       0       0       0
  1312 ;;Total ram usage:       24 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    5
  1315 ;; This function calls:
  1316 ;;		_atoi
  1317 ;;		_dtoa
  1318 ;;		_fputc
  1319 ;;		_isdigit
  1320 ;;		_stoa
  1321 ;; This function is called by:
  1322 ;;		_vfprintf
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text8
  1327  00062A                     __ptext8:
  1328                           	opt callstack 0
  1329  00062A                     _vfpfcnvrt:
  1330                           	opt callstack 23
  1331                           
  1332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;incstack = 0
  1336  00062A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1337  00062E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1338  000632  CFDE FFF6          	movff	postinc2,tblptrl
  1339  000636  CFDD FFF7          	movff	postdec2,tblptrh
  1340  00063A                     	if	0	;tblptru may be non-zero
  1341  00063A                     	endif
  1342  00063A                     	if	0	;tblptru may be non-zero
  1343  00063A                     	endif
  1344  00063A  0008               	tblrd		*
  1345  00063C  50F5               	movf	tablat,w,c
  1346  00063E  0A25               	xorlw	37
  1347  000640  A4D8               	btfss	status,2,c
  1348  000642  D181               	goto	l1959
  1349                           
  1350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1351  000644  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1352  000648  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1353  00064C  2ADE               	incf	postinc2,f,c
  1354  00064E  0E00               	movlw	0
  1355  000650  22DD               	addwfc	postdec2,f,c
  1356                           
  1357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1358  000652  0E00               	movlw	0
  1359  000654  0100               	movlb	0	; () banked
  1360  000656  6F63               	movwf	(_width+1)& (0+255),b
  1361  000658  0E00               	movlw	0
  1362  00065A  6F62               	movwf	_width& (0+255),b
  1363  00065C  C062  F066         	movff	_width,_flags
  1364  000660  C063  F067         	movff	_width+1,_flags+1
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1368  000664  6964               	setf	_prec& (0+255),b
  1369  000666  6965               	setf	(_prec+1)& (0+255),b
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1373  000668  0E00               	movlw	0
  1374  00066A  6E56               	movwf	vfpfcnvrt@done+1,c
  1375  00066C  0E00               	movlw	0
  1376  00066E  D019               	goto	L2
  1377  000670                     l1877:
  1378                           
  1379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1380  000670  0100               	movlb	0	; () banked
  1381  000672  8166               	bsf	_flags& (0+255),0,b
  1382  000674                     l1879:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1386  000674  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1387  000678  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1388  00067C  2ADE               	incf	postinc2,f,c
  1389  00067E  0E00               	movlw	0
  1390  000680  22DD               	addwfc	postdec2,f,c
  1391                           
  1392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1393  000682  D032               	goto	l1903
  1394  000684                     l1881:
  1395                           
  1396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1397  000684  0100               	movlb	0	; () banked
  1398  000686  8366               	bsf	_flags& (0+255),1,b
  1399  000688  D7F5               	goto	l1879
  1400  00068A                     l1885:
  1401                           
  1402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1403  00068A  0100               	movlb	0	; () banked
  1404  00068C  8566               	bsf	_flags& (0+255),2,b
  1405  00068E  D7F2               	goto	l1879
  1406  000690                     l1889:
  1407                           
  1408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1409  000690  0100               	movlb	0	; () banked
  1410  000692  8766               	bsf	_flags& (0+255),3,b
  1411  000694  D7EF               	goto	l1879
  1412  000696                     l1893:
  1413                           
  1414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1415  000696  0100               	movlb	0	; () banked
  1416  000698  8966               	bsf	_flags& (0+255),4,b
  1417  00069A  D7EC               	goto	l1879
  1418  00069C                     l1897:
  1419                           
  1420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1421  00069C  0E00               	movlw	0
  1422  00069E  6E56               	movwf	vfpfcnvrt@done+1,c
  1423  0006A0  0E01               	movlw	1
  1424  0006A2                     L2:
  1425  0006A2  6E55               	movwf	vfpfcnvrt@done,c
  1426                           
  1427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1428  0006A4  D021               	goto	l1903
  1429  0006A6                     l1901:
  1430  0006A6  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1431  0006AA  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1432  0006AE  CFDE FFF6          	movff	postinc2,tblptrl
  1433  0006B2  CFDD FFF7          	movff	postdec2,tblptrh
  1434  0006B6                     	if	0	;tblptru may be non-zero
  1435  0006B6                     	endif
  1436  0006B6                     	if	0	;tblptru may be non-zero
  1437  0006B6                     	endif
  1438  0006B6  0008               	tblrd		*
  1439  0006B8  50F5               	movf	tablat,w,c
  1440  0006BA  6E47               	movwf	??_vfpfcnvrt& (0+255),c
  1441  0006BC  6A48               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1442                           
  1443                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1444                           ; Switch size 1, requested type "simple"
  1445                           ; Number of cases is 1, Range of values is 0 to 0
  1446                           ; switch strategies available:
  1447                           ; Name         Instructions Cycles
  1448                           ; simple_byte            4     3 (average)
  1449                           ;	Chosen strategy is simple_byte
  1450  0006BE  5048               	movf	??_vfpfcnvrt+1,w,c
  1451  0006C0  0A00               	xorlw	0	; case 0
  1452  0006C2  A4D8               	btfss	status,2,c
  1453  0006C4  D7EB               	goto	l1897
  1454                           
  1455                           ; Switch size 1, requested type "simple"
  1456                           ; Number of cases is 5, Range of values is 32 to 48
  1457                           ; switch strategies available:
  1458                           ; Name         Instructions Cycles
  1459                           ; simple_byte           16     9 (average)
  1460                           ;	Chosen strategy is simple_byte
  1461  0006C6  5047               	movf	??_vfpfcnvrt,w,c
  1462  0006C8  0A20               	xorlw	32	; case 32
  1463  0006CA  B4D8               	btfsc	status,2,c
  1464  0006CC  D7E1               	goto	l1889
  1465  0006CE  0A03               	xorlw	3	; case 35
  1466  0006D0  B4D8               	btfsc	status,2,c
  1467  0006D2  D7E1               	goto	l1893
  1468  0006D4  0A08               	xorlw	8	; case 43
  1469  0006D6  B4D8               	btfsc	status,2,c
  1470  0006D8  D7D8               	goto	l1885
  1471  0006DA  0A06               	xorlw	6	; case 45
  1472  0006DC  B4D8               	btfsc	status,2,c
  1473  0006DE  D7C8               	goto	l1877
  1474  0006E0  0A1D               	xorlw	29	; case 48
  1475  0006E2  B4D8               	btfsc	status,2,c
  1476  0006E4  D7CF               	goto	l1881
  1477  0006E6  D7DA               	goto	l1897
  1478  0006E8                     l1903:
  1479                           
  1480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1481  0006E8  5055               	movf	vfpfcnvrt@done,w,c
  1482  0006EA  1056               	iorwf	vfpfcnvrt@done+1,w,c
  1483  0006EC  B4D8               	btfsc	status,2,c
  1484  0006EE  D7DB               	goto	l1901
  1485                           
  1486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1487  0006F0  0100               	movlb	0	; () banked
  1488  0006F2  B166               	btfsc	_flags& (0+255),0,b
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1492  0006F4  9366               	bcf	_flags& (0+255),1,b
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1496  0006F6  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1497  0006FA  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1498  0006FE  CFDE FFF6          	movff	postinc2,tblptrl
  1499  000702  CFDD FFF7          	movff	postdec2,tblptrh
  1500  000706                     	if	0	;tblptru may be non-zero
  1501  000706                     	endif
  1502  000706                     	if	0	;tblptru may be non-zero
  1503  000706                     	endif
  1504  000706  0008               	tblrd		*
  1505  000708  50F5               	movf	tablat,w,c
  1506  00070A  0A2A               	xorlw	42
  1507  00070C  A4D8               	btfss	status,2,c
  1508  00070E  D023               	goto	l1915
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1512  000710  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1513  000714  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1514  000718  2ADE               	incf	postinc2,f,c
  1515  00071A  0E00               	movlw	0
  1516  00071C  22DD               	addwfc	postdec2,f,c
  1517                           
  1518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1519  00071E  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1520  000722  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1521  000726  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1522  00072A  0E02               	movlw	2
  1523  00072C  26DE               	addwf	postinc2,f,c
  1524  00072E  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1525  000732  0E00               	movlw	0
  1526  000734  22DD               	addwfc	postdec2,f,c
  1527  000736  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1528  00073A  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1529  00073E  CFDE F062          	movff	postinc2,_width
  1530  000742  CFDD F063          	movff	postdec2,_width+1
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1534  000746  AF63               	btfss	(_width+1)& (0+255),7,b
  1535  000748  D03F               	goto	u1530
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1539  00074A  8166               	bsf	_flags& (0+255),0,b
  1540                           
  1541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1542  00074C  6D62               	negf	_width& (0+255),b
  1543  00074E  1F63               	comf	(_width+1)& (0+255),f,b
  1544  000750  B0D8               	btfsc	status,0,c
  1545  000752  2B63               	incf	(_width+1)& (0+255),f,b
  1546  000754  D039               	goto	u1530
  1547  000756                     l1915:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1551  000756  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1552  00075A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1553  00075E  CFDE F008          	movff	postinc2,atoi@s
  1554  000762  CFDD F009          	movff	postdec2,atoi@s+1
  1555  000766  EC84  F006         	call	_atoi	;wreg free
  1556  00076A  C008  F062         	movff	?_atoi,_width
  1557  00076E  C009  F063         	movff	?_atoi+1,_width+1
  1558                           
  1559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1560  000772  D007               	goto	l1919
  1561  000774                     l1917:
  1562                           
  1563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1564  000774  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1565  000778  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1566  00077C  2ADE               	incf	postinc2,f,c
  1567  00077E  0E00               	movlw	0
  1568  000780  22DD               	addwfc	postdec2,f,c
  1569  000782                     l1919:
  1570  000782  0ED0               	movlw	208
  1571  000784  6E47               	movwf	??_vfpfcnvrt& (0+255),c
  1572  000786  0EFF               	movlw	255
  1573  000788  6E48               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1574  00078A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1575  00078E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1576  000792  CFDE FFF6          	movff	postinc2,tblptrl
  1577  000796  CFDD FFF7          	movff	postdec2,tblptrh
  1578  00079A                     	if	0	;tblptru may be non-zero
  1579  00079A                     	endif
  1580  00079A                     	if	0	;tblptru may be non-zero
  1581  00079A                     	endif
  1582  00079A  0008               	tblrd		*
  1583  00079C  50F5               	movf	tablat,w,c
  1584  00079E  6E49               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1585  0007A0  6A4A               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1586  0007A2  5047               	movf	??_vfpfcnvrt,w,c
  1587  0007A4  2649               	addwf	??_vfpfcnvrt+2,f,c
  1588  0007A6  5048               	movf	??_vfpfcnvrt+1,w,c
  1589  0007A8  224A               	addwfc	??_vfpfcnvrt+3,f,c
  1590  0007AA  504A               	movf	??_vfpfcnvrt+3,w,c
  1591  0007AC  E106               	bnz	u1510
  1592  0007AE  0E0A               	movlw	10
  1593  0007B0  5C49               	subwf	??_vfpfcnvrt+2,w,c
  1594  0007B2  B0D8               	btfsc	status,0,c
  1595  0007B4  D002               	goto	u1510
  1596  0007B6  0E01               	movlw	1
  1597  0007B8  D001               	goto	u1520
  1598  0007BA                     u1510:
  1599  0007BA  0E00               	movlw	0
  1600  0007BC                     u1520:
  1601  0007BC  6E57               	movwf	_vfpfcnvrt$426,c
  1602  0007BE  6A58               	clrf	_vfpfcnvrt$426+1,c
  1603  0007C0  5057               	movf	_vfpfcnvrt$426,w,c
  1604  0007C2  1058               	iorwf	_vfpfcnvrt$426+1,w,c
  1605  0007C4  A4D8               	btfss	status,2,c
  1606  0007C6  D7D6               	goto	l1917
  1607  0007C8                     u1530:
  1608                           
  1609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1610  0007C8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1611  0007CC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1612  0007D0  CFDE FFF6          	movff	postinc2,tblptrl
  1613  0007D4  CFDD FFF7          	movff	postdec2,tblptrh
  1614  0007D8                     	if	0	;tblptru may be non-zero
  1615  0007D8                     	endif
  1616  0007D8                     	if	0	;tblptru may be non-zero
  1617  0007D8                     	endif
  1618  0007D8  0008               	tblrd		*
  1619  0007DA  50F5               	movf	tablat,w,c
  1620  0007DC  0A64               	xorlw	100
  1621  0007DE  B4D8               	btfsc	status,2,c
  1622  0007E0  D00D               	goto	u1550
  1623  0007E2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1624  0007E6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1625  0007EA  CFDE FFF6          	movff	postinc2,tblptrl
  1626  0007EE  CFDD FFF7          	movff	postdec2,tblptrh
  1627  0007F2                     	if	0	;tblptru may be non-zero
  1628  0007F2                     	endif
  1629  0007F2                     	if	0	;tblptru may be non-zero
  1630  0007F2                     	endif
  1631  0007F2  0008               	tblrd		*
  1632  0007F4  50F5               	movf	tablat,w,c
  1633  0007F6  0A69               	xorlw	105
  1634  0007F8  A4D8               	btfss	status,2,c
  1635  0007FA  D03F               	goto	l1935
  1636  0007FC                     u1550:
  1637                           
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1639  0007FC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1640  000800  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1641  000804  2ADE               	incf	postinc2,f,c
  1642  000806  0E00               	movlw	0
  1643  000808  22DD               	addwfc	postdec2,f,c
  1644                           
  1645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1646  00080A  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1647  00080E  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1648  000812  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1649  000816  0E02               	movlw	2
  1650  000818  26DE               	addwf	postinc2,f,c
  1651  00081A  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1652  00081E  0E00               	movlw	0
  1653  000820  22DD               	addwfc	postdec2,f,c
  1654  000822  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1655  000826  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1656  00082A  CFDE F04B          	movff	postinc2,vfpfcnvrt@ll
  1657  00082E  CFDD F04C          	movff	postdec2,vfpfcnvrt@ll+1
  1658  000832  0E00               	movlw	0
  1659  000834  BE4C               	btfsc	vfpfcnvrt@ll+1,7,c
  1660  000836  0EFF               	movlw	-1
  1661  000838  6E4D               	movwf	vfpfcnvrt@ll+2,c
  1662  00083A  6E4E               	movwf	vfpfcnvrt@ll+3,c
  1663  00083C  6E4F               	movwf	vfpfcnvrt@ll+4,c
  1664  00083E  6E50               	movwf	vfpfcnvrt@ll+5,c
  1665  000840  6E51               	movwf	vfpfcnvrt@ll+6,c
  1666  000842  6E52               	movwf	vfpfcnvrt@ll+7,c
  1667                           
  1668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1669  000844  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  1670  000848  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1671  00084C  C04B  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  1672  000850  C04C  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1673  000854  C04D  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1674  000858  C04E  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1675  00085C  C04F  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1676  000860  C050  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1677  000864  C051  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1678  000868  C052  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1679  00086C  ECBD  F004         	call	_dtoa	;wreg free
  1680  000870  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  1681  000874  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1682  000878  0012               	return	
  1683  00087A                     l1935:
  1684                           
  1685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  1686  00087A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1687  00087E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1688  000882  CFDE FFF6          	movff	postinc2,tblptrl
  1689  000886  CFDD FFF7          	movff	postdec2,tblptrh
  1690  00088A                     	if	0	;tblptru may be non-zero
  1691  00088A                     	endif
  1692  00088A                     	if	0	;tblptru may be non-zero
  1693  00088A                     	endif
  1694  00088A  0008               	tblrd		*
  1695  00088C  50F5               	movf	tablat,w,c
  1696  00088E  0A73               	xorlw	115
  1697  000890  A4D8               	btfss	status,2,c
  1698  000892  D02A               	goto	l1943
  1699                           
  1700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  1701  000894  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1702  000898  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1703  00089C  2ADE               	incf	postinc2,f,c
  1704  00089E  0E00               	movlw	0
  1705  0008A0  22DD               	addwfc	postdec2,f,c
  1706                           
  1707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  1708  0008A2  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1709  0008A6  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1710  0008AA  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1711  0008AE  0E02               	movlw	2
  1712  0008B0  26DE               	addwf	postinc2,f,c
  1713  0008B2  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1714  0008B6  0E00               	movlw	0
  1715  0008B8  22DD               	addwfc	postdec2,f,c
  1716  0008BA  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1717  0008BE  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1718  0008C2  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1719  0008C6  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1720                           
  1721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  1722  0008CA  C041  F00B         	movff	vfpfcnvrt@fp,stoa@fp
  1723  0008CE  C042  F00C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  1724  0008D2  C053  F00D         	movff	vfpfcnvrt@cp,stoa@s
  1725  0008D6  C054  F00E         	movff	vfpfcnvrt@cp+1,stoa@s+1
  1726  0008DA  EC24  F007         	call	_stoa	;wreg free
  1727  0008DE  C00B  F041         	movff	?_stoa,?_vfpfcnvrt
  1728  0008E2  C00C  F042         	movff	?_stoa+1,?_vfpfcnvrt+1
  1729  0008E6  0012               	return	
  1730  0008E8                     l1943:
  1731                           
  1732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1733  0008E8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1734  0008EC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1735  0008F0  CFDE FFF6          	movff	postinc2,tblptrl
  1736  0008F4  CFDD FFF7          	movff	postdec2,tblptrh
  1737  0008F8                     	if	0	;tblptru may be non-zero
  1738  0008F8                     	endif
  1739  0008F8                     	if	0	;tblptru may be non-zero
  1740  0008F8                     	endif
  1741  0008F8  0008               	tblrd		*
  1742  0008FA  50F5               	movf	tablat,w,c
  1743  0008FC  0A25               	xorlw	37
  1744  0008FE  A4D8               	btfss	status,2,c
  1745  000900  D016               	goto	l1953
  1746                           
  1747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1748  000902  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1749  000906  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1750  00090A  2ADE               	incf	postinc2,f,c
  1751  00090C  0E00               	movlw	0
  1752  00090E  22DD               	addwfc	postdec2,f,c
  1753                           
  1754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1755  000910  0E00               	movlw	0
  1756  000912  6E03               	movwf	fputc@c+1,c
  1757  000914  0E25               	movlw	37
  1758  000916  6E02               	movwf	fputc@c,c
  1759  000918  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1760  00091C  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1761  000920  ECFE  F008         	call	_fputc	;wreg free
  1762  000924                     l1949:
  1763                           
  1764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1765  000924  0E00               	movlw	0
  1766  000926  6E42               	movwf	?_vfpfcnvrt+1,c
  1767  000928  0E01               	movlw	1
  1768  00092A  6E41               	movwf	?_vfpfcnvrt,c
  1769  00092C  0012               	return	
  1770  00092E                     l1953:
  1771                           
  1772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1773  00092E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1774  000932  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1775  000936  2ADE               	incf	postinc2,f,c
  1776  000938  0E00               	movlw	0
  1777  00093A  22DD               	addwfc	postdec2,f,c
  1778                           
  1779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1780  00093C  0E00               	movlw	0
  1781  00093E  6E42               	movwf	?_vfpfcnvrt+1,c
  1782  000940  0E00               	movlw	0
  1783  000942  6E41               	movwf	?_vfpfcnvrt,c
  1784  000944  0012               	return	
  1785  000946                     l1959:
  1786                           
  1787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1788  000946  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1789  00094A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1790  00094E  CFDE FFF6          	movff	postinc2,tblptrl
  1791  000952  CFDD FFF7          	movff	postdec2,tblptrh
  1792  000956                     	if	0	;tblptru may be non-zero
  1793  000956                     	endif
  1794  000956                     	if	0	;tblptru may be non-zero
  1795  000956                     	endif
  1796  000956  0008               	tblrd		*
  1797  000958  50F5               	movf	tablat,w,c
  1798  00095A  6E02               	movwf	fputc@c,c
  1799  00095C  6A03               	clrf	fputc@c+1,c
  1800  00095E  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1801  000962  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1802  000966  ECFE  F008         	call	_fputc	;wreg free
  1803                           
  1804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1805  00096A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1806  00096E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1807  000972  2ADE               	incf	postinc2,f,c
  1808  000974  0E00               	movlw	0
  1809  000976  22DD               	addwfc	postdec2,f,c
  1810  000978  D7D5               	goto	l1949
  1811  00097A                     __end_of_vfpfcnvrt:
  1812                           	opt callstack 0
  1813                           
  1814 ;; *************** function _stoa *****************
  1815 ;; Defined at:
  1816 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  1819 ;;		 -> NULL(0), 
  1820 ;;  s               2   12[COMRAM] PTR unsigned char 
  1821 ;;		 -> ?_printf(2), AMPM(20), 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  nuls            7   15[COMRAM] unsigned char [7]
  1824 ;;  l               2   30[COMRAM] int 
  1825 ;;  p               2   28[COMRAM] int 
  1826 ;;  cp              2   26[COMRAM] PTR unsigned char 
  1827 ;;		 -> ?_printf(2), stoa@nuls(7), AMPM(20), 
  1828 ;;  w               2   24[COMRAM] int 
  1829 ;;  i               2   22[COMRAM] int 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  2   10[COMRAM] int 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1839 ;;      Params:         4       0       0       0       0       0       0
  1840 ;;      Locals:        17       0       0       0       0       0       0
  1841 ;;      Temps:          1       0       0       0       0       0       0
  1842 ;;      Totals:        22       0       0       0       0       0       0
  1843 ;;Total ram usage:       22 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    2
  1846 ;; This function calls:
  1847 ;;		_fputc
  1848 ;;		_strlen
  1849 ;; This function is called by:
  1850 ;;		_vfpfcnvrt
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text9
  1855  000E48                     __ptext9:
  1856                           	opt callstack 0
  1857  000E48                     _stoa:
  1858                           	opt callstack 25
  1859                           
  1860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  1861                           
  1862                           ;incstack = 0
  1863  000E48  EE20  F088         	lfsr	2,stoa@F1139
  1864  000E4C  EE10  F010         	lfsr	1,stoa@nuls
  1865  000E50  0E06               	movlw	6
  1866  000E52                     u1301:
  1867  000E52  CFDB FFE3          	movff	plusw2,plusw1
  1868  000E56  06E8               	decf	wreg,f,c
  1869  000E58  E2FC               	bc	u1301
  1870                           
  1871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  1872  000E5A  C00D  F01B         	movff	stoa@s,stoa@cp
  1873  000E5E  C00E  F01C         	movff	stoa@s+1,stoa@cp+1
  1874                           
  1875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  1876  000E62  501B               	movf	stoa@cp,w,c
  1877  000E64  101C               	iorwf	stoa@cp+1,w,c
  1878  000E66  A4D8               	btfss	status,2,c
  1879  000E68  D004               	goto	l1791
  1880                           
  1881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  1882  000E6A  0E10               	movlw	low stoa@nuls
  1883  000E6C  6E1B               	movwf	stoa@cp,c
  1884  000E6E  0E00               	movlw	high stoa@nuls
  1885  000E70  6E1C               	movwf	stoa@cp+1,c
  1886  000E72                     l1791:
  1887                           
  1888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  1889  000E72  C01B  F001         	movff	stoa@cp,strlen@s
  1890  000E76  C01C  F002         	movff	stoa@cp+1,strlen@s+1
  1891  000E7A  ECE6  F009         	call	_strlen	;wreg free
  1892  000E7E  C001  F01F         	movff	?_strlen,stoa@l
  1893  000E82  C002  F020         	movff	?_strlen+1,stoa@l+1
  1894                           
  1895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  1896  000E86  C064  F01D         	movff	_prec,stoa@p
  1897  000E8A  C065  F01E         	movff	_prec+1,stoa@p+1
  1898                           
  1899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  1900  000E8E  BE1E               	btfsc	stoa@p+1,7,c
  1901  000E90  D00E               	goto	l191
  1902  000E92  501F               	movf	stoa@l,w,c
  1903  000E94  5C1D               	subwf	stoa@p,w,c
  1904  000E96  501E               	movf	stoa@p+1,w,c
  1905  000E98  0A80               	xorlw	128
  1906  000E9A  6E0F               	movwf	??_stoa& (0+255),c
  1907  000E9C  5020               	movf	stoa@l+1,w,c
  1908  000E9E  0A80               	xorlw	128
  1909  000EA0  580F               	subwfb	??_stoa& (0+255),w,c
  1910  000EA2  B0D8               	btfsc	status,0,c
  1911  000EA4  D004               	goto	l191
  1912  000EA6  C01D  F01F         	movff	stoa@p,stoa@l
  1913  000EAA  C01E  F020         	movff	stoa@p+1,stoa@l+1
  1914  000EAE                     l191:
  1915                           
  1916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  1917  000EAE  C01F  F01D         	movff	stoa@l,stoa@p
  1918  000EB2  C020  F01E         	movff	stoa@l+1,stoa@p+1
  1919                           
  1920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  1921  000EB6  C062  F019         	movff	_width,stoa@w
  1922  000EBA  C063  F01A         	movff	_width+1,stoa@w+1
  1923                           
  1924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  1925  000EBE  0100               	movlb	0	; () banked
  1926  000EC0  A166               	btfss	_flags& (0+255),0,b
  1927  000EC2  D00D               	goto	l1805
  1928  000EC4  D016               	goto	u1350
  1929  000EC6                     l1801:
  1930                           
  1931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  1932  000EC6  0E00               	movlw	0
  1933  000EC8  6E03               	movwf	fputc@c+1,c
  1934  000ECA  0E20               	movlw	32
  1935  000ECC  6E02               	movwf	fputc@c,c
  1936  000ECE  C00B  F004         	movff	stoa@fp,fputc@fp
  1937  000ED2  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  1938  000ED6  ECFE  F008         	call	_fputc	;wreg free
  1939                           
  1940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  1941  000EDA  4A1F               	infsnz	stoa@l,f,c
  1942  000EDC  2A20               	incf	stoa@l+1,f,c
  1943  000EDE                     l1805:
  1944                           
  1945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  1946  000EDE  5019               	movf	stoa@w,w,c
  1947  000EE0  5C1F               	subwf	stoa@l,w,c
  1948  000EE2  5020               	movf	stoa@l+1,w,c
  1949  000EE4  0A80               	xorlw	128
  1950  000EE6  6E0F               	movwf	??_stoa& (0+255),c
  1951  000EE8  501A               	movf	stoa@w+1,w,c
  1952  000EEA  0A80               	xorlw	128
  1953  000EEC  580F               	subwfb	??_stoa& (0+255),w,c
  1954  000EEE  A0D8               	btfss	status,0,c
  1955  000EF0  D7EA               	goto	l1801
  1956  000EF2                     u1350:
  1957                           
  1958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  1959  000EF2  0E00               	movlw	0
  1960  000EF4  6E18               	movwf	stoa@i+1,c
  1961  000EF6  0E00               	movlw	0
  1962  000EF8  6E17               	movwf	stoa@i,c
  1963                           
  1964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  1965  000EFA  D013               	goto	l1815
  1966  000EFC                     l1809:
  1967                           
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  1969  000EFC  C01B  FFD9         	movff	stoa@cp,fsr2l
  1970  000F00  C01C  FFDA         	movff	stoa@cp+1,fsr2h
  1971  000F04  50DF               	movf	indf2,w,c
  1972  000F06  6E0F               	movwf	??_stoa& (0+255),c
  1973  000F08  500F               	movf	??_stoa,w,c
  1974  000F0A  6E02               	movwf	fputc@c,c
  1975  000F0C  6A03               	clrf	fputc@c+1,c
  1976  000F0E  C00B  F004         	movff	stoa@fp,fputc@fp
  1977  000F12  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  1978  000F16  ECFE  F008         	call	_fputc	;wreg free
  1979                           
  1980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  1981  000F1A  4A1B               	infsnz	stoa@cp,f,c
  1982  000F1C  2A1C               	incf	stoa@cp+1,f,c
  1983                           
  1984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  1985  000F1E  4A17               	infsnz	stoa@i,f,c
  1986  000F20  2A18               	incf	stoa@i+1,f,c
  1987  000F22                     l1815:
  1988                           
  1989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  1990  000F22  501D               	movf	stoa@p,w,c
  1991  000F24  5C17               	subwf	stoa@i,w,c
  1992  000F26  5018               	movf	stoa@i+1,w,c
  1993  000F28  0A80               	xorlw	128
  1994  000F2A  6E0F               	movwf	??_stoa& (0+255),c
  1995  000F2C  501E               	movf	stoa@p+1,w,c
  1996  000F2E  0A80               	xorlw	128
  1997  000F30  580F               	subwfb	??_stoa& (0+255),w,c
  1998  000F32  A0D8               	btfss	status,0,c
  1999  000F34  D7E3               	goto	l1809
  2000                           
  2001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  2002  000F36  0100               	movlb	0	; () banked
  2003  000F38  B166               	btfsc	_flags& (0+255),0,b
  2004  000F3A  D00D               	goto	l1823
  2005  000F3C  D016               	goto	u1380
  2006  000F3E                     l1819:
  2007                           
  2008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  2009  000F3E  0E00               	movlw	0
  2010  000F40  6E03               	movwf	fputc@c+1,c
  2011  000F42  0E20               	movlw	32
  2012  000F44  6E02               	movwf	fputc@c,c
  2013  000F46  C00B  F004         	movff	stoa@fp,fputc@fp
  2014  000F4A  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  2015  000F4E  ECFE  F008         	call	_fputc	;wreg free
  2016                           
  2017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  2018  000F52  4A1F               	infsnz	stoa@l,f,c
  2019  000F54  2A20               	incf	stoa@l+1,f,c
  2020  000F56                     l1823:
  2021                           
  2022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  2023  000F56  5019               	movf	stoa@w,w,c
  2024  000F58  5C1F               	subwf	stoa@l,w,c
  2025  000F5A  5020               	movf	stoa@l+1,w,c
  2026  000F5C  0A80               	xorlw	128
  2027  000F5E  6E0F               	movwf	??_stoa& (0+255),c
  2028  000F60  501A               	movf	stoa@w+1,w,c
  2029  000F62  0A80               	xorlw	128
  2030  000F64  580F               	subwfb	??_stoa& (0+255),w,c
  2031  000F66  A0D8               	btfss	status,0,c
  2032  000F68  D7EA               	goto	l1819
  2033  000F6A                     u1380:
  2034                           
  2035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  2036                           
  2037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  2038  000F6A  C01F  F00B         	movff	stoa@l,?_stoa
  2039  000F6E  C020  F00C         	movff	stoa@l+1,?_stoa+1
  2040  000F72  0012               	return		;funcret
  2041  000F74                     __end_of_stoa:
  2042                           	opt callstack 0
  2043                           
  2044 ;; *************** function _dtoa *****************
  2045 ;; Defined at:
  2046 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2049 ;;		 -> NULL(0), 
  2050 ;;  d               8   30[COMRAM] long long 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  n               8   54[COMRAM] long long 
  2053 ;;  i               2   62[COMRAM] int 
  2054 ;;  s               2   52[COMRAM] int 
  2055 ;;  w               2   50[COMRAM] int 
  2056 ;;  p               2   48[COMRAM] int 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  2   28[COMRAM] int 
  2059 ;; Registers used:
  2060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2066 ;;      Params:        10       0       0       0       0       0       0
  2067 ;;      Locals:        18       0       0       0       0       0       0
  2068 ;;      Temps:          8       0       0       0       0       0       0
  2069 ;;      Totals:        36       0       0       0       0       0       0
  2070 ;;Total ram usage:       36 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    4
  2073 ;; This function calls:
  2074 ;;		___aodiv
  2075 ;;		___aomod
  2076 ;;		_abs
  2077 ;;		_pad
  2078 ;; This function is called by:
  2079 ;;		_vfpfcnvrt
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text10
  2084  00097A                     __ptext10:
  2085                           	opt callstack 0
  2086  00097A                     _dtoa:
  2087                           	opt callstack 23
  2088                           
  2089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2090                           
  2091                           ;incstack = 0
  2092  00097A  C01F  F037         	movff	dtoa@d,dtoa@n
  2093  00097E  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  2094  000982  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  2095  000986  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  2096  00098A  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  2097  00098E  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  2098  000992  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  2099  000996  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  2100                           
  2101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2102  00099A  AE3E               	btfss	dtoa@n+7,7,c
  2103  00099C  D002               	goto	u1150
  2104  00099E  0E01               	movlw	1
  2105  0009A0  D001               	goto	u1160
  2106  0009A2                     u1150:
  2107  0009A2  0E00               	movlw	0
  2108  0009A4                     u1160:
  2109  0009A4  6E35               	movwf	dtoa@s,c
  2110  0009A6  6A36               	clrf	dtoa@s+1,c
  2111                           
  2112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2113  0009A8  5035               	movf	dtoa@s,w,c
  2114  0009AA  1036               	iorwf	dtoa@s+1,w,c
  2115  0009AC  B4D8               	btfsc	status,2,c
  2116  0009AE  D010               	goto	l1727
  2117                           
  2118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2119  0009B0  1E3E               	comf	dtoa@n+7,f,c
  2120  0009B2  1E3D               	comf	dtoa@n+6,f,c
  2121  0009B4  1E3C               	comf	dtoa@n+5,f,c
  2122  0009B6  1E3B               	comf	dtoa@n+4,f,c
  2123  0009B8  1E3A               	comf	dtoa@n+3,f,c
  2124  0009BA  1E39               	comf	dtoa@n+2,f,c
  2125  0009BC  1E38               	comf	dtoa@n+1,f,c
  2126  0009BE  6C37               	negf	dtoa@n,c
  2127  0009C0  0E00               	movlw	0
  2128  0009C2  2238               	addwfc	dtoa@n+1,f,c
  2129  0009C4  2239               	addwfc	dtoa@n+2,f,c
  2130  0009C6  223A               	addwfc	dtoa@n+3,f,c
  2131  0009C8  223B               	addwfc	dtoa@n+4,f,c
  2132  0009CA  223C               	addwfc	dtoa@n+5,f,c
  2133  0009CC  223D               	addwfc	dtoa@n+6,f,c
  2134  0009CE  223E               	addwfc	dtoa@n+7,f,c
  2135  0009D0                     l1727:
  2136                           
  2137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2138  0009D0  0100               	movlb	0	; () banked
  2139  0009D2  AF65               	btfss	(_prec+1)& (0+255),7,b
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2143  0009D4  9366               	bcf	_flags& (0+255),1,b
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2147  0009D6  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2148  0009D8  D005               	goto	u1190
  2149  0009DA  5165               	movf	(_prec+1)& (0+255),w,b
  2150  0009DC  E108               	bnz	l162
  2151  0009DE  0564               	decf	_prec& (0+255),w,b
  2152  0009E0  B0D8               	btfsc	status,0,c
  2153  0009E2  D005               	goto	l162
  2154  0009E4                     u1190:
  2155                           
  2156                           ; BSR set to: 0
  2157  0009E4  0E00               	movlw	0
  2158  0009E6  6E32               	movwf	dtoa@p+1,c
  2159  0009E8  0E01               	movlw	1
  2160  0009EA  6E31               	movwf	dtoa@p,c
  2161  0009EC  D004               	goto	l164
  2162  0009EE                     l162:
  2163                           
  2164                           ; BSR set to: 0
  2165  0009EE  C064  F031         	movff	_prec,dtoa@p
  2166  0009F2  C065  F032         	movff	_prec+1,dtoa@p+1
  2167  0009F6                     l164:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2171  0009F6  C062  F033         	movff	_width,dtoa@w
  2172  0009FA  C063  F034         	movff	_width+1,dtoa@w+1
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2176  0009FE  5035               	movf	dtoa@s,w,c
  2177  000A00  1036               	iorwf	dtoa@s+1,w,c
  2178  000A02  A4D8               	btfss	status,2,c
  2179  000A04  D002               	goto	u1210
  2180                           
  2181                           ; BSR set to: 0
  2182  000A06  A566               	btfss	_flags& (0+255),2,b
  2183  000A08  D003               	goto	l1741
  2184  000A0A                     u1210:
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2188  000A0A  0633               	decf	dtoa@w,f,c
  2189  000A0C  A0D8               	btfss	status,0,c
  2190  000A0E  0634               	decf	dtoa@w+1,f,c
  2191  000A10                     l1741:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2195  000A10  0E00               	movlw	0
  2196  000A12  6E40               	movwf	dtoa@i+1,c
  2197  000A14  0E1F               	movlw	31
  2198  000A16  6E3F               	movwf	dtoa@i,c
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2202  000A18  0E00               	movlw	0
  2203  000A1A  6F87               	movwf	(_dbuf+31)& (0+255),b
  2204                           
  2205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2206  000A1C  D07C               	goto	l1755
  2207  000A1E                     l1745:
  2208                           
  2209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2210  000A1E  063F               	decf	dtoa@i,f,c
  2211  000A20  A0D8               	btfss	status,0,c
  2212  000A22  0640               	decf	dtoa@i+1,f,c
  2213                           
  2214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2215  000A24  0E68               	movlw	low _dbuf
  2216  000A26  243F               	addwf	dtoa@i,w,c
  2217  000A28  6ED9               	movwf	fsr2l,c
  2218  000A2A  0E00               	movlw	high _dbuf
  2219  000A2C  2040               	addwfc	dtoa@i+1,w,c
  2220  000A2E  6EDA               	movwf	fsr2h,c
  2221  000A30  C037  F001         	movff	dtoa@n,___aomod@dividend
  2222  000A34  C038  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2223  000A38  C039  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2224  000A3C  C03A  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2225  000A40  C03B  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2226  000A44  C03C  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2227  000A48  C03D  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2228  000A4C  C03E  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2229  000A50  0E0A               	movlw	10
  2230  000A52  6E09               	movwf	___aomod@divisor,c
  2231  000A54  0E00               	movlw	0
  2232  000A56  6E0A               	movwf	___aomod@divisor+1,c
  2233  000A58  0E00               	movlw	0
  2234  000A5A  6E0B               	movwf	___aomod@divisor+2,c
  2235  000A5C  0E00               	movlw	0
  2236  000A5E  6E0C               	movwf	___aomod@divisor+3,c
  2237  000A60  0E00               	movlw	0
  2238  000A62  6E0D               	movwf	___aomod@divisor+4,c
  2239  000A64  0E00               	movlw	0
  2240  000A66  6E0E               	movwf	___aomod@divisor+5,c
  2241  000A68  0E00               	movlw	0
  2242  000A6A  6E0F               	movwf	___aomod@divisor+6,c
  2243  000A6C  0E00               	movlw	0
  2244  000A6E  6E10               	movwf	___aomod@divisor+7,c
  2245  000A70  ECBA  F007         	call	___aomod	;wreg free
  2246  000A74  C001  F027         	movff	?___aomod,??_dtoa
  2247  000A78  C002  F028         	movff	?___aomod+1,??_dtoa+1
  2248  000A7C  C003  F029         	movff	?___aomod+2,??_dtoa+2
  2249  000A80  C004  F02A         	movff	?___aomod+3,??_dtoa+3
  2250  000A84  C005  F02B         	movff	?___aomod+4,??_dtoa+4
  2251  000A88  C006  F02C         	movff	?___aomod+5,??_dtoa+5
  2252  000A8C  C007  F02D         	movff	?___aomod+6,??_dtoa+6
  2253  000A90  C008  F02E         	movff	?___aomod+7,??_dtoa+7
  2254  000A94  C027  F013         	movff	??_dtoa,abs@a
  2255  000A98  C029  F014         	movff	??_dtoa+2,abs@a+1
  2256  000A9C  ECB5  F009         	call	_abs	;wreg free
  2257  000AA0  5013               	movf	?_abs,w,c
  2258  000AA2  0F30               	addlw	48
  2259  000AA4  6EDF               	movwf	indf2,c
  2260                           
  2261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2262  000AA6  0631               	decf	dtoa@p,f,c
  2263  000AA8  A0D8               	btfss	status,0,c
  2264  000AAA  0632               	decf	dtoa@p+1,f,c
  2265                           
  2266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2267  000AAC  0633               	decf	dtoa@w,f,c
  2268  000AAE  A0D8               	btfss	status,0,c
  2269  000AB0  0634               	decf	dtoa@w+1,f,c
  2270                           
  2271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2272  000AB2  C037  F001         	movff	dtoa@n,___aodiv@dividend
  2273  000AB6  C038  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2274  000ABA  C039  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2275  000ABE  C03A  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2276  000AC2  C03B  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2277  000AC6  C03C  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2278  000ACA  C03D  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2279  000ACE  C03E  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2280  000AD2  0E0A               	movlw	10
  2281  000AD4  6E09               	movwf	___aodiv@divisor,c
  2282  000AD6  0E00               	movlw	0
  2283  000AD8  6E0A               	movwf	___aodiv@divisor+1,c
  2284  000ADA  0E00               	movlw	0
  2285  000ADC  6E0B               	movwf	___aodiv@divisor+2,c
  2286  000ADE  0E00               	movlw	0
  2287  000AE0  6E0C               	movwf	___aodiv@divisor+3,c
  2288  000AE2  0E00               	movlw	0
  2289  000AE4  6E0D               	movwf	___aodiv@divisor+4,c
  2290  000AE6  0E00               	movlw	0
  2291  000AE8  6E0E               	movwf	___aodiv@divisor+5,c
  2292  000AEA  0E00               	movlw	0
  2293  000AEC  6E0F               	movwf	___aodiv@divisor+6,c
  2294  000AEE  0E00               	movlw	0
  2295  000AF0  6E10               	movwf	___aodiv@divisor+7,c
  2296  000AF2  ECE0  F005         	call	___aodiv	;wreg free
  2297  000AF6  C001  F037         	movff	?___aodiv,dtoa@n
  2298  000AFA  C002  F038         	movff	?___aodiv+1,dtoa@n+1
  2299  000AFE  C003  F039         	movff	?___aodiv+2,dtoa@n+2
  2300  000B02  C004  F03A         	movff	?___aodiv+3,dtoa@n+3
  2301  000B06  C005  F03B         	movff	?___aodiv+4,dtoa@n+4
  2302  000B0A  C006  F03C         	movff	?___aodiv+5,dtoa@n+5
  2303  000B0E  C007  F03D         	movff	?___aodiv+6,dtoa@n+6
  2304  000B12  C008  F03E         	movff	?___aodiv+7,dtoa@n+7
  2305  000B16                     l1755:
  2306                           
  2307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2308  000B16  BE40               	btfsc	dtoa@i+1,7,c
  2309  000B18  D020               	goto	u1260
  2310  000B1A  5040               	movf	dtoa@i+1,w,c
  2311  000B1C  E103               	bnz	u1220
  2312  000B1E  043F               	decf	dtoa@i,w,c
  2313  000B20  A0D8               	btfss	status,0,c
  2314  000B22  D01B               	goto	u1260
  2315  000B24                     u1220:
  2316  000B24  5037               	movf	dtoa@n,w,c
  2317  000B26  1038               	iorwf	dtoa@n+1,w,c
  2318  000B28  1039               	iorwf	dtoa@n+2,w,c
  2319  000B2A  103A               	iorwf	dtoa@n+3,w,c
  2320  000B2C  103B               	iorwf	dtoa@n+4,w,c
  2321  000B2E  103C               	iorwf	dtoa@n+5,w,c
  2322  000B30  103D               	iorwf	dtoa@n+6,w,c
  2323  000B32  103E               	iorwf	dtoa@n+7,w,c
  2324  000B34  A4D8               	btfss	status,2,c
  2325  000B36  D773               	goto	l1745
  2326  000B38  BE32               	btfsc	dtoa@p+1,7,c
  2327  000B3A  D005               	goto	u1240
  2328  000B3C  5032               	movf	dtoa@p+1,w,c
  2329  000B3E  E102               	bnz	u1241
  2330  000B40  0431               	decf	dtoa@p,w,c
  2331  000B42  B0D8               	btfsc	status,0,c
  2332  000B44                     u1241:
  2333  000B44  D76C               	goto	l1745
  2334  000B46                     u1240:
  2335  000B46  BE34               	btfsc	dtoa@w+1,7,c
  2336  000B48  D008               	goto	u1260
  2337  000B4A  5034               	movf	dtoa@w+1,w,c
  2338  000B4C  E103               	bnz	u1250
  2339  000B4E  0433               	decf	dtoa@w,w,c
  2340  000B50  A0D8               	btfss	status,0,c
  2341  000B52  D003               	goto	u1260
  2342  000B54                     u1250:
  2343  000B54  0100               	movlb	0	; () banked
  2344  000B56  B366               	btfsc	_flags& (0+255),1,b
  2345  000B58  D762               	goto	l1745
  2346  000B5A                     u1260:
  2347                           
  2348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2349  000B5A  5035               	movf	dtoa@s,w,c
  2350  000B5C  1036               	iorwf	dtoa@s+1,w,c
  2351  000B5E  A4D8               	btfss	status,2,c
  2352  000B60  D003               	goto	u1280
  2353  000B62  0100               	movlb	0	; () banked
  2354  000B64  A566               	btfss	_flags& (0+255),2,b
  2355  000B66  D017               	goto	l1779
  2356  000B68                     u1280:
  2357                           
  2358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2359  000B68  063F               	decf	dtoa@i,f,c
  2360  000B6A  A0D8               	btfss	status,0,c
  2361  000B6C  0640               	decf	dtoa@i+1,f,c
  2362                           
  2363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2364  000B6E  5035               	movf	dtoa@s,w,c
  2365  000B70  1036               	iorwf	dtoa@s+1,w,c
  2366  000B72  A4D8               	btfss	status,2,c
  2367  000B74  D004               	goto	l1775
  2368  000B76  0E00               	movlw	0
  2369  000B78  6E30               	movwf	_dtoa$400+1,c
  2370  000B7A  0E2B               	movlw	43
  2371  000B7C  D003               	goto	L3
  2372  000B7E                     l1775:
  2373  000B7E  0E00               	movlw	0
  2374  000B80  6E30               	movwf	_dtoa$400+1,c
  2375  000B82  0E2D               	movlw	45
  2376  000B84                     L3:
  2377  000B84  6E2F               	movwf	_dtoa$400,c
  2378  000B86  0E68               	movlw	low _dbuf
  2379  000B88  243F               	addwf	dtoa@i,w,c
  2380  000B8A  6ED9               	movwf	fsr2l,c
  2381  000B8C  0E00               	movlw	high _dbuf
  2382  000B8E  2040               	addwfc	dtoa@i+1,w,c
  2383  000B90  6EDA               	movwf	fsr2h,c
  2384  000B92  C02F  FFDF         	movff	_dtoa$400,indf2
  2385  000B96                     l1779:
  2386                           
  2387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2388  000B96  C01D  F012         	movff	dtoa@fp,pad@fp
  2389  000B9A  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  2390  000B9E  0E68               	movlw	low _dbuf
  2391  000BA0  243F               	addwf	dtoa@i,w,c
  2392  000BA2  6E14               	movwf	pad@buf,c
  2393  000BA4  0E00               	movlw	high _dbuf
  2394  000BA6  2040               	addwfc	dtoa@i+1,w,c
  2395  000BA8  6E15               	movwf	pad@buf+1,c
  2396  000BAA  C033  F016         	movff	dtoa@w,pad@p
  2397  000BAE  C034  F017         	movff	dtoa@w+1,pad@p+1
  2398  000BB2  ECB1  F008         	call	_pad	;wreg free
  2399  000BB6  C012  F01D         	movff	?_pad,?_dtoa
  2400  000BBA  C013  F01E         	movff	?_pad+1,?_dtoa+1
  2401  000BBE  0012               	return		;funcret
  2402  000BC0                     __end_of_dtoa:
  2403                           	opt callstack 0
  2404                           
  2405 ;; *************** function _pad *****************
  2406 ;; Defined at:
  2407 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2410 ;;		 -> NULL(0), 
  2411 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2412 ;;		 -> dbuf(32), 
  2413 ;;  p               2   21[COMRAM] int 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  w               2   26[COMRAM] int 
  2416 ;;  i               2   24[COMRAM] int 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  2   17[COMRAM] int 
  2419 ;; Registers used:
  2420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2426 ;;      Params:         6       0       0       0       0       0       0
  2427 ;;      Locals:         4       0       0       0       0       0       0
  2428 ;;      Temps:          1       0       0       0       0       0       0
  2429 ;;      Totals:        11       0       0       0       0       0       0
  2430 ;;Total ram usage:       11 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    3
  2433 ;; This function calls:
  2434 ;;		_fputc
  2435 ;;		_fputs
  2436 ;;		_strlen
  2437 ;; This function is called by:
  2438 ;;		_dtoa
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text11
  2443  001162                     __ptext11:
  2444                           	opt callstack 0
  2445  001162                     _pad:
  2446                           	opt callstack 23
  2447                           
  2448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2449                           
  2450                           ;incstack = 0
  2451  001162  0100               	movlb	0	; () banked
  2452  001164  A166               	btfss	_flags& (0+255),0,b
  2453  001166  D00A               	goto	l1597
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2457  001168  C014  F00B         	movff	pad@buf,fputs@s
  2458  00116C  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2459  001170  C012  F00D         	movff	pad@fp,fputs@fp
  2460  001174  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2461  001178  EC7E  F009         	call	_fputs	;wreg free
  2462  00117C                     l1597:
  2463                           
  2464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2465  00117C  BE17               	btfsc	pad@p+1,7,c
  2466  00117E  D005               	goto	l1601
  2467  001180  C016  F01B         	movff	pad@p,pad@w
  2468  001184  C017  F01C         	movff	pad@p+1,pad@w+1
  2469  001188  D004               	goto	l151
  2470  00118A                     l1601:
  2471  00118A  0E00               	movlw	0
  2472  00118C  6E1C               	movwf	pad@w+1,c
  2473  00118E  0E00               	movlw	0
  2474  001190  6E1B               	movwf	pad@w,c
  2475  001192                     l151:
  2476                           
  2477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2478  001192  0E00               	movlw	0
  2479  001194  6E1A               	movwf	pad@i+1,c
  2480  001196  0E00               	movlw	0
  2481  001198  6E19               	movwf	pad@i,c
  2482                           
  2483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2484  00119A  D00C               	goto	l1607
  2485  00119C                     l1603:
  2486                           
  2487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2488  00119C  0E00               	movlw	0
  2489  00119E  6E03               	movwf	fputc@c+1,c
  2490  0011A0  0E20               	movlw	32
  2491  0011A2  6E02               	movwf	fputc@c,c
  2492  0011A4  C012  F004         	movff	pad@fp,fputc@fp
  2493  0011A8  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2494  0011AC  ECFE  F008         	call	_fputc	;wreg free
  2495                           
  2496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2497  0011B0  4A19               	infsnz	pad@i,f,c
  2498  0011B2  2A1A               	incf	pad@i+1,f,c
  2499  0011B4                     l1607:
  2500                           
  2501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2502  0011B4  501B               	movf	pad@w,w,c
  2503  0011B6  5C19               	subwf	pad@i,w,c
  2504  0011B8  501A               	movf	pad@i+1,w,c
  2505  0011BA  0A80               	xorlw	128
  2506  0011BC  6E18               	movwf	??_pad& (0+255),c
  2507  0011BE  501C               	movf	pad@w+1,w,c
  2508  0011C0  0A80               	xorlw	128
  2509  0011C2  5818               	subwfb	??_pad& (0+255),w,c
  2510  0011C4  A0D8               	btfss	status,0,c
  2511  0011C6  D7EA               	goto	l1603
  2512                           
  2513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2514  0011C8  0100               	movlb	0	; () banked
  2515  0011CA  B166               	btfsc	_flags& (0+255),0,b
  2516  0011CC  D00A               	goto	l1611
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2520  0011CE  C014  F00B         	movff	pad@buf,fputs@s
  2521  0011D2  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2522  0011D6  C012  F00D         	movff	pad@fp,fputs@fp
  2523  0011DA  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2524  0011DE  EC7E  F009         	call	_fputs	;wreg free
  2525  0011E2                     l1611:
  2526                           
  2527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2528  0011E2  C014  F001         	movff	pad@buf,strlen@s
  2529  0011E6  C015  F002         	movff	pad@buf+1,strlen@s+1
  2530  0011EA  ECE6  F009         	call	_strlen	;wreg free
  2531  0011EE  501B               	movf	pad@w,w,c
  2532  0011F0  2401               	addwf	?_strlen,w,c
  2533  0011F2  6E12               	movwf	?_pad,c
  2534  0011F4  501C               	movf	pad@w+1,w,c
  2535  0011F6  2002               	addwfc	?_strlen+1,w,c
  2536  0011F8  6E13               	movwf	?_pad+1,c
  2537  0011FA  0012               	return		;funcret
  2538  0011FC                     __end_of_pad:
  2539                           	opt callstack 0
  2540                           
  2541 ;; *************** function _strlen *****************
  2542 ;; Defined at:
  2543 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2546 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), AMPM(20), 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2549 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), AMPM(20), 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  2    0[COMRAM] unsigned int 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2559 ;;      Params:         2       0       0       0       0       0       0
  2560 ;;      Locals:         2       0       0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0
  2562 ;;      Totals:         4       0       0       0       0       0       0
  2563 ;;Total ram usage:        4 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_pad
  2569 ;;		_stoa
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text12
  2574  0013CC                     __ptext12:
  2575                           	opt callstack 0
  2576  0013CC                     _strlen:
  2577                           	opt callstack 26
  2578                           
  2579                           ;incstack = 0
  2580  0013CC  C001  F003         	movff	strlen@s,strlen@a
  2581  0013D0  C002  F004         	movff	strlen@s+1,strlen@a+1
  2582  0013D4  D002               	goto	l1587
  2583  0013D6                     l1585:
  2584  0013D6  4A01               	infsnz	strlen@s,f,c
  2585  0013D8  2A02               	incf	strlen@s+1,f,c
  2586  0013DA                     l1587:
  2587  0013DA  C001  FFD9         	movff	strlen@s,fsr2l
  2588  0013DE  C002  FFDA         	movff	strlen@s+1,fsr2h
  2589  0013E2  50DF               	movf	indf2,w,c
  2590  0013E4  A4D8               	btfss	status,2,c
  2591  0013E6  D7F7               	goto	l1585
  2592  0013E8  5003               	movf	strlen@a,w,c
  2593  0013EA  5C01               	subwf	strlen@s,w,c
  2594  0013EC  6E01               	movwf	?_strlen,c
  2595  0013EE  5004               	movf	strlen@a+1,w,c
  2596  0013F0  5802               	subwfb	strlen@s+1,w,c
  2597  0013F2  6E02               	movwf	?_strlen+1,c
  2598  0013F4  0012               	return		;funcret
  2599  0013F6                     __end_of_strlen:
  2600                           	opt callstack 0
  2601                           
  2602 ;; *************** function _fputs *****************
  2603 ;; Defined at:
  2604 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2607 ;;		 -> dbuf(32), 
  2608 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  2609 ;;		 -> NULL(0), 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  i               2   15[COMRAM] int 
  2612 ;;  c               1   14[COMRAM] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  2   10[COMRAM] int 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2622 ;;      Params:         4       0       0       0       0       0       0
  2623 ;;      Locals:         3       0       0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0
  2625 ;;      Totals:         7       0       0       0       0       0       0
  2626 ;;Total ram usage:        7 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    2
  2629 ;; This function calls:
  2630 ;;		_fputc
  2631 ;; This function is called by:
  2632 ;;		_pad
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text13
  2637  0012FC                     __ptext13:
  2638                           	opt callstack 0
  2639  0012FC                     _fputs:
  2640                           	opt callstack 23
  2641                           
  2642                           ;incstack = 0
  2643  0012FC  0E00               	movlw	0
  2644  0012FE  6E11               	movwf	fputs@i+1,c
  2645  001300  0E00               	movlw	0
  2646  001302  6E10               	movwf	fputs@i,c
  2647  001304  D00B               	goto	l1581
  2648  001306                     l1577:
  2649  001306  C00F  F002         	movff	fputs@c,fputc@c
  2650  00130A  6A03               	clrf	fputc@c+1,c
  2651  00130C  C00D  F004         	movff	fputs@fp,fputc@fp
  2652  001310  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  2653  001314  ECFE  F008         	call	_fputc	;wreg free
  2654  001318  4A10               	infsnz	fputs@i,f,c
  2655  00131A  2A11               	incf	fputs@i+1,f,c
  2656  00131C                     l1581:
  2657  00131C  5010               	movf	fputs@i,w,c
  2658  00131E  240B               	addwf	fputs@s,w,c
  2659  001320  6ED9               	movwf	fsr2l,c
  2660  001322  5011               	movf	fputs@i+1,w,c
  2661  001324  200C               	addwfc	fputs@s+1,w,c
  2662  001326  6EDA               	movwf	fsr2h,c
  2663  001328  50DF               	movf	indf2,w,c
  2664  00132A  6E0F               	movwf	fputs@c,c
  2665  00132C  500F               	movf	fputs@c,w,c
  2666  00132E  B4D8               	btfsc	status,2,c
  2667  001330  0012               	return	
  2668  001332  D7E9               	goto	l1577
  2669  001334                     __end_of_fputs:
  2670                           	opt callstack 0
  2671                           
  2672 ;; *************** function _fputc *****************
  2673 ;; Defined at:
  2674 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  c               2    1[COMRAM] int 
  2677 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2678 ;;		 -> NULL(0), 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  2    1[COMRAM] int 
  2683 ;; Registers used:
  2684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2690 ;;      Params:         4       0       0       0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0
  2692 ;;      Temps:          5       0       0       0       0       0       0
  2693 ;;      Totals:         9       0       0       0       0       0       0
  2694 ;;Total ram usage:        9 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    1
  2697 ;; This function calls:
  2698 ;;		_putch
  2699 ;; This function is called by:
  2700 ;;		_pad
  2701 ;;		_stoa
  2702 ;;		_vfpfcnvrt
  2703 ;;		_fputs
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text14
  2708  0011FC                     __ptext14:
  2709                           	opt callstack 0
  2710  0011FC                     _fputc:
  2711                           	opt callstack 25
  2712                           
  2713                           ;incstack = 0
  2714  0011FC  5004               	movf	fputc@fp,w,c
  2715  0011FE  1005               	iorwf	fputc@fp+1,w,c
  2716  001200  B4D8               	btfsc	status,2,c
  2717  001202  D004               	goto	u880
  2718  001204  5004               	movf	fputc@fp,w,c
  2719  001206  1005               	iorwf	fputc@fp+1,w,c
  2720  001208  A4D8               	btfss	status,2,c
  2721  00120A  D004               	goto	l1567
  2722  00120C                     u880:
  2723  00120C  5002               	movf	fputc@c,w,c
  2724  00120E  EC67  F00A         	call	_putch
  2725  001212  0012               	return	
  2726  001214                     l1567:
  2727  001214  EE20 F004          	lfsr	2,4
  2728  001218  5004               	movf	fputc@fp,w,c
  2729  00121A  26D9               	addwf	fsr2l,f,c
  2730  00121C  5005               	movf	fputc@fp+1,w,c
  2731  00121E  22DA               	addwfc	fsr2h,f,c
  2732  001220  50DE               	movf	postinc2,w,c
  2733  001222  10DE               	iorwf	postinc2,w,c
  2734  001224  B4D8               	btfsc	status,2,c
  2735  001226  D016               	goto	u900
  2736  001228  EE20 F004          	lfsr	2,4
  2737  00122C  5004               	movf	fputc@fp,w,c
  2738  00122E  26D9               	addwf	fsr2l,f,c
  2739  001230  5005               	movf	fputc@fp+1,w,c
  2740  001232  22DA               	addwfc	fsr2h,f,c
  2741  001234  EE10 F002          	lfsr	1,2
  2742  001238  5004               	movf	fputc@fp,w,c
  2743  00123A  26E1               	addwf	fsr1l,f,c
  2744  00123C  5005               	movf	fputc@fp+1,w,c
  2745  00123E  22E2               	addwfc	fsr1h,f,c
  2746  001240  50DE               	movf	postinc2,w,c
  2747  001242  5CE6               	subwf	postinc1,w,c
  2748  001244  50E6               	movf	postinc1,w,c
  2749  001246  0A80               	xorlw	128
  2750  001248  6E0A               	movwf	(??_fputc+4)& (0+255),c
  2751  00124A  50DE               	movf	postinc2,w,c
  2752  00124C  0A80               	xorlw	128
  2753  00124E  580A               	subwfb	(??_fputc+4)& (0+255),w,c
  2754  001250  B0D8               	btfsc	status,0,c
  2755  001252  0012               	return	
  2756  001254                     u900:
  2757  001254  EE20 F002          	lfsr	2,2
  2758  001258  5004               	movf	fputc@fp,w,c
  2759  00125A  26D9               	addwf	fsr2l,f,c
  2760  00125C  5005               	movf	fputc@fp+1,w,c
  2761  00125E  22DA               	addwfc	fsr2h,f,c
  2762  001260  2ADE               	incf	postinc2,f,c
  2763  001262  0E00               	movlw	0
  2764  001264  22DD               	addwfc	postdec2,f,c
  2765  001266  0012               	return		;funcret
  2766  001268                     __end_of_fputc:
  2767                           	opt callstack 0
  2768                           
  2769 ;; *************** function _putch *****************
  2770 ;; Defined at:
  2771 ;;		line 112 in file "./myConfig.h"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  data            1    wreg     unsigned char 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  data            1    0[COMRAM] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2785 ;;      Params:         0       0       0       0       0       0       0
  2786 ;;      Locals:         1       0       0       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0
  2788 ;;      Totals:         1       0       0       0       0       0       0
  2789 ;;Total ram usage:        1 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_fputc
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text15
  2799  0014CE                     __ptext15:
  2800                           	opt callstack 0
  2801  0014CE                     _putch:
  2802                           	opt callstack 25
  2803                           
  2804                           ;incstack = 0
  2805                           ;putch@data stored from wreg
  2806  0014CE  6E01               	movwf	putch@data,c
  2807  0014D0                     
  2808                           ;./myConfig.h: 113:     while( ! PIR1bits.TXIF);
  2809  0014D0  A89E               	btfss	3998,4,c	;volatile
  2810  0014D2  D7FE               	goto	l1557
  2811                           
  2812                           ;./myConfig.h: 114:     TXREG = data;
  2813  0014D4  C001  FFAD         	movff	putch@data,4013	;volatile
  2814  0014D8  0012               	return		;funcret
  2815  0014DA                     __end_of_putch:
  2816                           	opt callstack 0
  2817                           
  2818 ;; *************** function _abs *****************
  2819 ;; Defined at:
  2820 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  a               2   18[COMRAM] int 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  2   18[COMRAM] int 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2834 ;;      Params:         2       0       0       0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0       0       0
  2836 ;;      Temps:          2       0       0       0       0       0       0
  2837 ;;      Totals:         4       0       0       0       0       0       0
  2838 ;;Total ram usage:        4 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_dtoa
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text16
  2848  00136A                     __ptext16:
  2849                           	opt callstack 0
  2850  00136A                     _abs:
  2851                           	opt callstack 26
  2852                           
  2853                           ;incstack = 0
  2854  00136A  BE14               	btfsc	abs@a+1,7,c
  2855  00136C  D005               	goto	u970
  2856  00136E  5014               	movf	abs@a+1,w,c
  2857  001370  E110               	bnz	l920
  2858  001372  0413               	decf	abs@a,w,c
  2859  001374  B0D8               	btfsc	status,0,c
  2860  001376  D00D               	goto	l920
  2861  001378                     u970:
  2862  001378  C013  F015         	movff	abs@a,??_abs
  2863  00137C  C014  F016         	movff	abs@a+1,??_abs+1
  2864  001380  1E15               	comf	??_abs,f,c
  2865  001382  1E16               	comf	??_abs+1,f,c
  2866  001384  4A15               	infsnz	??_abs,f,c
  2867  001386  2A16               	incf	??_abs+1,f,c
  2868  001388  C015  F013         	movff	??_abs,?_abs
  2869  00138C  C016  F014         	movff	??_abs+1,?_abs+1
  2870  001390  0012               	return	
  2871  001392                     l920:
  2872  001392  C013  F013         	movff	abs@a,?_abs
  2873  001396  C014  F014         	movff	abs@a+1,?_abs+1
  2874  00139A  0012               	return		;funcret
  2875  00139C                     __end_of_abs:
  2876                           	opt callstack 0
  2877                           
  2878 ;; *************** function ___aomod *****************
  2879 ;; Defined at:
  2880 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  dividend        8    0[COMRAM] long long 
  2883 ;;  divisor         8    8[COMRAM] long long 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  sign            1   17[COMRAM] unsigned char 
  2886 ;;  counter         1   16[COMRAM] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  8    0[COMRAM] long long 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2896 ;;      Params:        16       0       0       0       0       0       0
  2897 ;;      Locals:         2       0       0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0
  2899 ;;      Totals:        18       0       0       0       0       0       0
  2900 ;;Total ram usage:       18 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_dtoa
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text17
  2910  000F74                     __ptext17:
  2911                           	opt callstack 0
  2912  000F74                     ___aomod:
  2913                           	opt callstack 26
  2914                           
  2915                           ;incstack = 0
  2916  000F74  0E00               	movlw	0
  2917  000F76  6E12               	movwf	___aomod@sign,c
  2918  000F78  AE08               	btfss	___aomod@dividend+7,7,c
  2919  000F7A  D012               	goto	l1681
  2920  000F7C  1E08               	comf	___aomod@dividend+7,f,c
  2921  000F7E  1E07               	comf	___aomod@dividend+6,f,c
  2922  000F80  1E06               	comf	___aomod@dividend+5,f,c
  2923  000F82  1E05               	comf	___aomod@dividend+4,f,c
  2924  000F84  1E04               	comf	___aomod@dividend+3,f,c
  2925  000F86  1E03               	comf	___aomod@dividend+2,f,c
  2926  000F88  1E02               	comf	___aomod@dividend+1,f,c
  2927  000F8A  6C01               	negf	___aomod@dividend,c
  2928  000F8C  0E00               	movlw	0
  2929  000F8E  2202               	addwfc	___aomod@dividend+1,f,c
  2930  000F90  2203               	addwfc	___aomod@dividend+2,f,c
  2931  000F92  2204               	addwfc	___aomod@dividend+3,f,c
  2932  000F94  2205               	addwfc	___aomod@dividend+4,f,c
  2933  000F96  2206               	addwfc	___aomod@dividend+5,f,c
  2934  000F98  2207               	addwfc	___aomod@dividend+6,f,c
  2935  000F9A  2208               	addwfc	___aomod@dividend+7,f,c
  2936  000F9C  0E01               	movlw	1
  2937  000F9E  6E12               	movwf	___aomod@sign,c
  2938  000FA0                     l1681:
  2939  000FA0  AE10               	btfss	___aomod@divisor+7,7,c
  2940  000FA2  D010               	goto	l1685
  2941  000FA4  1E10               	comf	___aomod@divisor+7,f,c
  2942  000FA6  1E0F               	comf	___aomod@divisor+6,f,c
  2943  000FA8  1E0E               	comf	___aomod@divisor+5,f,c
  2944  000FAA  1E0D               	comf	___aomod@divisor+4,f,c
  2945  000FAC  1E0C               	comf	___aomod@divisor+3,f,c
  2946  000FAE  1E0B               	comf	___aomod@divisor+2,f,c
  2947  000FB0  1E0A               	comf	___aomod@divisor+1,f,c
  2948  000FB2  6C09               	negf	___aomod@divisor,c
  2949  000FB4  0E00               	movlw	0
  2950  000FB6  220A               	addwfc	___aomod@divisor+1,f,c
  2951  000FB8  220B               	addwfc	___aomod@divisor+2,f,c
  2952  000FBA  220C               	addwfc	___aomod@divisor+3,f,c
  2953  000FBC  220D               	addwfc	___aomod@divisor+4,f,c
  2954  000FBE  220E               	addwfc	___aomod@divisor+5,f,c
  2955  000FC0  220F               	addwfc	___aomod@divisor+6,f,c
  2956  000FC2  2210               	addwfc	___aomod@divisor+7,f,c
  2957  000FC4                     l1685:
  2958  000FC4  5009               	movf	___aomod@divisor,w,c
  2959  000FC6  100A               	iorwf	___aomod@divisor+1,w,c
  2960  000FC8  100B               	iorwf	___aomod@divisor+2,w,c
  2961  000FCA  100C               	iorwf	___aomod@divisor+3,w,c
  2962  000FCC  100D               	iorwf	___aomod@divisor+4,w,c
  2963  000FCE  100E               	iorwf	___aomod@divisor+5,w,c
  2964  000FD0  100F               	iorwf	___aomod@divisor+6,w,c
  2965  000FD2  1010               	iorwf	___aomod@divisor+7,w,c
  2966  000FD4  B4D8               	btfsc	status,2,c
  2967  000FD6  D03C               	goto	l1701
  2968  000FD8  0E01               	movlw	1
  2969  000FDA  6E11               	movwf	___aomod@counter,c
  2970  000FDC  D00A               	goto	l1691
  2971  000FDE                     l1689:
  2972  000FDE  90D8               	bcf	status,0,c
  2973  000FE0  3609               	rlcf	___aomod@divisor,f,c
  2974  000FE2  360A               	rlcf	___aomod@divisor+1,f,c
  2975  000FE4  360B               	rlcf	___aomod@divisor+2,f,c
  2976  000FE6  360C               	rlcf	___aomod@divisor+3,f,c
  2977  000FE8  360D               	rlcf	___aomod@divisor+4,f,c
  2978  000FEA  360E               	rlcf	___aomod@divisor+5,f,c
  2979  000FEC  360F               	rlcf	___aomod@divisor+6,f,c
  2980  000FEE  3610               	rlcf	___aomod@divisor+7,f,c
  2981  000FF0  2A11               	incf	___aomod@counter,f,c
  2982  000FF2                     l1691:
  2983  000FF2  AE10               	btfss	___aomod@divisor+7,7,c
  2984  000FF4  D7F4               	goto	l1689
  2985  000FF6                     u1100:
  2986  000FF6  5009               	movf	___aomod@divisor,w,c
  2987  000FF8  5C01               	subwf	___aomod@dividend,w,c
  2988  000FFA  500A               	movf	___aomod@divisor+1,w,c
  2989  000FFC  5802               	subwfb	___aomod@dividend+1,w,c
  2990  000FFE  500B               	movf	___aomod@divisor+2,w,c
  2991  001000  5803               	subwfb	___aomod@dividend+2,w,c
  2992  001002  500C               	movf	___aomod@divisor+3,w,c
  2993  001004  5804               	subwfb	___aomod@dividend+3,w,c
  2994  001006  500D               	movf	___aomod@divisor+4,w,c
  2995  001008  5805               	subwfb	___aomod@dividend+4,w,c
  2996  00100A  500E               	movf	___aomod@divisor+5,w,c
  2997  00100C  5806               	subwfb	___aomod@dividend+5,w,c
  2998  00100E  500F               	movf	___aomod@divisor+6,w,c
  2999  001010  5807               	subwfb	___aomod@dividend+6,w,c
  3000  001012  5010               	movf	___aomod@divisor+7,w,c
  3001  001014  5808               	subwfb	___aomod@dividend+7,w,c
  3002  001016  A0D8               	btfss	status,0,c
  3003  001018  D010               	goto	l1697
  3004  00101A  5009               	movf	___aomod@divisor,w,c
  3005  00101C  5E01               	subwf	___aomod@dividend,f,c
  3006  00101E  500A               	movf	___aomod@divisor+1,w,c
  3007  001020  5A02               	subwfb	___aomod@dividend+1,f,c
  3008  001022  500B               	movf	___aomod@divisor+2,w,c
  3009  001024  5A03               	subwfb	___aomod@dividend+2,f,c
  3010  001026  500C               	movf	___aomod@divisor+3,w,c
  3011  001028  5A04               	subwfb	___aomod@dividend+3,f,c
  3012  00102A  500D               	movf	___aomod@divisor+4,w,c
  3013  00102C  5A05               	subwfb	___aomod@dividend+4,f,c
  3014  00102E  500E               	movf	___aomod@divisor+5,w,c
  3015  001030  5A06               	subwfb	___aomod@dividend+5,f,c
  3016  001032  500F               	movf	___aomod@divisor+6,w,c
  3017  001034  5A07               	subwfb	___aomod@dividend+6,f,c
  3018  001036  5010               	movf	___aomod@divisor+7,w,c
  3019  001038  5A08               	subwfb	___aomod@dividend+7,f,c
  3020  00103A                     l1697:
  3021  00103A  90D8               	bcf	status,0,c
  3022  00103C  3210               	rrcf	___aomod@divisor+7,f,c
  3023  00103E  320F               	rrcf	___aomod@divisor+6,f,c
  3024  001040  320E               	rrcf	___aomod@divisor+5,f,c
  3025  001042  320D               	rrcf	___aomod@divisor+4,f,c
  3026  001044  320C               	rrcf	___aomod@divisor+3,f,c
  3027  001046  320B               	rrcf	___aomod@divisor+2,f,c
  3028  001048  320A               	rrcf	___aomod@divisor+1,f,c
  3029  00104A  3209               	rrcf	___aomod@divisor,f,c
  3030  00104C  2E11               	decfsz	___aomod@counter,f,c
  3031  00104E  D7D3               	goto	u1100
  3032  001050                     l1701:
  3033  001050  5012               	movf	___aomod@sign,w,c
  3034  001052  B4D8               	btfsc	status,2,c
  3035  001054  D010               	goto	l1705
  3036  001056  1E08               	comf	___aomod@dividend+7,f,c
  3037  001058  1E07               	comf	___aomod@dividend+6,f,c
  3038  00105A  1E06               	comf	___aomod@dividend+5,f,c
  3039  00105C  1E05               	comf	___aomod@dividend+4,f,c
  3040  00105E  1E04               	comf	___aomod@dividend+3,f,c
  3041  001060  1E03               	comf	___aomod@dividend+2,f,c
  3042  001062  1E02               	comf	___aomod@dividend+1,f,c
  3043  001064  6C01               	negf	___aomod@dividend,c
  3044  001066  0E00               	movlw	0
  3045  001068  2202               	addwfc	___aomod@dividend+1,f,c
  3046  00106A  2203               	addwfc	___aomod@dividend+2,f,c
  3047  00106C  2204               	addwfc	___aomod@dividend+3,f,c
  3048  00106E  2205               	addwfc	___aomod@dividend+4,f,c
  3049  001070  2206               	addwfc	___aomod@dividend+5,f,c
  3050  001072  2207               	addwfc	___aomod@dividend+6,f,c
  3051  001074  2208               	addwfc	___aomod@dividend+7,f,c
  3052  001076                     l1705:
  3053  001076  C001  F001         	movff	___aomod@dividend,?___aomod
  3054  00107A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3055  00107E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3056  001082  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3057  001086  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3058  00108A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3059  00108E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3060  001092  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3061  001096  0012               	return		;funcret
  3062  001098                     __end_of___aomod:
  3063                           	opt callstack 0
  3064                           
  3065 ;; *************** function ___aodiv *****************
  3066 ;; Defined at:
  3067 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  dividend        8    0[COMRAM] long long 
  3070 ;;  divisor         8    8[COMRAM] long long 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  quotient        8   18[COMRAM] long long 
  3073 ;;  sign            1   17[COMRAM] unsigned char 
  3074 ;;  counter         1   16[COMRAM] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  8    0[COMRAM] long long 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3084 ;;      Params:        16       0       0       0       0       0       0
  3085 ;;      Locals:        10       0       0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0
  3087 ;;      Totals:        26       0       0       0       0       0       0
  3088 ;;Total ram usage:       26 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_dtoa
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text18
  3098  000BC0                     __ptext18:
  3099                           	opt callstack 0
  3100  000BC0                     ___aodiv:
  3101                           	opt callstack 26
  3102                           
  3103                           ;incstack = 0
  3104  000BC0  0E00               	movlw	0
  3105  000BC2  6E12               	movwf	___aodiv@sign,c
  3106  000BC4  AE10               	btfss	___aodiv@divisor+7,7,c
  3107  000BC6  D012               	goto	l1637
  3108  000BC8  1E10               	comf	___aodiv@divisor+7,f,c
  3109  000BCA  1E0F               	comf	___aodiv@divisor+6,f,c
  3110  000BCC  1E0E               	comf	___aodiv@divisor+5,f,c
  3111  000BCE  1E0D               	comf	___aodiv@divisor+4,f,c
  3112  000BD0  1E0C               	comf	___aodiv@divisor+3,f,c
  3113  000BD2  1E0B               	comf	___aodiv@divisor+2,f,c
  3114  000BD4  1E0A               	comf	___aodiv@divisor+1,f,c
  3115  000BD6  6C09               	negf	___aodiv@divisor,c
  3116  000BD8  0E00               	movlw	0
  3117  000BDA  220A               	addwfc	___aodiv@divisor+1,f,c
  3118  000BDC  220B               	addwfc	___aodiv@divisor+2,f,c
  3119  000BDE  220C               	addwfc	___aodiv@divisor+3,f,c
  3120  000BE0  220D               	addwfc	___aodiv@divisor+4,f,c
  3121  000BE2  220E               	addwfc	___aodiv@divisor+5,f,c
  3122  000BE4  220F               	addwfc	___aodiv@divisor+6,f,c
  3123  000BE6  2210               	addwfc	___aodiv@divisor+7,f,c
  3124  000BE8  0E01               	movlw	1
  3125  000BEA  6E12               	movwf	___aodiv@sign,c
  3126  000BEC                     l1637:
  3127  000BEC  AE08               	btfss	___aodiv@dividend+7,7,c
  3128  000BEE  D012               	goto	l1643
  3129  000BF0  1E08               	comf	___aodiv@dividend+7,f,c
  3130  000BF2  1E07               	comf	___aodiv@dividend+6,f,c
  3131  000BF4  1E06               	comf	___aodiv@dividend+5,f,c
  3132  000BF6  1E05               	comf	___aodiv@dividend+4,f,c
  3133  000BF8  1E04               	comf	___aodiv@dividend+3,f,c
  3134  000BFA  1E03               	comf	___aodiv@dividend+2,f,c
  3135  000BFC  1E02               	comf	___aodiv@dividend+1,f,c
  3136  000BFE  6C01               	negf	___aodiv@dividend,c
  3137  000C00  0E00               	movlw	0
  3138  000C02  2202               	addwfc	___aodiv@dividend+1,f,c
  3139  000C04  2203               	addwfc	___aodiv@dividend+2,f,c
  3140  000C06  2204               	addwfc	___aodiv@dividend+3,f,c
  3141  000C08  2205               	addwfc	___aodiv@dividend+4,f,c
  3142  000C0A  2206               	addwfc	___aodiv@dividend+5,f,c
  3143  000C0C  2207               	addwfc	___aodiv@dividend+6,f,c
  3144  000C0E  2208               	addwfc	___aodiv@dividend+7,f,c
  3145  000C10  0E01               	movlw	1
  3146  000C12  1A12               	xorwf	___aodiv@sign,f,c
  3147  000C14                     l1643:
  3148  000C14  EE20  F013         	lfsr	2,___aodiv@quotient
  3149  000C18  0E07               	movlw	7
  3150  000C1A                     u1021:
  3151  000C1A  6ADE               	clrf	postinc2,c
  3152  000C1C  06E8               	decf	wreg,f,c
  3153  000C1E  E2FD               	bc	u1021
  3154  000C20  5009               	movf	___aodiv@divisor,w,c
  3155  000C22  100A               	iorwf	___aodiv@divisor+1,w,c
  3156  000C24  100B               	iorwf	___aodiv@divisor+2,w,c
  3157  000C26  100C               	iorwf	___aodiv@divisor+3,w,c
  3158  000C28  100D               	iorwf	___aodiv@divisor+4,w,c
  3159  000C2A  100E               	iorwf	___aodiv@divisor+5,w,c
  3160  000C2C  100F               	iorwf	___aodiv@divisor+6,w,c
  3161  000C2E  1010               	iorwf	___aodiv@divisor+7,w,c
  3162  000C30  B4D8               	btfsc	status,2,c
  3163  000C32  D046               	goto	l1665
  3164  000C34  0E01               	movlw	1
  3165  000C36  6E11               	movwf	___aodiv@counter,c
  3166  000C38  D00A               	goto	l1651
  3167  000C3A                     l1649:
  3168  000C3A  90D8               	bcf	status,0,c
  3169  000C3C  3609               	rlcf	___aodiv@divisor,f,c
  3170  000C3E  360A               	rlcf	___aodiv@divisor+1,f,c
  3171  000C40  360B               	rlcf	___aodiv@divisor+2,f,c
  3172  000C42  360C               	rlcf	___aodiv@divisor+3,f,c
  3173  000C44  360D               	rlcf	___aodiv@divisor+4,f,c
  3174  000C46  360E               	rlcf	___aodiv@divisor+5,f,c
  3175  000C48  360F               	rlcf	___aodiv@divisor+6,f,c
  3176  000C4A  3610               	rlcf	___aodiv@divisor+7,f,c
  3177  000C4C  2A11               	incf	___aodiv@counter,f,c
  3178  000C4E                     l1651:
  3179  000C4E  AE10               	btfss	___aodiv@divisor+7,7,c
  3180  000C50  D7F4               	goto	l1649
  3181  000C52                     u1040:
  3182  000C52  90D8               	bcf	status,0,c
  3183  000C54  3613               	rlcf	___aodiv@quotient,f,c
  3184  000C56  3614               	rlcf	___aodiv@quotient+1,f,c
  3185  000C58  3615               	rlcf	___aodiv@quotient+2,f,c
  3186  000C5A  3616               	rlcf	___aodiv@quotient+3,f,c
  3187  000C5C  3617               	rlcf	___aodiv@quotient+4,f,c
  3188  000C5E  3618               	rlcf	___aodiv@quotient+5,f,c
  3189  000C60  3619               	rlcf	___aodiv@quotient+6,f,c
  3190  000C62  361A               	rlcf	___aodiv@quotient+7,f,c
  3191  000C64  5009               	movf	___aodiv@divisor,w,c
  3192  000C66  5C01               	subwf	___aodiv@dividend,w,c
  3193  000C68  500A               	movf	___aodiv@divisor+1,w,c
  3194  000C6A  5802               	subwfb	___aodiv@dividend+1,w,c
  3195  000C6C  500B               	movf	___aodiv@divisor+2,w,c
  3196  000C6E  5803               	subwfb	___aodiv@dividend+2,w,c
  3197  000C70  500C               	movf	___aodiv@divisor+3,w,c
  3198  000C72  5804               	subwfb	___aodiv@dividend+3,w,c
  3199  000C74  500D               	movf	___aodiv@divisor+4,w,c
  3200  000C76  5805               	subwfb	___aodiv@dividend+4,w,c
  3201  000C78  500E               	movf	___aodiv@divisor+5,w,c
  3202  000C7A  5806               	subwfb	___aodiv@dividend+5,w,c
  3203  000C7C  500F               	movf	___aodiv@divisor+6,w,c
  3204  000C7E  5807               	subwfb	___aodiv@dividend+6,w,c
  3205  000C80  5010               	movf	___aodiv@divisor+7,w,c
  3206  000C82  5808               	subwfb	___aodiv@dividend+7,w,c
  3207  000C84  A0D8               	btfss	status,0,c
  3208  000C86  D011               	goto	l1661
  3209  000C88  5009               	movf	___aodiv@divisor,w,c
  3210  000C8A  5E01               	subwf	___aodiv@dividend,f,c
  3211  000C8C  500A               	movf	___aodiv@divisor+1,w,c
  3212  000C8E  5A02               	subwfb	___aodiv@dividend+1,f,c
  3213  000C90  500B               	movf	___aodiv@divisor+2,w,c
  3214  000C92  5A03               	subwfb	___aodiv@dividend+2,f,c
  3215  000C94  500C               	movf	___aodiv@divisor+3,w,c
  3216  000C96  5A04               	subwfb	___aodiv@dividend+3,f,c
  3217  000C98  500D               	movf	___aodiv@divisor+4,w,c
  3218  000C9A  5A05               	subwfb	___aodiv@dividend+4,f,c
  3219  000C9C  500E               	movf	___aodiv@divisor+5,w,c
  3220  000C9E  5A06               	subwfb	___aodiv@dividend+5,f,c
  3221  000CA0  500F               	movf	___aodiv@divisor+6,w,c
  3222  000CA2  5A07               	subwfb	___aodiv@dividend+6,f,c
  3223  000CA4  5010               	movf	___aodiv@divisor+7,w,c
  3224  000CA6  5A08               	subwfb	___aodiv@dividend+7,f,c
  3225  000CA8  8013               	bsf	___aodiv@quotient,0,c
  3226  000CAA                     l1661:
  3227  000CAA  90D8               	bcf	status,0,c
  3228  000CAC  3210               	rrcf	___aodiv@divisor+7,f,c
  3229  000CAE  320F               	rrcf	___aodiv@divisor+6,f,c
  3230  000CB0  320E               	rrcf	___aodiv@divisor+5,f,c
  3231  000CB2  320D               	rrcf	___aodiv@divisor+4,f,c
  3232  000CB4  320C               	rrcf	___aodiv@divisor+3,f,c
  3233  000CB6  320B               	rrcf	___aodiv@divisor+2,f,c
  3234  000CB8  320A               	rrcf	___aodiv@divisor+1,f,c
  3235  000CBA  3209               	rrcf	___aodiv@divisor,f,c
  3236  000CBC  2E11               	decfsz	___aodiv@counter,f,c
  3237  000CBE  D7C9               	goto	u1040
  3238  000CC0                     l1665:
  3239  000CC0  5012               	movf	___aodiv@sign,w,c
  3240  000CC2  B4D8               	btfsc	status,2,c
  3241  000CC4  D010               	goto	l1669
  3242  000CC6  1E1A               	comf	___aodiv@quotient+7,f,c
  3243  000CC8  1E19               	comf	___aodiv@quotient+6,f,c
  3244  000CCA  1E18               	comf	___aodiv@quotient+5,f,c
  3245  000CCC  1E17               	comf	___aodiv@quotient+4,f,c
  3246  000CCE  1E16               	comf	___aodiv@quotient+3,f,c
  3247  000CD0  1E15               	comf	___aodiv@quotient+2,f,c
  3248  000CD2  1E14               	comf	___aodiv@quotient+1,f,c
  3249  000CD4  6C13               	negf	___aodiv@quotient,c
  3250  000CD6  0E00               	movlw	0
  3251  000CD8  2214               	addwfc	___aodiv@quotient+1,f,c
  3252  000CDA  2215               	addwfc	___aodiv@quotient+2,f,c
  3253  000CDC  2216               	addwfc	___aodiv@quotient+3,f,c
  3254  000CDE  2217               	addwfc	___aodiv@quotient+4,f,c
  3255  000CE0  2218               	addwfc	___aodiv@quotient+5,f,c
  3256  000CE2  2219               	addwfc	___aodiv@quotient+6,f,c
  3257  000CE4  221A               	addwfc	___aodiv@quotient+7,f,c
  3258  000CE6                     l1669:
  3259  000CE6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3260  000CEA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3261  000CEE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3262  000CF2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3263  000CF6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3264  000CFA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3265  000CFE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3266  000D02  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3267  000D06  0012               	return		;funcret
  3268  000D08                     __end_of___aodiv:
  3269                           	opt callstack 0
  3270                           
  3271 ;; *************** function _atoi *****************
  3272 ;; Defined at:
  3273 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  s               2    7[COMRAM] PTR const unsigned char 
  3276 ;;		 -> STR_3(3), STR_2(20), STR_1(16), 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  n               2   20[COMRAM] int 
  3279 ;;  neg             2   13[COMRAM] int 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  2    7[COMRAM] int 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3289 ;;      Params:         2       0       0       0       0       0       0
  3290 ;;      Locals:         9       0       0       0       0       0       0
  3291 ;;      Temps:          4       0       0       0       0       0       0
  3292 ;;      Totals:        15       0       0       0       0       0       0
  3293 ;;Total ram usage:       15 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    1
  3296 ;; This function calls:
  3297 ;;		___wmul
  3298 ;;		_isdigit
  3299 ;;		_isspace
  3300 ;; This function is called by:
  3301 ;;		_vfpfcnvrt
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text19
  3306  000D08                     __ptext19:
  3307                           	opt callstack 0
  3308  000D08                     _atoi:
  3309                           	opt callstack 26
  3310                           
  3311                           ;incstack = 0
  3312  000D08  0E00               	movlw	0
  3313  000D0A  6E16               	movwf	atoi@n+1,c
  3314  000D0C  0E00               	movlw	0
  3315  000D0E  6E15               	movwf	atoi@n,c
  3316  000D10  0E00               	movlw	0
  3317  000D12  6E0F               	movwf	atoi@neg+1,c
  3318  000D14  0E00               	movlw	0
  3319  000D16  6E0E               	movwf	atoi@neg,c
  3320  000D18  D002               	goto	l1829
  3321  000D1A                     l1827:
  3322  000D1A  4A08               	infsnz	atoi@s,f,c
  3323  000D1C  2A09               	incf	atoi@s+1,f,c
  3324  000D1E                     l1829:
  3325  000D1E  0E01               	movlw	1
  3326  000D20  6E14               	movwf	_atoi$885,c
  3327  000D22  C008  FFF6         	movff	atoi@s,tblptrl
  3328  000D26  C009  FFF7         	movff	atoi@s+1,tblptrh
  3329  000D2A                     	if	0	;tblptru may be non-zero
  3330  000D2A                     	endif
  3331  000D2A                     	if	0	;tblptru may be non-zero
  3332  000D2A                     	endif
  3333  000D2A  0008               	tblrd		*
  3334  000D2C  50F5               	movf	tablat,w,c
  3335  000D2E  0A20               	xorlw	32
  3336  000D30  B4D8               	btfsc	status,2,c
  3337  000D32  D018               	goto	l1837
  3338  000D34  0EF7               	movlw	247
  3339  000D36  6E0A               	movwf	??_atoi& (0+255),c
  3340  000D38  0EFF               	movlw	255
  3341  000D3A  6E0B               	movwf	(??_atoi+1)& (0+255),c
  3342  000D3C  C008  FFF6         	movff	atoi@s,tblptrl
  3343  000D40  C009  FFF7         	movff	atoi@s+1,tblptrh
  3344  000D44                     	if	0	;tblptru may be non-zero
  3345  000D44                     	endif
  3346  000D44                     	if	0	;tblptru may be non-zero
  3347  000D44                     	endif
  3348  000D44  0008               	tblrd		*
  3349  000D46  50F5               	movf	tablat,w,c
  3350  000D48  6E0C               	movwf	(??_atoi+2)& (0+255),c
  3351  000D4A  6A0D               	clrf	(??_atoi+3)& (0+255),c
  3352  000D4C  500A               	movf	??_atoi,w,c
  3353  000D4E  260C               	addwf	??_atoi+2,f,c
  3354  000D50  500B               	movf	??_atoi+1,w,c
  3355  000D52  220D               	addwfc	??_atoi+3,f,c
  3356  000D54  500D               	movf	??_atoi+3,w,c
  3357  000D56  E104               	bnz	u1400
  3358  000D58  0E05               	movlw	5
  3359  000D5A  5C0C               	subwf	??_atoi+2,w,c
  3360  000D5C  A0D8               	btfss	status,0,c
  3361  000D5E  D002               	goto	l1837
  3362  000D60                     u1400:
  3363  000D60  0E00               	movlw	0
  3364  000D62  6E14               	movwf	_atoi$885,c
  3365  000D64                     l1837:
  3366  000D64  C014  F010         	movff	_atoi$885,_atoi$884
  3367  000D68  6A11               	clrf	_atoi$884+1,c
  3368  000D6A  5010               	movf	_atoi$884,w,c
  3369  000D6C  1011               	iorwf	_atoi$884+1,w,c
  3370  000D6E  B4D8               	btfsc	status,2,c
  3371  000D70  D008               	goto	l1847
  3372  000D72  D7D3               	goto	l1827
  3373  000D74                     l1843:
  3374  000D74  0E00               	movlw	0
  3375  000D76  6E0F               	movwf	atoi@neg+1,c
  3376  000D78  0E01               	movlw	1
  3377  000D7A  6E0E               	movwf	atoi@neg,c
  3378  000D7C                     l1845:
  3379  000D7C  4A08               	infsnz	atoi@s,f,c
  3380  000D7E  2A09               	incf	atoi@s+1,f,c
  3381  000D80  D02E               	goto	l1853
  3382  000D82                     l1847:
  3383  000D82  C008  FFF6         	movff	atoi@s,tblptrl
  3384  000D86  C009  FFF7         	movff	atoi@s+1,tblptrh
  3385  000D8A                     	if	0	;tblptru may be non-zero
  3386  000D8A                     	endif
  3387  000D8A                     	if	0	;tblptru may be non-zero
  3388  000D8A                     	endif
  3389  000D8A  0008               	tblrd		*
  3390  000D8C  50F5               	movf	tablat,w,c
  3391  000D8E  6E0A               	movwf	??_atoi& (0+255),c
  3392  000D90  6A0B               	clrf	(??_atoi+1)& (0+255),c
  3393                           
  3394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3395                           ; Switch size 1, requested type "simple"
  3396                           ; Number of cases is 1, Range of values is 0 to 0
  3397                           ; switch strategies available:
  3398                           ; Name         Instructions Cycles
  3399                           ; simple_byte            4     3 (average)
  3400                           ;	Chosen strategy is simple_byte
  3401  000D92  500B               	movf	??_atoi+1,w,c
  3402  000D94  0A00               	xorlw	0	; case 0
  3403  000D96  A4D8               	btfss	status,2,c
  3404  000D98  D022               	goto	l1853
  3405                           
  3406                           ; Switch size 1, requested type "simple"
  3407                           ; Number of cases is 2, Range of values is 43 to 45
  3408                           ; switch strategies available:
  3409                           ; Name         Instructions Cycles
  3410                           ; simple_byte            7     4 (average)
  3411                           ;	Chosen strategy is simple_byte
  3412  000D9A  500A               	movf	??_atoi,w,c
  3413  000D9C  0A2B               	xorlw	43	; case 43
  3414  000D9E  B4D8               	btfsc	status,2,c
  3415  000DA0  D7ED               	goto	l1845
  3416  000DA2  0A06               	xorlw	6	; case 45
  3417  000DA4  B4D8               	btfsc	status,2,c
  3418  000DA6  D7E6               	goto	l1843
  3419  000DA8  D01A               	goto	l1853
  3420  000DAA                     l1849:
  3421  000DAA  C015  F001         	movff	atoi@n,___wmul@multiplier
  3422  000DAE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3423  000DB2  0E00               	movlw	0
  3424  000DB4  6E04               	movwf	___wmul@multiplicand+1,c
  3425  000DB6  0E0A               	movlw	10
  3426  000DB8  6E03               	movwf	___wmul@multiplicand,c
  3427  000DBA  EC23  F00A         	call	___wmul	;wreg free
  3428  000DBE  C008  FFF6         	movff	atoi@s,tblptrl
  3429  000DC2  C009  FFF7         	movff	atoi@s+1,tblptrh
  3430  000DC6                     	if	0	;tblptru may be non-zero
  3431  000DC6                     	endif
  3432  000DC6                     	if	0	;tblptru may be non-zero
  3433  000DC6                     	endif
  3434  000DC6  0008               	tblrd		*
  3435  000DC8  50F5               	movf	tablat,w,c
  3436  000DCA  5E01               	subwf	?___wmul,f,c
  3437  000DCC  0E00               	movlw	0
  3438  000DCE  5A02               	subwfb	?___wmul+1,f,c
  3439  000DD0  0E30               	movlw	48
  3440  000DD2  2401               	addwf	?___wmul,w,c
  3441  000DD4  6E15               	movwf	atoi@n,c
  3442  000DD6  0E00               	movlw	0
  3443  000DD8  2002               	addwfc	?___wmul+1,w,c
  3444  000DDA  6E16               	movwf	atoi@n+1,c
  3445  000DDC  D7CF               	goto	l1845
  3446  000DDE                     l1853:
  3447  000DDE  0ED0               	movlw	208
  3448  000DE0  6E0A               	movwf	??_atoi& (0+255),c
  3449  000DE2  0EFF               	movlw	255
  3450  000DE4  6E0B               	movwf	(??_atoi+1)& (0+255),c
  3451  000DE6  C008  FFF6         	movff	atoi@s,tblptrl
  3452  000DEA  C009  FFF7         	movff	atoi@s+1,tblptrh
  3453  000DEE                     	if	0	;tblptru may be non-zero
  3454  000DEE                     	endif
  3455  000DEE                     	if	0	;tblptru may be non-zero
  3456  000DEE                     	endif
  3457  000DEE  0008               	tblrd		*
  3458  000DF0  50F5               	movf	tablat,w,c
  3459  000DF2  6E0C               	movwf	(??_atoi+2)& (0+255),c
  3460  000DF4  6A0D               	clrf	(??_atoi+3)& (0+255),c
  3461  000DF6  500A               	movf	??_atoi,w,c
  3462  000DF8  260C               	addwf	??_atoi+2,f,c
  3463  000DFA  500B               	movf	??_atoi+1,w,c
  3464  000DFC  220D               	addwfc	??_atoi+3,f,c
  3465  000DFE  500D               	movf	??_atoi+3,w,c
  3466  000E00  E106               	bnz	u1420
  3467  000E02  0E0A               	movlw	10
  3468  000E04  5C0C               	subwf	??_atoi+2,w,c
  3469  000E06  B0D8               	btfsc	status,0,c
  3470  000E08  D002               	goto	u1420
  3471  000E0A  0E01               	movlw	1
  3472  000E0C  D001               	goto	u1430
  3473  000E0E                     u1420:
  3474  000E0E  0E00               	movlw	0
  3475  000E10                     u1430:
  3476  000E10  6E12               	movwf	_atoi$886,c
  3477  000E12  6A13               	clrf	_atoi$886+1,c
  3478  000E14  5012               	movf	_atoi$886,w,c
  3479  000E16  1013               	iorwf	_atoi$886+1,w,c
  3480  000E18  A4D8               	btfss	status,2,c
  3481  000E1A  D7C7               	goto	l1849
  3482  000E1C  500E               	movf	atoi@neg,w,c
  3483  000E1E  100F               	iorwf	atoi@neg+1,w,c
  3484  000E20  A4D8               	btfss	status,2,c
  3485  000E22  D00D               	goto	l951
  3486  000E24  C015  F00A         	movff	atoi@n,??_atoi
  3487  000E28  C016  F00B         	movff	atoi@n+1,??_atoi+1
  3488  000E2C  1E0A               	comf	??_atoi,f,c
  3489  000E2E  1E0B               	comf	??_atoi+1,f,c
  3490  000E30  4A0A               	infsnz	??_atoi,f,c
  3491  000E32  2A0B               	incf	??_atoi+1,f,c
  3492  000E34  C00A  F008         	movff	??_atoi,?_atoi
  3493  000E38  C00B  F009         	movff	??_atoi+1,?_atoi+1
  3494  000E3C  0012               	return	
  3495  000E3E                     l951:
  3496  000E3E  C015  F008         	movff	atoi@n,?_atoi
  3497  000E42  C016  F009         	movff	atoi@n+1,?_atoi+1
  3498  000E46  0012               	return		;funcret
  3499  000E48                     __end_of_atoi:
  3500                           	opt callstack 0
  3501                           
  3502 ;; *************** function _isspace *****************
  3503 ;; Defined at:
  3504 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  c               2    0[COMRAM] int 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;		None
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  2    0[COMRAM] int 
  3511 ;; Registers used:
  3512 ;;		wreg, status,2, status,0
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3518 ;;      Params:         2       0       0       0       0       0       0
  3519 ;;      Locals:         1       0       0       0       0       0       0
  3520 ;;      Temps:          4       0       0       0       0       0       0
  3521 ;;      Totals:         7       0       0       0       0       0       0
  3522 ;;Total ram usage:        7 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; This function calls:
  3525 ;;		Nothing
  3526 ;; This function is called by:
  3527 ;;		_atoi
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text20
  3532  0012BE                     __ptext20:
  3533                           	opt callstack 0
  3534  0012BE                     _isspace:
  3535                           	opt callstack 26
  3536                           
  3537                           ;incstack = 0
  3538  0012BE  0E01               	movlw	1
  3539  0012C0  6E07               	movwf	_isspace$902,c
  3540  0012C2  0E20               	movlw	32
  3541  0012C4  1801               	xorwf	isspace@c,w,c
  3542  0012C6  1002               	iorwf	isspace@c+1,w,c
  3543  0012C8  B4D8               	btfsc	status,2,c
  3544  0012CA  D014               	goto	l1717
  3545  0012CC  0EF7               	movlw	247
  3546  0012CE  6E03               	movwf	??_isspace& (0+255),c
  3547  0012D0  0EFF               	movlw	255
  3548  0012D2  6E04               	movwf	(??_isspace+1)& (0+255),c
  3549  0012D4  C001  F005         	movff	isspace@c,??_isspace+2
  3550  0012D8  C002  F006         	movff	isspace@c+1,??_isspace+3
  3551  0012DC  5003               	movf	??_isspace,w,c
  3552  0012DE  2605               	addwf	??_isspace+2,f,c
  3553  0012E0  5004               	movf	??_isspace+1,w,c
  3554  0012E2  2206               	addwfc	??_isspace+3,f,c
  3555  0012E4  5006               	movf	??_isspace+3,w,c
  3556  0012E6  E104               	bnz	u1140
  3557  0012E8  0E05               	movlw	5
  3558  0012EA  5C05               	subwf	??_isspace+2,w,c
  3559  0012EC  A0D8               	btfss	status,0,c
  3560  0012EE  D002               	goto	l1717
  3561  0012F0                     u1140:
  3562  0012F0  0E00               	movlw	0
  3563  0012F2  6E07               	movwf	_isspace$902,c
  3564  0012F4                     l1717:
  3565  0012F4  C007  F001         	movff	_isspace$902,?_isspace
  3566  0012F8  6A02               	clrf	?_isspace+1,c
  3567  0012FA  0012               	return		;funcret
  3568  0012FC                     __end_of_isspace:
  3569                           	opt callstack 0
  3570                           
  3571 ;; *************** function _isdigit *****************
  3572 ;; Defined at:
  3573 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  c               2    0[COMRAM] int 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  2    0[COMRAM] int 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3587 ;;      Params:         2       0       0       0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0
  3589 ;;      Temps:          4       0       0       0       0       0       0
  3590 ;;      Totals:         6       0       0       0       0       0       0
  3591 ;;Total ram usage:        6 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_vfpfcnvrt
  3597 ;;		_atoi
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text21
  3602  00139C                     __ptext21:
  3603                           	opt callstack 0
  3604  00139C                     _isdigit:
  3605                           	opt callstack 27
  3606                           
  3607                           ;incstack = 0
  3608  00139C  0ED0               	movlw	208
  3609  00139E  6E03               	movwf	??_isdigit& (0+255),c
  3610  0013A0  0EFF               	movlw	255
  3611  0013A2  6E04               	movwf	(??_isdigit+1)& (0+255),c
  3612  0013A4  C001  F005         	movff	isdigit@c,??_isdigit+2
  3613  0013A8  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  3614  0013AC  5003               	movf	??_isdigit,w,c
  3615  0013AE  2605               	addwf	??_isdigit+2,f,c
  3616  0013B0  5004               	movf	??_isdigit+1,w,c
  3617  0013B2  2206               	addwfc	??_isdigit+3,f,c
  3618  0013B4  5006               	movf	??_isdigit+3,w,c
  3619  0013B6  E106               	bnz	u980
  3620  0013B8  0E0A               	movlw	10
  3621  0013BA  5C05               	subwf	??_isdigit+2,w,c
  3622  0013BC  B0D8               	btfsc	status,0,c
  3623  0013BE  D002               	goto	u980
  3624  0013C0  0E01               	movlw	1
  3625  0013C2  D001               	goto	u990
  3626  0013C4                     u980:
  3627  0013C4  0E00               	movlw	0
  3628  0013C6                     u990:
  3629  0013C6  6E01               	movwf	?_isdigit,c
  3630  0013C8  6A02               	clrf	?_isdigit+1,c
  3631  0013CA  0012               	return		;funcret
  3632  0013CC                     __end_of_isdigit:
  3633                           	opt callstack 0
  3634                           
  3635 ;; *************** function ___wmul *****************
  3636 ;; Defined at:
  3637 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  multiplier      2    0[COMRAM] unsigned int 
  3640 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  product         2    4[COMRAM] unsigned int 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  2    0[COMRAM] unsigned int 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0, prodl, prodh
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3652 ;;      Params:         4       0       0       0       0       0       0
  3653 ;;      Locals:         2       0       0       0       0       0       0
  3654 ;;      Temps:          0       0       0       0       0       0       0
  3655 ;;      Totals:         6       0       0       0       0       0       0
  3656 ;;Total ram usage:        6 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_atoi
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text22
  3666  001446                     __ptext22:
  3667                           	opt callstack 0
  3668  001446                     ___wmul:
  3669                           	opt callstack 26
  3670                           
  3671                           ;incstack = 0
  3672  001446  5001               	movf	___wmul@multiplier,w,c
  3673  001448  0203               	mulwf	___wmul@multiplicand,c
  3674  00144A  CFF3 F005          	movff	prodl,___wmul@product
  3675  00144E  CFF4 F006          	movff	prodh,___wmul@product+1
  3676  001452  5001               	movf	___wmul@multiplier,w,c
  3677  001454  0204               	mulwf	___wmul@multiplicand+1,c
  3678  001456  50F3               	movf	prodl,w,c
  3679  001458  2606               	addwf	___wmul@product+1,f,c
  3680  00145A  5002               	movf	___wmul@multiplier+1,w,c
  3681  00145C  0203               	mulwf	___wmul@multiplicand,c
  3682  00145E  50F3               	movf	prodl,w,c
  3683  001460  2606               	addwf	___wmul@product+1,f,c
  3684  001462  C005  F001         	movff	___wmul@product,?___wmul
  3685  001466  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3686  00146A  0012               	return		;funcret
  3687  00146C                     __end_of___wmul:
  3688                           	opt callstack 0
  3689                           
  3690                           	psect	rparam
  3691  0000                     tosu	equ	0xFFF
  3692                           tosh	equ	0xFFE
  3693                           tosl	equ	0xFFD
  3694                           stkptr	equ	0xFFC
  3695                           pclatu	equ	0xFFB
  3696                           pclath	equ	0xFFA
  3697                           pcl	equ	0xFF9
  3698                           tblptru	equ	0xFF8
  3699                           tblptrh	equ	0xFF7
  3700                           tblptrl	equ	0xFF6
  3701                           tablat	equ	0xFF5
  3702                           prodh	equ	0xFF4
  3703                           prodl	equ	0xFF3
  3704                           indf0	equ	0xFEF
  3705                           postinc0	equ	0xFEE
  3706                           postdec0	equ	0xFED
  3707                           preinc0	equ	0xFEC
  3708                           plusw0	equ	0xFEB
  3709                           fsr0h	equ	0xFEA
  3710                           fsr0l	equ	0xFE9
  3711                           wreg	equ	0xFE8
  3712                           indf1	equ	0xFE7
  3713                           postinc1	equ	0xFE6
  3714                           postdec1	equ	0xFE5
  3715                           preinc1	equ	0xFE4
  3716                           plusw1	equ	0xFE3
  3717                           fsr1h	equ	0xFE2
  3718                           fsr1l	equ	0xFE1
  3719                           bsr	equ	0xFE0
  3720                           indf2	equ	0xFDF
  3721                           postinc2	equ	0xFDE
  3722                           postdec2	equ	0xFDD
  3723                           preinc2	equ	0xFDC
  3724                           plusw2	equ	0xFDB
  3725                           fsr2h	equ	0xFDA
  3726                           fsr2l	equ	0xFD9
  3727                           status	equ	0xFD8


Data Sizes:
    Strings     39
    Constant    0
    Data        27
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     19      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), AMPM(BANK0[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), AMPM(BANK0[20]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[3]), STR_2(CODE[20]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S906_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[3]), STR_2(CODE[20]), STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[3]), STR_2(CODE[20]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[3]), STR_2(CODE[20]), STR_1(CODE[16]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), AMPM(BANK0[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), AMPM(BANK0[20]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), AMPM(BANK0[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   12309
                                             14 BANK0      5     5      0
                             _printf
                   _systemInitialize
 ---------------------------------------------------------------------------------
 (1) _systemInitialize                                     0     0      0       0
                         _portConfig
                         _serialComm
             _set_osc_p18f45k22_4MHz
                       _timer0Config
 ---------------------------------------------------------------------------------
 (2) _timer0Config                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_osc_p18f45k22_4MHz                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialComm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _portConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   11792
                                              2 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11506
                                             88 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   11130
                                             64 COMRAM    24    18      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2095
                                             10 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5258
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3609
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1647
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1246
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1290
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     449
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit
         _stoa
           _fputc
             _putch
           _strlen
   _systemInitialize
     _portConfig
     _serialComm
     _set_osc_p18f45k22_4MHz
     _timer0Config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     13      56       4       53.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B4       9        0.0%
DATA                 0      0      B4      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 16 21:47:37 2019

                             l63 14A6              ___wmul@multiplicand 0003  
      __size_of_systemInitialize 0012                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l108 1102  
                            l151 1192                              l162 09EE  
                            l164 09F6                              l191 0EAE  
                            l920 1392                              l951 0E3E  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                            u900 1254                              u880 120C  
                            u970 1378                              u980 13C4  
                            u990 13C6                              _abs 136A  
                            _pad 1162                              prod 000FF3  
                            wreg 000FE8                     __CFG_LVP$OFF 000000  
                           ?_abs 0013                             l2019 10B2  
                           l2055 114A                             l1601 118A  
                           l2049 113A                             l1611 11E2  
                           l1603 119C                             l2059 1156  
                           l1701 1050                             l1607 11B4  
                           l1705 1076                             l1801 0EC6  
                           l1651 0C4E                             l1643 0C14  
                           l1717 12F4                             l1661 0CAA  
                           l1637 0BEC                             l1557 14D0  
                           l1581 131C                             l1741 0A10  
                           l1805 0EDE                             l1901 06A6  
                           l1567 1214                             l1727 09D0  
                           l1823 0F56                             l1815 0F22  
                           l1903 06E8                             l1649 0C3A  
                           l1665 0CC0                             l1681 0FA0  
                           l1577 1306                             l1585 13D6  
                           l1745 0A1E                             l1809 0EFC  
                           l1843 0D74                             l1827 0D1A  
                           l1691 0FF2                             l1587 13DA  
                           l1755 0B16                             l1819 0F3E  
                           l1915 0756                             l1853 0DDE  
                           l1845 0D7C                             l1837 0D64  
                           l1829 0D1E                             l1669 0CE6  
                           l1685 0FC4                             l1597 117C  
                           l1917 0774                             l1847 0D82  
                           l1775 0B7E                             l1791 0E72  
                           l1943 08E8                             l1935 087A  
                           l1919 0782                             l1849 0DAA  
                           l1697 103A                             l1689 0FDE  
                           l1953 092E                             l1881 0684  
                           l1779 0B96                             l1949 0924  
                           l1893 0696                             l1885 068A  
                           l1877 0670                             ?_pad 0012  
                           l1879 0674                             l1959 0946  
                           l1897 069C                             l1889 0690  
                           l1995 127C                             l1997 12A2  
                           STR_1 0615                             STR_2 0601  
                           STR_3 0625                             _AMPM 008F  
                           u1100 0FF6                             u1021 0C1A  
                           u1040 0C52                             u1210 0A0A  
                           u1140 12F0                             u1220 0B24  
                           u1301 0E52                             u1150 09A2  
                           u1400 0D60                             u1240 0B46  
                           u1160 09A4                             u1241 0B44  
                           u1250 0B54                             u1420 0E0E  
                           u1260 0B5A                             _LATA 000F89  
                           u1430 0E10                             u1190 09E4  
                           u1350 0EF2                             u1510 07BA  
                           _LATB 000F8A                             u1280 0B68  
                           u1520 07BC                             _LATD 000F8C  
                           u1530 07C8                             u1380 0F6A  
                           u1550 07FC                      main@myClock 00B1  
                           abs@a 0013                             _dbuf 0068  
                           _atoi 0D08                             _main 1098  
                           _dtoa 097A                             _prec 0064  
                           _nout 0060                             pad@i 0019  
                           pad@p 0016                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001B  
                           fsr2l 000FD9                             _stoa 0E48  
                  __CFG_BORV$190 000000                             prodh 000FF4  
                           prodl 000FF3                             start 0000  
                  __CFG_IESO$OFF 000000                     ___param_bank 000000  
                          ??_abs 0015                            ??_pad 0018  
                __end_of___aodiv 0D08                            ?_atoi 0008  
                          ?_main 0001                            ?_dtoa 001D  
                __end_of___aomod 1098                            _ADRES 000FC3  
                          ?_stoa 000B                            _T0CON 000FD5  
                   vfpfcnvrt@fmt 0043                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISD 000F95  
                          _TXREG 000FAD                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
                          _flags 0066                            _fputc 11FC  
                          _fputs 12FC                  __end_of_isdigit 13CC  
             __CFG_MCLRE$EXTMCLR 000000                            atoi@n 0015  
                          pad@fp 0012                            atoi@s 0008  
                          _width 0062                            _putch 14CE  
                          dtoa@d 001F                            dtoa@i 003F  
                          dtoa@n 0037                            dtoa@p 0031  
                          dtoa@s 0035                            dtoa@w 0033  
                __end_of_isspace 12FC                            tablat 000FF5  
                          plusw1 000FE3                            plusw2 000FDB  
                          stoa@i 0017                            stoa@l 001F  
                          stoa@p 001D                            stoa@s 000D  
                          stoa@w 0019                            status 000FD8  
                 __CFG_HFOFST$ON 000000                   __CFG_PBADEN$ON 000000  
                __initialization 1334                     __end_of_atoi 0E48  
                   __end_of_main 1162                     __end_of_dtoa 0BC0  
                   __end_of_stoa 0F74                           ??_atoi 000A  
                         ??_main 005F                           ??_dtoa 0027  
                         ??_stoa 000F                    __activetblptr 000002  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           ?_fputc 0002  
                         ?_fputs 000B                           _ANSELA 000F38  
                         ?_putch 0001                           _ANSELB 000F39  
                         _ANSELD 000F3B                   __CFG_WDTEN$OFF 000000  
                         _RCSTA1 000FAB                           _OSCCON 000FD3  
                  vfpfcnvrt@done 0055                           _SPBRG1 000FAF  
                         _TXSTA1 000FAC                   __CFG_XINST$OFF 000000  
                   vfprintf@cfmt 00A3                        ??___aodiv 0011  
                      ??___aomod 0011                           ___wmul 1446  
                 __CFG_STVREN$ON 000000                           clear_0 135A  
               _systemInitialize 1488                           _printf 141E  
                         pad@buf 0014                           dtoa@fp 001D  
                         _strlen 13CC                           fputc@c 0002  
                         fputs@c 000F                           fputs@i 0010  
                         fputs@s 000B                        ??_isdigit 0003  
        ?_set_osc_p18f45k22_4MHz 0001                     __mediumconst 0000  
                      ??_isspace 0003                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                         stoa@cp 001B                           stoa@fp 000B  
               __end_of_vfprintf 12BE                       __accesstop 0060  
        __end_of__initialization 1360                    ___rparam_used 000001  
                 __pcstackCOMRAM 0001                     __pidataBANK0 146C  
                  __end_of_fputc 1268                    __end_of_fputs 1334  
                  __end_of_putch 14DA   __end_of_set_osc_p18f45k22_4MHz 14AC  
                        ??_fputc 0006                          ??_fputs 000F  
                        ??_putch 0001                       __pbssBANK0 0060  
                __CFG_PLLCFG$OFF 000000               __CFG_CCP2MX$PORTB3 000000  
                        ?___wmul 0001               __CFG_CCP3MX$PORTB5 000000  
                        ?_printf 00A5                          ?_strlen 0001  
                        _OSCCON2 000FD2               __size_of_vfpfcnvrt 0350  
                        _OSCTUNE 000F9B                  __CFG_PWRTEN$OFF 000000  
                        __Hparam 0000                          __Lparam 0000  
                  ?_timer0Config 0001                          ___aodiv 0BC0  
                        ___aomod 0F74                  __size_of___wmul 0026  
                      ?_vfprintf 0059                     __psmallconst 0600  
                        __pcinit 1334                          __ramtop 0600  
                        __ptext0 1098                          __ptext1 1488  
                        __ptext2 14BE                          __ptext3 149A  
                        __ptext4 14AC                          __ptext5 13F6  
                        __ptext6 141E                          __ptext7 1268  
                        __ptext8 062A                          __ptext9 0E48  
                __size_of_printf 0028                  __size_of_strlen 002A  
                   __size_of_abs 0032                     __size_of_pad 009A  
                        _isdigit 139C                          _isspace 12BE  
                        atoi@neg 000E             end_of_initialization 1360  
       __end_of_systemInitialize 149A                          fputc@fp 0004  
                  __Lmediumconst 0000                          fputs@fp 000D  
                     _serialComm 14AC                   ??_timer0Config 0001  
              __end_of_vfpfcnvrt 097A                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                     ??_vfprintf 005F                          strlen@a 0003  
                        strlen@s 0001                       _portConfig 13F6  
                      _TRISCbits 000F94                      vfpfcnvrt@ap 0045  
                    vfpfcnvrt@cp 0053                      vfpfcnvrt@fp 0041  
                    vfpfcnvrt@ll 004B                   __end_of___wmul 146C  
                 __end_of_printf 1446                   __end_of_strlen 13F6  
            start_initialization 1334                      __end_of_abs 139C  
                    __end_of_pad 11FC                      ?_serialComm 0001  
                    vfprintf@fmt 005B                         ??___wmul 0005  
                    __pdataBANK0 0088                      ?_portConfig 0001  
                       ??_printf 005F                         ??_strlen 0003  
                  __pcstackBANK0 00A3                 ___aodiv@dividend 0001  
           __end_of_timer0Config 14CE                         ?___aodiv 0001  
                       ?___aomod 0001                 ___aodiv@quotient 0013  
               __CFG_PRICLKEN$ON 000000                __size_of_vfprintf 0056  
                    __smallconst 0600                         _BAUDCON1 000FB8  
                       ?_isdigit 0001                         ?_isspace 0001  
            __size_of_serialComm 0012                   __size_of_fputc 006C  
                 __size_of_fputs 0038                   __size_of_putch 000C  
              ?_systemInitialize 0001                   ___wmul@product 0005  
            __size_of_portConfig 0028               ??_systemInitialize 0001  
                       _PIR1bits 000F9E                 __CFG_WDTPS$32768 000000  
       ??_set_osc_p18f45k22_4MHz 0001                        _vfpfcnvrt 062A  
                     _ADCON0bits 000FC2                ___wmul@multiplier 0001  
                      copy_data0 1348                         __Hrparam 0000  
                     vfprintf@ap 005D                         __Lrparam 0000  
                     vfprintf@fp 0059               __CFG_BOREN$SBORDIS 000000  
              __CFG_P2BMX$PORTD2 000000                 __size_of___aodiv 0148  
               __size_of___aomod 0124                       ?_vfpfcnvrt 0041  
                ___aodiv@divisor 0009                  ___aodiv@counter 0011  
          __size_of_timer0Config 0010                         _atoi$884 0010  
                       _atoi$885 0014                         _atoi$886 0012  
               __size_of_isdigit 0030                         _dtoa$400 002F  
               __size_of_isspace 003E                         __ptext10 097A  
                       __ptext11 1162                         __ptext20 12BE  
                       __ptext12 13CC                         __ptext21 139C  
                       __ptext13 12FC                         __ptext22 1446  
                       __ptext14 11FC                         __ptext15 14CE  
                       __ptext16 136A                         __ptext17 0F74  
                       __ptext18 0BC0                         __ptext19 0D08  
                  __size_of_atoi 0140                    __size_of_main 00CA  
                  __size_of_dtoa 0246                    __size_of_stoa 012C  
                   ??_serialComm 0001                        stoa@F1139 0088  
                   _timer0Config 14BE  __size_of_set_osc_p18f45k22_4MHz 0012  
                       _vfprintf 1268                        printf@fmt 00A5  
                   ??_portConfig 0001                      _isspace$902 0007  
               ___aomod@dividend 0001                        putch@data 0001  
                     _INTCONbits 000FF2                         isdigit@c 0001  
             __end_of_serialComm 14BE                         isspace@c 0001  
             __end_of_portConfig 141E                       _OSCCONbits 000FD3  
                       printf@ap 00AF                  ___aomod@divisor 0009  
                    ??_vfpfcnvrt 0047                    _vfpfcnvrt$426 0057  
                       stoa@nuls 0010                  ___aomod@counter 0011  
              __CFG_T3CMX$PORTC0 000000           _set_osc_p18f45k22_4MHz 149A  
                   ___aodiv@sign 0012                __CFG_FOSC$INTIO67 000000  
                   ___aomod@sign 0012  
